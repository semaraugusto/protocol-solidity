/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenWrapperHandler,
  TokenWrapperHandlerInterface,
} from "../TokenWrapperHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "initialResourceIDs",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "initialContractAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_counts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_updateRecords",
    outputs: [
      {
        internalType: "address",
        name: "_tokenWrapperAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_executionChainID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "bytes32",
        name: "_resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_updateValue",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "updateNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionChainId",
        type: "uint256",
      },
    ],
    name: "getUpdateRecord",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_tokenWrapperAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_executionChainID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_nonce",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "functionSig",
            type: "bytes4",
          },
          {
            internalType: "bytes32",
            name: "_resourceID",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "_updateValue",
            type: "bytes32",
          },
        ],
        internalType: "struct TokenWrapperHandler.UpdateRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d7e38038062000d7e8339810160408190526200003491620001f1565b8051825114620000615760405162461bcd60e51b81526004016200005890620002ca565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0385161781555b8251811015620000fe57620000e9838281518110620000ac57634e487b7160e01b600052603260045260246000fd5b6020026020010151838381518110620000d557634e487b7160e01b600052603260045260246000fd5b60200260200101516200010860201b60201c565b80620000f58162000379565b9150506200007d565b50505050620003b7565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b80516001600160a01b03811681146200016f57600080fd5b919050565b600082601f83011262000185578081fd5b815160206200019e620001988362000353565b62000327565b8281528181019085830183850287018401881015620001bb578586fd5b855b85811015620001e457620001d18262000157565b84529284019290840190600101620001bd565b5090979650505050505050565b60008060006060848603121562000206578283fd5b620002118462000157565b602085810151919450906001600160401b038082111562000230578485fd5b818701915087601f83011262000244578485fd5b815162000255620001988262000353565b81815284810190848601868402860187018c101562000272578889fd5b8895505b838610156200029657805183526001959095019491860191860162000276565b5060408a01519097509450505080831115620002b0578384fd5b5050620002c08682870162000174565b9150509250925092565b6020808252603c908201527f696e697469616c5265736f7572636549447320616e6420696e697469616c436f60408201527f6e7472616374416464726573736573206c656e206d69736d6174636800000000606082015260800190565b6040518181016001600160401b03811182821017156200034b576200034b620003a1565b604052919050565b60006001600160401b038211156200036f576200036f620003a1565b5060209081020190565b60006000198214156200039a57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6109b780620003c76000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b8fa373611610066578063b8fa37361461013b578063c54c2a1114610150578063d75a068314610163578063e248cff214610176578063ec97d3b4146101895761009e565b80630c9e9e14146100a3578063318c136e146100d15780633408e470146100e65780636b84724a146100fb5780637f79bea81461011b575b600080fd5b6100b66100b1366004610737565b61019c565b6040516100c8969594939291906107b6565b60405180910390f35b6100d96101ea565b6040516100c89190610789565b6100ee6101f9565b6040516100c891906107fe565b61010e610109366004610737565b6101fd565b6040516100c891906108f5565b61012e61012936600461065c565b61027b565b6040516100c891906107f3565b61014e610149366004610695565b610290565b005b6100d961015e36600461067d565b6102a6565b6100ee61017136600461067d565b6102c1565b61014e6101843660046106c0565b6102d3565b6100ee61019736600461065c565b61057e565b600460208181526000938452604080852090915291835291208054600182015460028301546003840154948401546005909401546001600160a01b03909316949193909260e09290921b9186565b6000546001600160a01b031681565b4690565b61020561060b565b50600090815260046020818152604080842094845293815291839020835160c08101855281546001600160a01b03168152600182015493810193909352600281015493830193909352600383015460e01b6001600160e01b0319166060830152820154608082015260059091015460a082015290565b60036020526000908152604090205460ff1681565b610298610590565b6102a282826105bc565b5050565b6001602052600090815260409020546001600160a01b031681565b60056020526000908152604090205481565b6102db610590565b60008080806102ec85870187610758565b92965090945092509050836102ff6101f9565b146103255760405162461bcd60e51b815260040161031c9061083e565b60405180910390fd5b6000878152600160205260409020546001600160a01b0316806001600160e01b03198416638c6aa3f560e01b14156103c057604051638c6aa3f560e01b81526001600160a01b03821690638c6aa3f5906103899060f887901c908990600401610947565b600060405180830381600087803b1580156103a357600080fd5b505af11580156103b7573d6000803e3d6000fd5b5050505061046e565b6001600160e01b0319841663f5d82b6b60e01b141561040b5760405163f5d82b6b60e01b81526001600160a01b0382169063f5d82b6b9061038990606087901c90899060040161079d565b6001600160e01b0319841663abe7f1ab60e01b14156104565760405163abe7f1ab60e01b81526001600160a01b0382169063abe7f1ab9061038990606087901c90899060040161079d565b60405162461bcd60e51b815260040161031c90610875565b6001600160a01b03821660009081526003602052604090205460ff166104a65760405162461bcd60e51b815260040161031c906108a3565b6000868152600560205260408120805482906104c19061095a565b91829055506040805160c0810182526001600160a01b03958616815260208082018b81528284019a8b526001600160e01b03199990991660608301908152608083019e8f5260a0830198895260009b8c526004808352848d20958d529490915291909920985189546001600160a01b031916951694909417885594516001880155505092516002850155915160038401805463ffffffff191660e09290921c91909117905594519482019490945592516005909301929092555050565b60026020526000908152604090205481565b6000546001600160a01b031633146105ba5760405162461bcd60e51b815260040161031c90610807565b565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b80356001600160a01b038116811461065757600080fd5b919050565b60006020828403121561066d578081fd5b61067682610640565b9392505050565b60006020828403121561068e578081fd5b5035919050565b600080604083850312156106a7578081fd5b823591506106b760208401610640565b90509250929050565b6000806000604084860312156106d4578081fd5b83359250602084013567ffffffffffffffff808211156106f2578283fd5b818601915086601f830112610705578283fd5b813581811115610713578384fd5b876020828501011115610724578384fd5b6020830194508093505050509250925092565b60008060408385031215610749578182fd5b50508035926020909101359150565b6000806000806080858703121561076d578081fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03969096168652602086019490945260408501929092526001600160e01b0319166060840152608083015260a082015260c00190565b901515815260200190565b90815260200190565b6020808252601e908201527f73656e646572206d7573742062652062726964676520636f6e74726163740000604082015260600190565b6020808252601e908201527f6e6f7420657865637574696e67206f6e20636f727265637420636861696e0000604082015260600190565b602080825260149082015273496e76616c69642066756e6374696f6e2073696760601b604082015260600190565b60208082526032908201527f70726f766964656420676f7665726e656420746f6b656e2061646472657373206040820152711a5cc81b9bdd081dda1a5d195b1a5cdd195960721b606082015260800190565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301516001600160e01b031916908201526080808301519082015260a0918201519181019190915260c00190565b60ff929092168252602082015260400190565b600060001982141561097a57634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212206a7b10ea3a6368f71c829248376e49c7b3b346ffe8c6442b6121281d2ee0c63c64736f6c63430008000033";

export class TokenWrapperHandler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenWrapperHandler> {
    return super.deploy(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      overrides || {}
    ) as Promise<TokenWrapperHandler>;
  }
  getDeployTransaction(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      overrides || {}
    );
  }
  attach(address: string): TokenWrapperHandler {
    return super.attach(address) as TokenWrapperHandler;
  }
  connect(signer: Signer): TokenWrapperHandler__factory {
    return super.connect(signer) as TokenWrapperHandler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenWrapperHandlerInterface {
    return new utils.Interface(_abi) as TokenWrapperHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenWrapperHandler {
    return new Contract(address, _abi, signerOrProvider) as TokenWrapperHandler;
  }
}
