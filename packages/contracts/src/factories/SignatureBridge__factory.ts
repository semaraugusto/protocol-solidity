/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureBridge,
  SignatureBridgeInterface,
} from "../SignatureBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initialGovernor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "GovernanceOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "originChainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum SignatureBridge.ProposalStatus",
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "ProposalEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "originChainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "enum SignatureBridge.ProposalStatus",
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
    ],
    name: "ProposalVote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    name: "RecoveredAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "RELAYER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_chainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_counts",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_expiry",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_fee",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToHandlerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "resourceIDs",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "newBridge",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminMigrateBridgeWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "handlerAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "executionContextAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminSetResourceWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
    ],
    name: "checkPubKey",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "executeProposalWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "isSignatureFromGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignaturePubKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b3a38038062001b3a8339810160408190526200003491620001c9565b600080546001600160a81b0319166101006001600160a01b03868116820292909217808455604051879492909104909216917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908290a35083600281905550620000a9826200011160201b62000be11760201c565b600360006101000a8154816001600160801b0302191690836001600160801b03160217905550620000e5816200017060201b62000c3a1760201c565b600360106101000a81548164ffffffffff021916908364ffffffffff1602179055505050505062000216565b6000600160801b82106200016c5760405162461bcd60e51b815260206004820152601e60248201527f76616c756520646f6573206e6f742066697420696e203132382062697473000060448201526064015b60405180910390fd5b5090565b60006501000000000082106200016c5760405162461bcd60e51b815260206004820152601d60248201527f76616c756520646f6573206e6f742066697420696e2034302062697473000000604482015260640162000163565b60008060008060808587031215620001e057600080fd5b845160208601519094506001600160a01b03811681146200020057600080fd5b6040860151606090960151949790965092505050565b61191480620002266000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638755bcad116100b8578063c5ec89701161007c578063c5ec8970146102a5578063c7af3352146102d3578063d4066f4c146102eb578063d75a0683146102fe578063f1835db714610341578063f2fde38b1461035457600080fd5b80638755bcad1461022457806387ac4f5114610237578063926d7d7f1461024a578063beab713114610271578063c5b37c221461027a57600080fd5b80633408e470116100ff5780633408e470146101b95780635c975abb146101c95780636aca1be3146101e0578063715018a6146101f357806384db809f146101fb57600080fd5b806306afa63d1461013c5780630bf71175146101515780630c340a24146101645780631ed13d1b146101935780631eee6bc8146101a6575b600080fd5b61014f61014a366004611517565b610367565b005b61014f61015f366004611332565b6105c0565b60005461010090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61014f6101a13660046114bd565b61066a565b61014f6101b43660046112ca565b6106ba565b465b60405190815260200161018a565b60005460ff165b604051901515815260200161018a565b61014f6101ee3660046114bd565b6107ef565b61014f610886565b61017661020936600461141f565b6005602052600090815260409020546001600160a01b031681565b6101d06102323660046114bd565b610904565b61014f610245366004611380565b61093a565b6101bb7fe2b7fb3b832174769106daebcfd6d1970523240dda11281102db9363b83b0dc481565b6101bb60025481565b60035461028d906001600160801b031681565b6040516001600160801b03909116815260200161018a565b6003546102bd90600160801b900464ffffffffff1681565b60405164ffffffffff909116815260200161018a565b60005461010090046001600160a01b031633146101d0565b6101d06102f936600461147b565b610a7b565b61032861030c36600461141f565b60046020526000908152604090205467ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161018a565b6101d061034f366004611438565b610ab1565b61014f6103623660046112a8565b610ba6565b8282604051610377929190611608565b60405180910390208160006040518060400160405280601c81526020016000805160206118bf83398151915281525090506103d381846040516020016103be929190611618565b60405160208183030381529060405283610904565b6103f85760405162461bcd60e51b81526004016103ef9061170f565b60405180910390fd5b366000610408602082898b6117ab565b9092509050600061041982846117d5565b9050600061042b6020601c85876117ab565b610434916117f3565b905060e081901c4663ffffffff161461048f5760405162461bcd60e51b815260206004820152601860248201527f657865637574696e67206f6e2077726f6e6720636861696e000000000000000060448201526064016103ef565b61049882610c91565b600082815260056020908152604091829020548251808401909352600683526568686820257360d01b918301919091526001600160a01b0316906104dc9082610cd6565b6000818c8c6040516020016104f39392919061159d565b6040516020818303038152906040528051906020012090506000829050806001600160a01b031663e248cff2868f8f6040518463ffffffff1660e01b815260040161054093929190611669565b600060405180830381600087803b15801561055a57600080fd5b505af115801561056e573d6000803e3d6000fd5b505050507f66d3a93bc0d53bcda132e74c043dee3c4a0e88451b90ca51439eee8ef22ea1da8e6003848e6040516105a8949392919061175e565b60405180910390a15050505050505050505050505050565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a32300000000081525090506106408184604051602001610622919060609190911b6001600160601b031916815260140190565b60408051601f19818403018152908290526103be929160200161163a565b61065c5760405162461bcd60e51b81526004016103ef906116c9565b61066583610d1f565b505050565b81516020830120600061067d8284610ded565b6040519091506001600160a01b038216907f391f5edd7209ba797e8055bce97cab2d1a480a2849b0c7fe965c370457166dc490600090a250505050565b6040516001600160601b0319606086811b821660208401526034830186905284901b166054820152606801604051602081830303815290604052805190602001208160006040518060400160405280601c81526020016000805160206118bf833981519152815250905061073a81846040516020016103be929190611618565b6107565760405162461bcd60e51b81526004016103ef9061170f565b61075f87610e11565b6000868152600560205260409081902080546001600160a01b0319166001600160a01b038a81169182179092559151635c7d1b9b60e11b815260048101899052908716602482015288919063b8fa373690604401600060405180830381600087803b1580156107cd57600080fd5b505af11580156107e1573d6000803e3d6000fd5b505050505050505050505050565b604080518082018252601c81527f19457468657265756d205369676e6564204d6573736167653a0a3634000000006020808301919091528451858201209251919291829161085a9161084591869189910161163a565b60405160208183030381529060405285610904565b6108765760405162461bcd60e51b81526004016103ef906116c9565b61087f81610d1f565b5050505050565b60005461010090046001600160a01b031633146108b55760405162461bcd60e51b81526004016103ef906116c9565b600080546040516101009091046001600160a01b0316907f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908390a360008054610100600160a81b0319169055565b81516020830120600090816109198285610ded565b60005461010090046001600160a01b03908116911614925050505b92915050565b83838360405160200161094f939291906115c9565b604051602081830303815290604052805190602001208160006040518060400160405280601c81526020016000805160206118bf83398151915281525090506109a481846040516020016103be929190611618565b6109c05760405162461bcd60e51b81526004016103ef9061170f565b60005b86811015610a71576000600560008a8a858181106109e3576109e3611892565b60209081029290920135835250810191909152604090810160002054905163d7f5b35960e01b81526001600160a01b0389811660048301529091169150819063d7f5b35990602401600060405180830381600087803b158015610a4557600080fd5b505af1158015610a59573d6000803e3d6000fd5b50505050508080610a6990611853565b9150506109c3565b5050505050505050565b6000336001600160a01b03168383604051610a97929190611608565b6040519081900390206001600160a01b0316149392505050565b6000806040518060400160405280601c81526020016000805160206118bf833981519152815250905060008187604051602001610aef929190611618565b604051602081830303815290604052805190602001209050610b1f6000546001600160a01b036101009091041690565b6001600160a01b031660018288888860405160008152602001604052604051610b64949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610b86573d6000803e3d6000fd5b505050602060405103516001600160a01b03161492505050949350505050565b60005461010090046001600160a01b03163314610bd55760405162461bcd60e51b81526004016103ef906116c9565b610bde81610d1f565b50565b6000600160801b8210610c365760405162461bcd60e51b815260206004820152601e60248201527f76616c756520646f6573206e6f742066697420696e203132382062697473000060448201526064016103ef565b5090565b6000650100000000008210610c365760405162461bcd60e51b815260206004820152601d60248201527f76616c756520646f6573206e6f742066697420696e203430206269747300000060448201526064016103ef565b610bde81604051602401610ca791815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b179052610e55565b610d1b8282604051602401610cec92919061169f565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610e55565b5050565b6001600160a01b038116610d875760405162461bcd60e51b815260206004820152602960248201527f476f7665726e61626c653a206e6577206f776e657220697320746865207a65726044820152686f206164647265737360b81b60648201526084016103ef565b600080546040516001600160a01b038085169361010090930416917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f791a3600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6000806000610dfc8585610e76565b91509150610e0981610ee6565b509392505050565b6040516001600160a01b0382166024820152610bde9060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080825160411415610ead5760208301516040840151606085015160001a610ea1878285856110a1565b94509450505050610edf565b825160401415610ed75760208301516040840151610ecc86838361118e565b935093505050610edf565b506000905060025b9250929050565b6000816004811115610efa57610efa61187c565b1415610f035750565b6001816004811115610f1757610f1761187c565b1415610f655760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103ef565b6002816004811115610f7957610f7961187c565b1415610fc75760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103ef565b6003816004811115610fdb57610fdb61187c565b14156110345760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103ef565b60048160048111156110485761104861187c565b1415610bde5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103ef565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156110d85750600090506003611185565b8460ff16601b141580156110f057508460ff16601c14155b156111015750600090506004611185565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611155573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661117e57600060019250925050611185565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b016111af878288856110a1565b935093505050935093915050565b80356001600160a01b03811681146111d457600080fd5b919050565b60008083601f8401126111eb57600080fd5b50813567ffffffffffffffff81111561120357600080fd5b602083019150836020828501011115610edf57600080fd5b600082601f83011261122c57600080fd5b813567ffffffffffffffff80821115611247576112476118a8565b604051601f8301601f19908116603f0116810190828211818310171561126f5761126f6118a8565b8160405283815286602085880101111561128857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156112ba57600080fd5b6112c3826111bd565b9392505050565b600080600080608085870312156112e057600080fd5b6112e9856111bd565b9350602085013592506112fe604086016111bd565b9150606085013567ffffffffffffffff81111561131a57600080fd5b6113268782880161121b565b91505092959194509250565b6000806040838503121561134557600080fd5b61134e836111bd565b9150602083013567ffffffffffffffff81111561136a57600080fd5b6113768582860161121b565b9150509250929050565b6000806000806060858703121561139657600080fd5b843567ffffffffffffffff808211156113ae57600080fd5b818701915087601f8301126113c257600080fd5b8135818111156113d157600080fd5b8860208260051b85010111156113e657600080fd5b602083019650809550506113fc602088016111bd565b9350604087013591508082111561141257600080fd5b506113268782880161121b565b60006020828403121561143157600080fd5b5035919050565b6000806000806080858703121561144e57600080fd5b84359350602085013560ff8116811461146657600080fd5b93969395505050506040820135916060013590565b6000806020838503121561148e57600080fd5b823567ffffffffffffffff8111156114a557600080fd5b6114b1858286016111d9565b90969095509350505050565b600080604083850312156114d057600080fd5b823567ffffffffffffffff808211156114e857600080fd5b6114f48683870161121b565b9350602085013591508082111561150a57600080fd5b506113768582860161121b565b6000806000806060858703121561152d57600080fd5b84359350602085013567ffffffffffffffff8082111561154c57600080fd5b611558888389016111d9565b9095509350604087013591508082111561141257600080fd5b60008151808452611589816020860160208601611823565b601f01601f19169290920160200192915050565b6bffffffffffffffffffffffff198460601b168152818360148301376000910160140190815292915050565b60006001600160fb1b038411156115df57600080fd5b8360051b8086843760609390931b6001600160601b031916919092019081526014019392505050565b8183823760009101908152919050565b6000835161162a818460208801611823565b9190910191825250602001919050565b6000835161164c818460208801611823565b835190830190611660818360208801611823565b01949350505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b6040815260006116b26040830185611571565b905060018060a01b03831660208301529392505050565b60208082526026908201527f476f7665726e61626c653a2063616c6c6572206973206e6f742074686520676f6040820152653b32b93737b960d11b606082015260800190565b6020808252602f908201527f7369676e656420627920676f7665726e6f723a204e6f742076616c696420736960408201526e3390333937b69033b7bb32b93737b960891b606082015260800190565b84815260006005851061178157634e487b7160e01b600052602160045260246000fd5b846020830152836040830152608060608301526117a16080830184611571565b9695505050505050565b600080858511156117bb57600080fd5b838611156117c857600080fd5b5050820193919092039150565b8035602083101561093457600019602084900360031b1b1692915050565b6001600160e01b0319813581811691600485101561181b5780818660040360031b1b83161692505b505092915050565b60005b8381101561183e578181015183820152602001611826565b8381111561184d576000848401525b50505050565b600060001982141561187557634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe19457468657265756d205369676e6564204d6573736167653a0a333200000000a264697066735822122059246615c5cfd7e5dae434181300677f9ac7db592911782a8475ba251338123464736f6c63430008050033";

export class SignatureBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    chainID: BigNumberish,
    initialGovernor: string,
    fee: BigNumberish,
    expiry: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureBridge> {
    return super.deploy(
      chainID,
      initialGovernor,
      fee,
      expiry,
      overrides || {}
    ) as Promise<SignatureBridge>;
  }
  getDeployTransaction(
    chainID: BigNumberish,
    initialGovernor: string,
    fee: BigNumberish,
    expiry: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      chainID,
      initialGovernor,
      fee,
      expiry,
      overrides || {}
    );
  }
  attach(address: string): SignatureBridge {
    return super.attach(address) as SignatureBridge;
  }
  connect(signer: Signer): SignatureBridge__factory {
    return super.connect(signer) as SignatureBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureBridgeInterface {
    return new utils.Interface(_abi) as SignatureBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureBridge {
    return new Contract(address, _abi, signerOrProvider) as SignatureBridge;
  }
}
