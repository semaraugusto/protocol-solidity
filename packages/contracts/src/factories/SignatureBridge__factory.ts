/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureBridge,
  SignatureBridgeInterface,
} from "../SignatureBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialGovernor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "GovernanceOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    name: "RecoveredAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_counts",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToHandlerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "resourceIDs",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "newBridge",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminMigrateBridgeWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "handlerAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "executionContextAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminSetResourceWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
    ],
    name: "checkPubKey",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "executeProposalWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "isSignatureFromGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "rescueTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rescueTokensNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignaturePubKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526000805463ffffffff60a81b1916815560045534801561002357600080fd5b5060405161207e38038061207e833981016040819052610042916100a0565b600080546001600160a81b0319166101006001600160a01b03848116820292909217808455604051859492909104909216917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908290a350506100d0565b6000602082840312156100b257600080fd5b81516001600160a01b03811681146100c957600080fd5b9392505050565b611f9f806100df6000396000f3fe6080604052600436106101235760003560e01c806384db809f116100a0578063a6e94c9111610064578063a6e94c9114610348578063c7af335214610368578063d4066f4c1461038d578063d75a0683146103ad578063f1835db7146103fd57600080fd5b806384db809f146102925780638755bcad146102c857806387ac4f51146102e8578063911005e7146103085780639d2b1ed71461032857600080fd5b80635c975abb116100e75780635c975abb14610203578063715018a6146102275780637296b5d81461023c5780637337f82e1461025c578063738c48d91461027c57600080fd5b80630c340a241461012f57806313cb01f91461016b5780631ed13d1b146101a45780631eee6bc8146101c65780633408e470146101e657600080fd5b3661012a57005b600080fd5b34801561013b57600080fd5b5060005461010090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017757600080fd5b5060005461018f90600160a81b900463ffffffff1681565b60405163ffffffff9091168152602001610162565b3480156101b057600080fd5b506101c46101bf366004611b0d565b61041d565b005b3480156101d257600080fd5b506101c46101e136600461184f565b61046d565b3480156101f257600080fd5b50465b604051908152602001610162565b34801561020f57600080fd5b5060005460ff165b6040519015158152602001610162565b34801561023357600080fd5b506101c46105b7565b34801561024857600080fd5b506101c4610257366004611b71565b610635565b34801561026857600080fd5b506101c4610277366004611aae565b61079b565b34801561028857600080fd5b506101f560045481565b34801561029e57600080fd5b5061014e6102ad366004611a10565b6003602052600090815260409020546001600160a01b031681565b3480156102d457600080fd5b506102176102e3366004611b0d565b610c6c565b3480156102f457600080fd5b506101c4610303366004611948565b610ca2565b34801561031457600080fd5b506101c46103233660046118ea565b610de3565b34801561033457600080fd5b506101c4610343366004611aae565b610f6e565b34801561035457600080fd5b506101c46103633660046118b7565b611113565b34801561037457600080fd5b5060005461010090046001600160a01b03163314610217565b34801561039957600080fd5b506102176103a8366004611a6c565b6111e9565b3480156103b957600080fd5b506103e46103c8366004611a10565b60026020526000908152604090205467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610162565b34801561040957600080fd5b50610217610418366004611a29565b61121f565b8151602083012060006104308284611314565b6040519091506001600160a01b038216907f391f5edd7209ba797e8055bce97cab2d1a480a2849b0c7fe965c370457166dc490600090a250505050565b6040516001600160601b0319606086811b821660208401526034830186905284901b166054820152606801604051602081830303815290604052805190602001208160006040518060400160405280601c8152602001600080516020611f4a833981519152815250905061050281846040516020016104ed929190611c71565b60405160208183030381529060405283610c6c565b6105275760405162461bcd60e51b815260040161051e90611d43565b60405180910390fd5b6000868152600360205260409081902080546001600160a01b0319166001600160a01b038a81169182179092559151635c7d1b9b60e11b815260048101899052908716602482015288919063b8fa373690604401600060405180830381600087803b15801561059557600080fd5b505af11580156105a9573d6000803e3d6000fd5b505050505050505050505050565b60005461010090046001600160a01b031633146105e65760405162461bcd60e51b815260040161051e90611cfd565b600080546040516101009091046001600160a01b0316907f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908390a360008054610100600160a81b0319169055565b60005463ffffffff808416600160a81b90920416106106665760405162461bcd60e51b815260040161051e90611d92565b60005461068190600160a81b900463ffffffff166001611e32565b63ffffffff168263ffffffff1611156106ac5760405162461bcd60e51b815260040161051e90611db9565b604080518082018252601c8152600080516020611f4a83398151915260208083019190915285518682012092519192916000916106ed918791899101611ca7565b60408051808303601f190181528282528051602091820120908301819052925083916107499186910160408051601f19818403018152908290526107349291602001611c8a565b60405160208183030381529060405286610c6c565b6107655760405162461bcd60e51b815260040161051e90611cfd565b61076e81611338565b50506000805463ffffffff909516600160a81b0263ffffffff60a81b199095169490941790935550505050565b82826040516107ab929190611c61565b60405180910390208160006040518060400160405280601c8152602001600080516020611f4a83398151915281525090506107f281846040516020016104ed929190611c71565b61080e5760405162461bcd60e51b815260040161051e90611d43565b600080808036816108226020828d8f611df0565b909250905060006108376020601c8486611df0565b61084091611ea8565b905060e081901c4663ffffffff16146108965760405162461bcd60e51b815260206004820152601860248201527732bc32b1baba34b7339037b7103bb937b7339031b430b4b760411b604482015260640161051e565b8c8c6024906028926108aa93929190611df0565b6108b391611ea8565b60e01c96508c8c602890603c926108cc93929190611df0565b6108d591611e5a565b60601c95508c8c603c906050926108ee93929190611df0565b6108f791611e5a565b60601c94508c8c60509060709261091093929190611df0565b61091991611e8a565b93506001600160a01b03851661097f5760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f742073656e64206c697175696469747920746f207a65726f206164604482015264647265737360d81b606482015260840161051e565b6001600160a01b0386163014156109d85760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f742072657363756520777261707065642061737365740000000000604482015260640161051e565b8663ffffffff16600454106109ff5760405162461bcd60e51b815260040161051e90611d92565b600454610a0d906001611e1a565b8763ffffffff161115610a325760405162461bcd60e51b815260040161051e90611db9565b6001600160a01b038616610ac25747848110610a84576040516001600160a01b0387169086156108fc029087906000818181858888f19350505050158015610a7e573d6000803e3d6000fd5b50610abc565b6040516001600160a01b0387169082156108fc029083906000818181858888f19350505050158015610aba573d6000803e3d6000fd5b505b50610c53565b6040516370a0823160e01b81523060048201526000906001600160a01b038816906370a082319060240160206040518083038186803b158015610b0457600080fd5b505afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c9190611bce565b9050848110610bcd5760405163a9059cbb60e01b81526001600160a01b0387811660048301526024820187905288169063a9059cbb90604401602060405180830381600087803b158015610b8f57600080fd5b505af1158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc791906119e7565b50610c51565b60405163a9059cbb60e01b81526001600160a01b0387811660048301526024820183905288169063a9059cbb90604401602060405180830381600087803b158015610c1757600080fd5b505af1158015610c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4f91906119e7565b505b505b50505063ffffffff909316600455505050505050505050565b8151602083012060009081610c818285611314565b60005461010090046001600160a01b03908116911614925050505b92915050565b838383604051602001610cb793929190611c22565b604051602081830303815290604052805190602001208160006040518060400160405280601c8152602001600080516020611f4a8339815191528152509050610d0c81846040516020016104ed929190611c71565b610d285760405162461bcd60e51b815260040161051e90611d43565b60005b86811015610dd9576000600360008a8a85818110610d4b57610d4b611f1d565b60209081029290920135835250810191909152604090810160002054905163d7f5b35960e01b81526001600160a01b0389811660048301529091169150819063d7f5b35990602401600060405180830381600087803b158015610dad57600080fd5b505af1158015610dc1573d6000803e3d6000fd5b50505050508080610dd190611ed6565b915050610d2b565b5050505050505050565b60005463ffffffff808416600160a81b9092041610610e145760405162461bcd60e51b815260040161051e90611d92565b600054610e2f90600160a81b900463ffffffff166001611e32565b63ffffffff168263ffffffff161115610e5a5760405162461bcd60e51b815260040161051e90611db9565b60006040518060400160405280601c8152602001600080516020611f4a833981519152815250905060008385604051602001610ebc92919060e09290921b6001600160e01b031916825260601b6001600160601b031916600482015260180190565b604051602081830303815290604052805190602001209050610f1e8282604051602001610eeb91815260200190565b60408051601f1981840301815290829052610f099291602001611c8a565b60405160208183030381529060405284610c6c565b610f3a5760405162461bcd60e51b815260040161051e90611cfd565b610f4385611338565b50506000805463ffffffff909316600160a81b0263ffffffff60a81b19909316929092179091555050565b8282604051610f7e929190611c61565b60405180910390208160006040518060400160405280601c8152602001600080516020611f4a8339815191528152509050610fc581846040516020016104ed929190611c71565b610fe15760405162461bcd60e51b815260040161051e90611d43565b366000610ff1602082898b611df0565b909250905060006110028284611e8a565b905060006110146020601c8587611df0565b61101d91611ea8565b905060e081901c4663ffffffff16146110735760405162461bcd60e51b815260206004820152601860248201527732bc32b1baba34b7339037b7103bb937b7339031b430b4b760411b604482015260640161051e565b60006003600084815260200190815260200160002060009054906101000a90046001600160a01b031690506000819050806001600160a01b031663e248cff2858e8e6040518463ffffffff1660e01b81526004016110d393929190611cc7565b600060405180830381600087803b1580156110ed57600080fd5b505af1158015611101573d6000803e3d6000fd5b50505050505050505050505050505050565b60005461010090046001600160a01b031633146111425760405162461bcd60e51b815260040161051e90611cfd565b60005463ffffffff808316600160a81b90920416106111735760405162461bcd60e51b815260040161051e90611d92565b60005461118e90600160a81b900463ffffffff166001611e32565b63ffffffff168163ffffffff1611156111b95760405162461bcd60e51b815260040161051e90611db9565b6111c282611338565b6000805463ffffffff909216600160a81b0263ffffffff60a81b1990921691909117905550565b6000336001600160a01b03168383604051611205929190611c61565b6040519081900390206001600160a01b0316149392505050565b6000806040518060400160405280601c8152602001600080516020611f4a83398151915281525090506000818760405160200161125d929190611c71565b60405160208183030381529060405280519060200120905061128d6000546001600160a01b036101009091041690565b6001600160a01b0316600182888888604051600081526020016040526040516112d2949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa1580156112f4573d6000803e3d6000fd5b505050602060405103516001600160a01b03161492505050949350505050565b60008060006113238585611406565b9150915061133081611476565b509392505050565b6001600160a01b0381166113a05760405162461bcd60e51b815260206004820152602960248201527f476f7665726e61626c653a206e6577206f776e657220697320746865207a65726044820152686f206164647265737360b81b606482015260840161051e565b600080546040516001600160a01b038085169361010090930416917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f791a3600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60008082516041141561143d5760208301516040840151606085015160001a61143187828585611634565b9450945050505061146f565b825160401415611467576020830151604084015161145c868383611721565b93509350505061146f565b506000905060025b9250929050565b600081600481111561148a5761148a611f07565b14156114935750565b60018160048111156114a7576114a7611f07565b14156114f55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161051e565b600281600481111561150957611509611f07565b14156115575760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161051e565b600381600481111561156b5761156b611f07565b14156115c45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161051e565b60048160048111156115d8576115d8611f07565b14156116315760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161051e565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561166b5750600090506003611718565b8460ff16601b1415801561168357508460ff16601c14155b156116945750600090506004611718565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156116e8573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661171157600060019250925050611718565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b0161174287828885611634565b935093505050935093915050565b80356001600160a01b038116811461176757600080fd5b919050565b60008083601f84011261177e57600080fd5b50813567ffffffffffffffff81111561179657600080fd5b60208301915083602082850101111561146f57600080fd5b600082601f8301126117bf57600080fd5b813567ffffffffffffffff808211156117da576117da611f33565b604051601f8301601f19908116603f0116810190828211818310171561180257611802611f33565b8160405283815286602085880101111561181b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803563ffffffff8116811461176757600080fd5b6000806000806080858703121561186557600080fd5b61186e85611750565b93506020850135925061188360408601611750565b9150606085013567ffffffffffffffff81111561189f57600080fd5b6118ab878288016117ae565b91505092959194509250565b600080604083850312156118ca57600080fd5b6118d383611750565b91506118e16020840161183b565b90509250929050565b6000806000606084860312156118ff57600080fd5b61190884611750565b92506119166020850161183b565b9150604084013567ffffffffffffffff81111561193257600080fd5b61193e868287016117ae565b9150509250925092565b6000806000806060858703121561195e57600080fd5b843567ffffffffffffffff8082111561197657600080fd5b818701915087601f83011261198a57600080fd5b81358181111561199957600080fd5b8860208260051b85010111156119ae57600080fd5b602083019650809550506119c460208801611750565b935060408701359150808211156119da57600080fd5b506118ab878288016117ae565b6000602082840312156119f957600080fd5b81518015158114611a0957600080fd5b9392505050565b600060208284031215611a2257600080fd5b5035919050565b60008060008060808587031215611a3f57600080fd5b84359350602085013560ff81168114611a5757600080fd5b93969395505050506040820135916060013590565b60008060208385031215611a7f57600080fd5b823567ffffffffffffffff811115611a9657600080fd5b611aa28582860161176c565b90969095509350505050565b600080600060408486031215611ac357600080fd5b833567ffffffffffffffff80821115611adb57600080fd5b611ae78783880161176c565b90955093506020860135915080821115611b0057600080fd5b5061193e868287016117ae565b60008060408385031215611b2057600080fd5b823567ffffffffffffffff80821115611b3857600080fd5b611b44868387016117ae565b93506020850135915080821115611b5a57600080fd5b50611b67858286016117ae565b9150509250929050565b600080600060608486031215611b8657600080fd5b833567ffffffffffffffff80821115611b9e57600080fd5b611baa878388016117ae565b9450611bb86020870161183b565b93506040860135915080821115611b0057600080fd5b600060208284031215611be057600080fd5b5051919050565b6000815160005b81811015611c085760208185018101518683015201611bee565b81811115611c17576000828601525b509290920192915050565b60006001600160fb1b03841115611c3857600080fd5b8360051b8086843760609390931b6001600160601b031916919092019081526014019392505050565b8183823760009101908152919050565b6000611c7d8285611be7565b9283525050602001919050565b6000611c9f611c998386611be7565b84611be7565b949350505050565b60e083901b6001600160e01b03191681526000611c9f6004830184611be7565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b60208082526026908201527f476f7665726e61626c653a2063616c6c6572206973206e6f742074686520676f6040820152653b32b93737b960d11b606082015260800190565b6020808252602f908201527f7369676e656420627920676f7665726e6f723a204e6f742076616c696420736960408201526e3390333937b69033b7bb32b93737b960891b606082015260800190565b6020808252600d908201526c496e76616c6964206e6f6e636560981b604082015260600190565b60208082526019908201527f4e6f6e6365206d75737420696e6372656d656e74206279203100000000000000604082015260600190565b60008085851115611e0057600080fd5b83861115611e0d57600080fd5b5050820193919092039150565b60008219821115611e2d57611e2d611ef1565b500190565b600063ffffffff808316818516808303821115611e5157611e51611ef1565b01949350505050565b6001600160601b03198135818116916014851015611e825780818660140360031b1b83161692505b505092915050565b80356020831015610c9c57600019602084900360031b1b1692915050565b6001600160e01b03198135818116916004851015611e825760049490940360031b84901b1690921692915050565b6000600019821415611eea57611eea611ef1565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe19457468657265756d205369676e6564204d6573736167653a0a333200000000a264697066735822122037e3dfc95561f59824cee800e35af9e62bfdb1610e42c3270b5386f9e2bbc92164736f6c63430008050033";

export class SignatureBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureBridge> {
    return super.deploy(
      initialGovernor,
      overrides || {}
    ) as Promise<SignatureBridge>;
  }
  getDeployTransaction(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialGovernor, overrides || {});
  }
  attach(address: string): SignatureBridge {
    return super.attach(address) as SignatureBridge;
  }
  connect(signer: Signer): SignatureBridge__factory {
    return super.connect(signer) as SignatureBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureBridgeInterface {
    return new utils.Interface(_abi) as SignatureBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureBridge {
    return new Contract(address, _abi, signerOrProvider) as SignatureBridge;
  }
}
