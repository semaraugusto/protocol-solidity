/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignatureBridge,
  SignatureBridgeInterface,
} from "../SignatureBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialGovernor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "GovernanceOwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recovered",
        type: "address",
      },
    ],
    name: "RecoveredAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_counts",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToHandlerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "resourceIDs",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "newBridge",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminMigrateBridgeWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "handlerAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "executionContextAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "adminSetResourceWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
    ],
    name: "checkPubKey",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "executeProposalWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "isSignatureFromGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferOwnershipWithSignaturePubKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805463ffffffff60a81b1916905534801561002057600080fd5b50604051611ad0380380611ad083398101604081905261003f9161009d565b600080546001600160a81b0319166101006001600160a01b03848116820292909217808455604051859492909104909216917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908290a350506100cd565b6000602082840312156100af57600080fd5b81516001600160a01b03811681146100c657600080fd5b9392505050565b6119f4806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638755bcad116100a2578063a6e94c9111610071578063a6e94c9114610253578063c7af335214610266578063d4066f4c1461027e578063d75a068314610291578063f1835db7146102d457600080fd5b80638755bcad1461020757806387ac4f511461021a578063911005e71461022d5780639d2b1ed71461024057600080fd5b80633408e470116100e95780633408e4701461019e5780635c975abb146101ac578063715018a6146101c35780637296b5d8146101cb57806384db809f146101de57600080fd5b80630c340a241461011b57806313cb01f91461014a5780631ed13d1b146101765780631eee6bc81461018b575b600080fd5b60005461010090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b60005461016190600160a81b900463ffffffff1681565b60405163ffffffff9091168152602001610141565b61018961018436600461154b565b6102e7565b005b6101896101993660046112b6565b610337565b604051468152602001610141565b60005460ff165b6040519015158152602001610141565b610189610481565b6101896101d93660046115af565b6104ff565b61012d6101ec36600461144e565b6003602052600090815260409020546001600160a01b031681565b6101b361021536600461154b565b610665565b6101896102283660046113af565b61069b565b61018961023b366004611351565b6107dc565b61018961024e3660046114ec565b61096c565b61018961026136600461131e565b610b16565b60005461010090046001600160a01b031633146101b3565b6101b361028c3660046114aa565b610bec565b6102bb61029f36600461144e565b60026020526000908152604090205467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610141565b6101b36102e2366004611467565b610c22565b8151602083012060006102fa8284610d17565b6040519091506001600160a01b038216907f391f5edd7209ba797e8055bce97cab2d1a480a2849b0c7fe965c370457166dc490600090a250505050565b6040516001600160601b0319606086811b821660208401526034830186905284901b166054820152606801604051602081830303815290604052805190602001208160006040518060400160405280601c815260200160008051602061199f83398151915281525090506103cc81846040516020016103b792919061165b565b60405160208183030381529060405283610665565b6103f15760405162461bcd60e51b81526004016103e8906117b7565b60405180910390fd5b6000868152600360205260409081902080546001600160a01b0319166001600160a01b038a81169182179092559151635c7d1b9b60e11b815260048101899052908716602482015288919063b8fa373690604401600060405180830381600087803b15801561045f57600080fd5b505af1158015610473573d6000803e3d6000fd5b505050505050505050505050565b60005461010090046001600160a01b031633146104b05760405162461bcd60e51b81526004016103e890611771565b600080546040516101009091046001600160a01b0316907f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f7908390a360008054610100600160a81b0319169055565b60005463ffffffff808416600160a81b90920416106105305760405162461bcd60e51b81526004016103e890611806565b60005461054b90600160a81b900463ffffffff16600161188e565b63ffffffff168263ffffffff1611156105765760405162461bcd60e51b81526004016103e89061182d565b604080518082018252601c815260008051602061199f83398151915260208083019190915285518682012092519192916000916105b79187918991016116d6565b60408051808303601f190181528282528051602091820120908301819052925083916106139186910160408051601f19818403018152908290526105fe929160200161167d565b60405160208183030381529060405286610665565b61062f5760405162461bcd60e51b81526004016103e890611771565b61063881610d3b565b50506000805463ffffffff909516600160a81b0263ffffffff60a81b199095169490941790935550505050565b815160208301206000908161067a8285610d17565b60005461010090046001600160a01b03908116911614925050505b92915050565b8383836040516020016106b09392919061160c565b604051602081830303815290604052805190602001208160006040518060400160405280601c815260200160008051602061199f833981519152815250905061070581846040516020016103b792919061165b565b6107215760405162461bcd60e51b81526004016103e8906117b7565b60005b868110156107d2576000600360008a8a8581811061074457610744611972565b60209081029290920135835250810191909152604090810160002054905163d7f5b35960e01b81526001600160a01b0389811660048301529091169150819063d7f5b35990602401600060405180830381600087803b1580156107a657600080fd5b505af11580156107ba573d6000803e3d6000fd5b505050505080806107ca9061192b565b915050610724565b5050505050505050565b60005463ffffffff808416600160a81b909204161061080d5760405162461bcd60e51b81526004016103e890611806565b60005461082890600160a81b900463ffffffff16600161188e565b63ffffffff168263ffffffff1611156108535760405162461bcd60e51b81526004016103e89061182d565b60006040518060400160405280601c815260200160008051602061199f83398151915281525090506108a583856040516020016108919291906116ac565b604051602081830303815290604052610e09565b600083856040516020016108ba9291906116ac565b60405160208183030381529060405280519060200120905061091c82826040516020016108e991815260200190565b60408051601f1981840301815290829052610907929160200161167d565b60405160208183030381529060405284610665565b6109385760405162461bcd60e51b81526004016103e890611771565b61094185610d3b565b50506000805463ffffffff909316600160a81b0263ffffffff60a81b19909316929092179091555050565b828260405161097c92919061164b565b60405180910390208160006040518060400160405280601c815260200160008051602061199f83398151915281525090506109c381846040516020016103b792919061165b565b6109df5760405162461bcd60e51b81526004016103e8906117b7565b3660006109ef602082898b611864565b90925090506000610a0082846118ad565b90506000610a126020601c8587611864565b610a1b916118cb565b905060e081901c4663ffffffff1614610a765760405162461bcd60e51b815260206004820152601860248201527f657865637574696e67206f6e2077726f6e6720636861696e000000000000000060448201526064016103e8565b60006003600084815260200190815260200160002060009054906101000a90046001600160a01b031690506000819050806001600160a01b031663e248cff2858e8e6040518463ffffffff1660e01b8152600401610ad693929190611708565b600060405180830381600087803b158015610af057600080fd5b505af1158015610b04573d6000803e3d6000fd5b50505050505050505050505050505050565b60005461010090046001600160a01b03163314610b455760405162461bcd60e51b81526004016103e890611771565b60005463ffffffff808316600160a81b9092041610610b765760405162461bcd60e51b81526004016103e890611806565b600054610b9190600160a81b900463ffffffff16600161188e565b63ffffffff168163ffffffff161115610bbc5760405162461bcd60e51b81526004016103e89061182d565b610bc582610d3b565b6000805463ffffffff909216600160a81b0263ffffffff60a81b1990921691909117905550565b6000336001600160a01b03168383604051610c0892919061164b565b6040519081900390206001600160a01b0316149392505050565b6000806040518060400160405280601c815260200160008051602061199f833981519152815250905060008187604051602001610c6092919061165b565b604051602081830303815290604052805190602001209050610c906000546001600160a01b036101009091041690565b6001600160a01b031660018288888860405160008152602001604052604051610cd5949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610cf7573d6000803e3d6000fd5b505050602060405103516001600160a01b03161492505050949350505050565b6000806000610d268585610e4f565b91509150610d3381610ebf565b509392505050565b6001600160a01b038116610da35760405162461bcd60e51b815260206004820152602960248201527f476f7665726e61626c653a206e6577206f776e657220697320746865207a65726044820152686f206164647265737360b81b60648201526084016103e8565b600080546040516001600160a01b038085169361010090930416917f1f323489f404e3bad762215fc05447f9a77bb7f3b630a6f08a2851b999db41f791a3600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b610e4c81604051602401610e1d919061173e565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b17905261107a565b50565b600080825160411415610e865760208301516040840151606085015160001a610e7a8782858561109b565b94509450505050610eb8565b825160401415610eb05760208301516040840151610ea5868383611188565b935093505050610eb8565b506000905060025b9250929050565b6000816004811115610ed357610ed361195c565b1415610edc5750565b6001816004811115610ef057610ef061195c565b1415610f3e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103e8565b6002816004811115610f5257610f5261195c565b1415610fa05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103e8565b6003816004811115610fb457610fb461195c565b141561100d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103e8565b60048160048111156110215761102161195c565b1415610e4c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103e8565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156110d2575060009050600361117f565b8460ff16601b141580156110ea57508460ff16601c14155b156110fb575060009050600461117f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561114f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111785760006001925092505061117f565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b016111a98782888561109b565b935093505050935093915050565b80356001600160a01b03811681146111ce57600080fd5b919050565b60008083601f8401126111e557600080fd5b50813567ffffffffffffffff8111156111fd57600080fd5b602083019150836020828501011115610eb857600080fd5b600082601f83011261122657600080fd5b813567ffffffffffffffff8082111561124157611241611988565b604051601f8301601f19908116603f0116810190828211818310171561126957611269611988565b8160405283815286602085880101111561128257600080fd5b836020870160208301376000602085830101528094505050505092915050565b803563ffffffff811681146111ce57600080fd5b600080600080608085870312156112cc57600080fd5b6112d5856111b7565b9350602085013592506112ea604086016111b7565b9150606085013567ffffffffffffffff81111561130657600080fd5b61131287828801611215565b91505092959194509250565b6000806040838503121561133157600080fd5b61133a836111b7565b9150611348602084016112a2565b90509250929050565b60008060006060848603121561136657600080fd5b61136f846111b7565b925061137d602085016112a2565b9150604084013567ffffffffffffffff81111561139957600080fd5b6113a586828701611215565b9150509250925092565b600080600080606085870312156113c557600080fd5b843567ffffffffffffffff808211156113dd57600080fd5b818701915087601f8301126113f157600080fd5b81358181111561140057600080fd5b8860208260051b850101111561141557600080fd5b6020830196508095505061142b602088016111b7565b9350604087013591508082111561144157600080fd5b5061131287828801611215565b60006020828403121561146057600080fd5b5035919050565b6000806000806080858703121561147d57600080fd5b84359350602085013560ff8116811461149557600080fd5b93969395505050506040820135916060013590565b600080602083850312156114bd57600080fd5b823567ffffffffffffffff8111156114d457600080fd5b6114e0858286016111d3565b90969095509350505050565b60008060006040848603121561150157600080fd5b833567ffffffffffffffff8082111561151957600080fd5b611525878388016111d3565b9095509350602086013591508082111561153e57600080fd5b506113a586828701611215565b6000806040838503121561155e57600080fd5b823567ffffffffffffffff8082111561157657600080fd5b61158286838701611215565b9350602085013591508082111561159857600080fd5b506115a585828601611215565b9150509250929050565b6000806000606084860312156115c457600080fd5b833567ffffffffffffffff808211156115dc57600080fd5b6115e887838801611215565b94506115f6602087016112a2565b9350604086013591508082111561153e57600080fd5b60006001600160fb1b0384111561162257600080fd5b8360051b8086843760609390931b6001600160601b031916919092019081526014019392505050565b8183823760009101908152919050565b6000835161166d8184602088016118fb565b9190910191825250602001919050565b6000835161168f8184602088016118fb565b8351908301906116a38183602088016118fb565b01949350505050565b60e09290921b6001600160e01b031916825260601b6001600160601b031916600482015260180190565b63ffffffff60e01b8360e01b168152600082516116fa8160048501602087016118fb565b919091016004019392505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b602081526000825180602084015261175d8160408501602087016118fb565b601f01601f19169190910160400192915050565b60208082526026908201527f476f7665726e61626c653a2063616c6c6572206973206e6f742074686520676f6040820152653b32b93737b960d11b606082015260800190565b6020808252602f908201527f7369676e656420627920676f7665726e6f723a204e6f742076616c696420736960408201526e3390333937b69033b7bb32b93737b960891b606082015260800190565b6020808252600d908201526c496e76616c6964206e6f6e636560981b604082015260600190565b60208082526019908201527f4e6f6e6365206d75737420696e6372656d656e74206279203100000000000000604082015260600190565b6000808585111561187457600080fd5b8386111561188157600080fd5b5050820193919092039150565b600063ffffffff8083168185168083038211156116a3576116a3611946565b8035602083101561069557600019602084900360031b1b1692915050565b6001600160e01b031981358181169160048510156118f35780818660040360031b1b83161692505b505092915050565b60005b838110156119165781810151838201526020016118fe565b83811115611925576000848401525b50505050565b600060001982141561193f5761193f611946565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe19457468657265756d205369676e6564204d6573736167653a0a333200000000a264697066735822122070d414d9a40f3755cd544ce9575f5c7beca45aff8ca8aa55ae1c262bcb624b7464736f6c63430008050033";

export class SignatureBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignatureBridge> {
    return super.deploy(
      initialGovernor,
      overrides || {}
    ) as Promise<SignatureBridge>;
  }
  getDeployTransaction(
    initialGovernor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialGovernor, overrides || {});
  }
  attach(address: string): SignatureBridge {
    return super.attach(address) as SignatureBridge;
  }
  connect(signer: Signer): SignatureBridge__factory {
    return super.connect(signer) as SignatureBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureBridgeInterface {
    return new utils.Interface(_abi) as SignatureBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignatureBridge {
    return new Contract(address, _abi, signerOrProvider) as SignatureBridge;
  }
}
