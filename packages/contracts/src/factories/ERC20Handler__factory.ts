/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Handler, ERC20HandlerInterface } from "../ERC20Handler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "initialResourceIDs",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "initialContractAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "burnableContractAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "_depositRecords",
    outputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_destinationChainID",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_destinationRecipientAddress",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_depositer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "destinationChainID",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "depositNonce",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fundERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "depositNonce",
        type: "uint64",
      },
      {
        internalType: "uint8",
        name: "destId",
        type: "uint8",
      },
    ],
    name: "getDepositRecord",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_tokenAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "_destinationChainID",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "_resourceID",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "_destinationRecipientAddress",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "_depositer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_amount",
            type: "uint256",
          },
        ],
        internalType: "struct ERC20Handler.DepositRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newBridge",
        type: "address",
      },
    ],
    name: "migrateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016ea380380620016ea8339810160408190526200003491620002ad565b8151835114620000615760405162461bcd60e51b81526004016200005890620003f1565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0386161781555b8351811015620000fe57620000e9848281518110620000ac57634e487b7160e01b600052603260045260246000fd5b6020026020010151848381518110620000d557634e487b7160e01b600052603260045260246000fd5b60200260200101516200016560201b60201c565b80620000f581620004a0565b9150506200007d565b5060005b81518110156200015a57620001458282815181106200013157634e487b7160e01b600052603260045260246000fd5b6020026020010151620001b460201b60201c565b806200015181620004a0565b91505062000102565b5050505050620004de565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b6001600160a01b03811660009081526003602052604090205460ff16620001ef5760405162461bcd60e51b81526004016200005890620003ad565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b80516001600160a01b03811681146200022b57600080fd5b919050565b600082601f83011262000241578081fd5b815160206200025a62000254836200047a565b6200044e565b828152818101908583018385028701840188101562000277578586fd5b855b85811015620002a0576200028d8262000213565b8452928401929084019060010162000279565b5090979650505050505050565b60008060008060808587031215620002c3578384fd5b620002ce8562000213565b602086810151919550906001600160401b0380821115620002ed578586fd5b818801915088601f83011262000301578586fd5b81516200031262000254826200047a565b81815284810190848601868402860187018d10156200032f57898afd5b8995505b838610156200035357805183526001959095019491860191860162000333565b5060408b015190985094505050808311156200036d578485fd5b6200037b89848a0162000230565b9450606088015192508083111562000391578384fd5b5050620003a18782880162000230565b91505092959194509250565b60208082526024908201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696040820152631cdd195960e21b606082015260800190565b6020808252603c908201527f696e697469616c5265736f7572636549447320616e6420696e697469616c436f60408201527f6e7472616374416464726573736573206c656e206d69736d6174636800000000606082015260800190565b6040518181016001600160401b0381118282101715620004725762000472620004c8565b604052919050565b60006001600160401b03821115620004965762000496620004c8565b5060209081020190565b6000600019821415620004c157634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6111fc80620004ee6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ba484c091161008c578063d9caed1211610066578063d9caed12146101e6578063e248cff2146101f9578063e84f3f971461020c578063ec97d3b41461021f576100ea565b8063ba484c09146101a0578063c54c2a11146101c0578063d7f5b359146101d3576100ea565b80636a70d081116100c85780636a70d081146101475780637f79bea81461016757806395601f091461017a578063b8fa37361461018d576100ea565b806307b7ed99146100ef5780632ea5979b14610104578063318c136e14610132575b600080fd5b6101026100fd366004610c83565b61023f565b005b610117610112366004610e2a565b610253565b60405161012996959493929190610f27565b60405180910390f35b61013a610337565b6040516101299190610ed6565b61015a610155366004610c83565b610346565b6040516101299190610f6f565b61015a610175366004610c83565b61035b565b610102610188366004610ca4565b610370565b61010261019b366004610d17565b610383565b6101b36101ae366004610e53565b610399565b60405161012991906110a7565b61013a6101ce366004610cff565b6104be565b6101026101e1366004610c83565b6104d9565b6101026101f4366004610ca4565b610503565b610102610207366004610d42565b61051b565b61010261021a366004610d8c565b61062e565b61023261022d366004610c83565b610863565b6040516101299190610f7a565b610247610875565b610250816108a1565b50565b60056020908152600092835260408084209091529082529020805460018201546002830180546001600160a01b03841694600160a01b90940463ffffffff1693919061029e9061118b565b80601f01602080910402602001604051908101604052809291908181526020018280546102ca9061118b565b80156103175780601f106102ec57610100808354040283529160200191610317565b820191906000526020600020905b8154815290600101906020018083116102fa57829003601f168201915b50505050600383015460049093015491926001600160a01b031691905086565b6000546001600160a01b031681565b60046020526000908152604090205460ff1681565b60036020526000908152604090205460ff1681565b8261037d818430856108fd565b50505050565b61038b610875565b6103958282610955565b5050565b6103a1610b27565b60ff8216600090815260056020908152604080832067ffffffffffffffff87168452825291829020825160c08101845281546001600160a01b0381168252600160a01b900463ffffffff16928101929092526001810154928201929092526002820180549192916060840191906104179061118b565b80601f01602080910402602001604051908101604052809291908181526020018280546104439061118b565b80156104905780601f1061046557610100808354040283529160200191610490565b820191906000526020600020905b81548152906001019060200180831161047357829003601f168201915b505050918352505060038201546001600160a01b031660208201526004909101546040909101529392505050565b6001602052600090815260409020546001600160a01b031681565b6104e1610875565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61050b610875565b6105168383836109a4565b505050565b610523610875565b600080606061053484860186610e09565b909350915084604085610547858361113b565b9261055493929190611113565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508a815260016020908152604080832054828801516001600160a01b039091168085526003909352922054959650909490935060ff1691506105e290505760405162461bcd60e51b81526004016105d99061105f565b60405180910390fd5b6001600160a01b03811660009081526004602052604090205460ff161561061657610611818360601c876109b0565b610624565b610624818360601c876109a4565b5050505050505050565b610636610875565b606060008061064784860186610e09565b90925090508460408561065a848361113b565b9261066793929190611113565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508d8152600160209081526040808320546001600160a01b03168084526003909252909120549497509360ff1692506106e49150505760405162461bcd60e51b81526004016105d99061105f565b6001600160a01b03811660009081526004602052604090205460ff161561071557610710818885610a0e565b610721565b61072181883086610a3e565b6040518060c00160405280826001600160a01b031681526020018a63ffffffff1681526020018b8152602001858152602001886001600160a01b0316815260200184815250600560008b63ffffffff1663ffffffff16815260200190815260200160002060008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff160217905550604082015181600101556060820151816002019080519060200190610824929190610b5b565b5060808201516003820180546001600160a01b0319166001600160a01b0390921691909117905560a09091015160049091015550505050505050505050565b60026020526000908152604090205481565b6000546001600160a01b0316331461089f5760405162461bcd60e51b81526004016105d990610fb8565b565b6001600160a01b03811660009081526003602052604090205460ff166108d95760405162461bcd60e51b81526004016105d990610fef565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b61037d846323b872dd60e01b85858560405160240161091e93929190610eea565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a52565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b8261037d818484610b08565b6040516340c10f1960e01b815283906001600160a01b038216906340c10f19906109e09086908690600401610f0e565b600060405180830381600087803b1580156109fa57600080fd5b505af1158015610624573d6000803e3d6000fd5b60405163079cc67960e41b815283906001600160a01b038216906379cc6790906109e09086908690600401610f0e565b83610a4b818585856108fd565b5050505050565b600080836001600160a01b031683604051610a6d9190610eba565b6000604051808303816000865af19150503d8060008114610aaa576040519150601f19603f3d011682016040523d82523d6000602084013e610aaf565b606091505b509150915081610ad15760405162461bcd60e51b81526004016105d990611033565b80511561037d5780806020019051810190610aec9190610cdf565b61037d5760405162461bcd60e51b81526004016105d990610f83565b6105168363a9059cbb60e01b848460405160240161091e929190610f0e565b6040805160c0810182526000808252602082018190529181018290526060808201526080810182905260a081019190915290565b828054610b679061118b565b90600052602060002090601f016020900481019282610b895760008555610bcf565b82601f10610ba257805160ff1916838001178555610bcf565b82800160010185558215610bcf579182015b82811115610bcf578251825591602001919060010190610bb4565b50610bdb929150610bdf565b5090565b5b80821115610bdb5760008155600101610be0565b80356001600160a01b0381168114610c0b57600080fd5b919050565b60008083601f840112610c21578182fd5b50813567ffffffffffffffff811115610c38578182fd5b602083019150836020828501011115610c5057600080fd5b9250929050565b803563ffffffff81168114610c0b57600080fd5b803567ffffffffffffffff81168114610c0b57600080fd5b600060208284031215610c94578081fd5b610c9d82610bf4565b9392505050565b600080600060608486031215610cb8578182fd5b610cc184610bf4565b9250610ccf60208501610bf4565b9150604084013590509250925092565b600060208284031215610cf0578081fd5b81518015158114610c9d578182fd5b600060208284031215610d10578081fd5b5035919050565b60008060408385031215610d29578182fd5b82359150610d3960208401610bf4565b90509250929050565b600080600060408486031215610d56578283fd5b83359250602084013567ffffffffffffffff811115610d73578283fd5b610d7f86828701610c10565b9497909650939450505050565b60008060008060008060a08789031215610da4578182fd5b86359550610db460208801610c57565b9450610dc260408801610c6b565b9350610dd060608801610bf4565b9250608087013567ffffffffffffffff811115610deb578283fd5b610df789828a01610c10565b979a9699509497509295939492505050565b60008060408385031215610e1b578182fd5b50508035926020909101359150565b60008060408385031215610e3c578182fd5b610e4583610c57565b9150610d3960208401610c6b565b60008060408385031215610e65578182fd5b610e6e83610c6b565b9150602083013560ff81168114610e83578182fd5b809150509250929050565b60008151808452610ea681602086016020860161115f565b601f01601f19169290920160200192915050565b60008251610ecc81846020870161115f565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b03808916835263ffffffff8816602084015286604084015260c06060840152610f5b60c0840187610e8e565b941660808301525060a00152949350505050565b901515815260200190565b90815260200190565b6020808252818101527f45524332303a206f7065726174696f6e20646964206e6f742073756363656564604082015260600190565b6020808252601e908201527f73656e646572206d7573742062652062726964676520636f6e74726163740000604082015260600190565b60208082526024908201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696040820152631cdd195960e21b606082015260800190565b602080825260129082015271115490cc8c0e8818d85b1b0819985a5b195960721b604082015260600190565b60208082526028908201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696040820152671d195b1a5cdd195960c21b606082015260800190565b60006020825260018060a01b0380845116602084015263ffffffff602085015116604084015260408401516060840152606084015160c060808501526110f060e0850182610e8e565b90508160808601511660a085015260a085015160c0850152809250505092915050565b60008085851115611122578182fd5b8386111561112e578182fd5b5050820193919092039150565b6000821982111561115a57634e487b7160e01b81526011600452602481fd5b500190565b60005b8381101561117a578181015183820152602001611162565b8381111561037d5750506000910152565b60028104600182168061119f57607f821691505b602082108114156111c057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207a9c67fd6b0a06ef3834fc432c2dea7d5d501418988b0b6df3ffefcebeb8b74964736f6c63430008000033";

export class ERC20Handler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    burnableContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Handler> {
    return super.deploy(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      burnableContractAddresses,
      overrides || {}
    ) as Promise<ERC20Handler>;
  }
  getDeployTransaction(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    burnableContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      burnableContractAddresses,
      overrides || {}
    );
  }
  attach(address: string): ERC20Handler {
    return super.attach(address) as ERC20Handler;
  }
  connect(signer: Signer): ERC20Handler__factory {
    return super.connect(signer) as ERC20Handler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20HandlerInterface {
    return new utils.Interface(_abi) as ERC20HandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Handler {
    return new Contract(address, _abi, signerOrProvider) as ERC20Handler;
  }
}
