/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Handler, ERC20HandlerInterface } from "../ERC20Handler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "initialResourceIDs",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "initialContractAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "burnableContractAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "_depositRecords",
    outputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_destinationChainID",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_destinationRecipientAddress",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_depositer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "destinationChainID",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "depositNonce",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fundERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "depositNonce",
        type: "uint64",
      },
      {
        internalType: "uint8",
        name: "destId",
        type: "uint8",
      },
    ],
    name: "getDepositRecord",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_tokenAddress",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "_destinationChainID",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "_resourceID",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "_destinationRecipientAddress",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "_depositer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_amount",
            type: "uint256",
          },
        ],
        internalType: "struct ERC20Handler.DepositRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newBridge",
        type: "address",
      },
    ],
    name: "migrateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200167b3803806200167b83398101604081905262000034916200031a565b8151835114620000b15760405162461bcd60e51b815260206004820152603c60248201527f696e697469616c5265736f7572636549447320616e6420696e697469616c436f60448201527f6e7472616374416464726573736573206c656e206d69736d617463680000000060648201526084015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0386161781555b8351811015620001365762000121848281518110620000f057620000f0620004a7565b60200260200101518483815181106200010d576200010d620004a7565b60200260200101516200019160201b60201c565b806200012d816200047d565b915050620000cd565b5060005b81518110156200018657620001718282815181106200015d576200015d620004a7565b6020026020010151620001e060201b60201c565b806200017d816200047d565b9150506200013a565b5050505050620004d3565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b6001600160a01b03811660009081526003602052604090205460ff16620002565760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b6064820152608401620000a8565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b80516001600160a01b03811681146200029257600080fd5b919050565b600082601f830112620002a957600080fd5b81516020620002c2620002bc8362000457565b62000424565b80838252828201915082860187848660051b8901011115620002e357600080fd5b60005b858110156200030d57620002fa826200027a565b84529284019290840190600101620002e6565b5090979650505050505050565b600080600080608085870312156200033157600080fd5b6200033c856200027a565b602086810151919550906001600160401b03808211156200035c57600080fd5b818801915088601f8301126200037157600080fd5b815162000382620002bc8262000457565b8082825285820191508585018c878560051b8801011115620003a357600080fd5b600095505b83861015620003c8578051835260019590950194918601918601620003a8565b5060408b01519098509450505080831115620003e357600080fd5b620003f189848a0162000297565b945060608801519250808311156200040857600080fd5b5050620004188782880162000297565b91505092959194509250565b604051601f8201601f191681016001600160401b03811182821017156200044f576200044f620004bd565b604052919050565b60006001600160401b03821115620004735762000473620004bd565b5060051b60200190565b6000600019821415620004a057634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61119880620004e36000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ba484c091161008c578063d9caed1211610066578063d9caed1214610235578063e248cff214610248578063e84f3f971461025b578063ec97d3b41461026e57600080fd5b8063ba484c09146101d9578063c54c2a11146101f9578063d7f5b3591461022257600080fd5b80636a70d081116100c85780636a70d0811461015d5780637f79bea81461019057806395601f09146101b3578063b8fa3736146101c657600080fd5b806307b7ed99146100ef5780632ea5979b14610104578063318c136e14610132575b600080fd5b6101026100fd366004610d4e565b61029c565b005b610117610112366004610f00565b6102b0565b60405161012996959493929190610faf565b60405180910390f35b600054610145906001600160a01b031681565b6040516001600160a01b039091168152602001610129565b61018061016b366004610d4e565b60046020526000908152604090205460ff1681565b6040519015158152602001610129565b61018061019e366004610d4e565b60036020526000908152604090205460ff1681565b6101026101c1366004610d70565b610394565b6101026101d4366004610de7565b6103a7565b6101ec6101e7366004610f2a565b6103ff565b604051610129919061103f565b610145610207366004610dce565b6001602052600090815260409020546001600160a01b031681565b610102610230366004610d4e565b610546565b610102610243366004610d70565b610570565b610102610256366004610e13565b610588565b610102610269366004610e5f565b61069b565b61028e61027c366004610d4e565b60026020526000908152604090205481565b604051908152602001610129565b6102a46108d0565b6102ad8161092c565b50565b60056020908152600092835260408084209091529082529020805460018201546002830180546001600160a01b03841694600160a01b90940463ffffffff169391906102fb90611127565b80601f016020809104026020016040519081016040528092919081815260200182805461032790611127565b80156103745780601f1061034957610100808354040283529160200191610374565b820191906000526020600020905b81548152906001019060200180831161035757829003601f168201915b50505050600383015460049093015491926001600160a01b031691905086565b826103a1818430856109c4565b50505050565b6103af6108d0565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b6040805160c080820183526000808352602080840182905283850182905260608085018190526080850183905260a0850183905260ff871683526005825285832067ffffffffffffffff891684528252918590208551938401865280546001600160a01b0381168552600160a01b900463ffffffff1691840191909152600181015494830194909452600284018054939492939184019161049f90611127565b80601f01602080910402602001604051908101604052809291908181526020018280546104cb90611127565b80156105185780601f106104ed57610100808354040283529160200191610518565b820191906000526020600020905b8154815290600101906020018083116104fb57829003601f168201915b505050918352505060038201546001600160a01b031660208201526004909101546040909101529392505050565b61054e6108d0565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6105786108d0565b610583838383610a2f565b505050565b6105906108d0565b60008060606105a184860186610ede565b9093509150846040856105b485836110d5565b926105c1939291906110ab565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508a815260016020908152604080832054828801516001600160a01b039091168085526003909352922054959650909490935060ff16915061064f90505760405162461bcd60e51b815260040161064690610ff7565b60405180910390fd5b6001600160a01b03811660009081526004602052604090205460ff16156106835761067e818360601c87610a3b565b610691565b610691818360601c87610a2f565b5050505050505050565b6106a36108d0565b60606000806106b484860186610ede565b9092509050846040856106c784836110d5565b926106d4939291906110ab565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508d8152600160209081526040808320546001600160a01b03168084526003909252909120549497509360ff1692506107519150505760405162461bcd60e51b815260040161064690610ff7565b6001600160a01b03811660009081526004602052604090205460ff16156107825761077d818885610a9d565b61078e565b61078e81883086610ad5565b6040518060c00160405280826001600160a01b031681526020018a63ffffffff1681526020018b8152602001858152602001886001600160a01b0316815260200184815250600560008b63ffffffff1663ffffffff16815260200190815260200160002060008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff160217905550604082015181600101556060820151816002019080519060200190610891929190610c24565b5060808201516003820180546001600160a01b0319166001600160a01b0390921691909117905560a09091015160049091015550505050505050505050565b6000546001600160a01b0316331461092a5760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e747261637400006044820152606401610646565b565b6001600160a01b03811660009081526003602052604090205460ff166109a05760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b6064820152608401610646565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6040516001600160a01b03808516602483015283166044820152606481018290526103a19085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ae9565b826103a1818484610bf4565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390528491908216906340c10f19906044015b600060405180830381600087803b158015610a8957600080fd5b505af1158015610691573d6000803e3d6000fd5b60405163079cc67960e41b81526001600160a01b038381166004830152602482018390528491908216906379cc679090604401610a6f565b83610ae2818585856109c4565b5050505050565b600080836001600160a01b031683604051610b049190610f93565b6000604051808303816000865af19150503d8060008114610b41576040519150601f19603f3d011682016040523d82523d6000602084013e610b46565b606091505b509150915081610b8d5760405162461bcd60e51b8152602060048201526012602482015271115490cc8c0e8818d85b1b0819985a5b195960721b6044820152606401610646565b8051156103a15780806020019051810190610ba89190610dac565b6103a15760405162461bcd60e51b815260206004820181905260248201527f45524332303a206f7065726174696f6e20646964206e6f7420737563636565646044820152606401610646565b6040516001600160a01b03831660248201526044810182905261058390849063a9059cbb60e01b906064016109f8565b828054610c3090611127565b90600052602060002090601f016020900481019282610c525760008555610c98565b82601f10610c6b57805160ff1916838001178555610c98565b82800160010185558215610c98579182015b82811115610c98578251825591602001919060010190610c7d565b50610ca4929150610ca8565b5090565b5b80821115610ca45760008155600101610ca9565b80356001600160a01b0381168114610cd457600080fd5b919050565b60008083601f840112610ceb57600080fd5b50813567ffffffffffffffff811115610d0357600080fd5b602083019150836020828501011115610d1b57600080fd5b9250929050565b803563ffffffff81168114610cd457600080fd5b803567ffffffffffffffff81168114610cd457600080fd5b600060208284031215610d6057600080fd5b610d6982610cbd565b9392505050565b600080600060608486031215610d8557600080fd5b610d8e84610cbd565b9250610d9c60208501610cbd565b9150604084013590509250925092565b600060208284031215610dbe57600080fd5b81518015158114610d6957600080fd5b600060208284031215610de057600080fd5b5035919050565b60008060408385031215610dfa57600080fd5b82359150610e0a60208401610cbd565b90509250929050565b600080600060408486031215610e2857600080fd5b83359250602084013567ffffffffffffffff811115610e4657600080fd5b610e5286828701610cd9565b9497909650939450505050565b60008060008060008060a08789031215610e7857600080fd5b86359550610e8860208801610d22565b9450610e9660408801610d36565b9350610ea460608801610cbd565b9250608087013567ffffffffffffffff811115610ec057600080fd5b610ecc89828a01610cd9565b979a9699509497509295939492505050565b60008060408385031215610ef157600080fd5b50508035926020909101359150565b60008060408385031215610f1357600080fd5b610f1c83610d22565b9150610e0a60208401610d36565b60008060408385031215610f3d57600080fd5b610f4683610d36565b9150602083013560ff81168114610f5c57600080fd5b809150509250929050565b60008151808452610f7f8160208601602086016110fb565b601f01601f19169290920160200192915050565b60008251610fa58184602087016110fb565b9190910192915050565b600060018060a01b03808916835263ffffffff8816602084015286604084015260c06060840152610fe360c0840187610f67565b941660808301525060a00152949350505050565b60208082526028908201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696040820152671d195b1a5cdd195960c21b606082015260800190565b60208152600060018060a01b0380845116602084015263ffffffff602085015116604084015260408401516060840152606084015160c0608085015261108860e0850182610f67565b90508160808601511660a085015260a085015160c0850152809250505092915050565b600080858511156110bb57600080fd5b838611156110c857600080fd5b5050820193919092039150565b600082198211156110f657634e487b7160e01b600052601160045260246000fd5b500190565b60005b838110156111165781810151838201526020016110fe565b838111156103a15750506000910152565b600181811c9082168061113b57607f821691505b6020821081141561115c57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212205b233b8aa1d65e79af1b5896786a6929bc1ae4f05088adcfeece639eb2fffe1064736f6c63430008050033";

export class ERC20Handler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    burnableContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Handler> {
    return super.deploy(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      burnableContractAddresses,
      overrides || {}
    ) as Promise<ERC20Handler>;
  }
  getDeployTransaction(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    burnableContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      burnableContractAddresses,
      overrides || {}
    );
  }
  attach(address: string): ERC20Handler {
    return super.attach(address) as ERC20Handler;
  }
  connect(signer: Signer): ERC20Handler__factory {
    return super.connect(signer) as ERC20Handler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20HandlerInterface {
    return new utils.Interface(_abi) as ERC20HandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Handler {
    return new Contract(address, _abi, signerOrProvider) as ERC20Handler;
  }
}
