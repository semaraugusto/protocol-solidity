/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "address",
            name: "handler",
            type: "address",
          },
        ],
        internalType: "struct VAnchorBase.PermissionedAccounts",
        name: "_permissions",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
        ],
        internalType: "struct VAnchorBase.Edge[]",
        name: "edges",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissions",
    outputs: [
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "handler",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "setBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b03191690553480156200002257600080fd5b50604051620057e7380380620057e7833981016040819052620000459162000884565b85858584848484848484838360008263ffffffff1611620000835760405162461bcd60e51b81526004016200007a90620009c2565b60405180910390fd5b60208263ffffffff1610620000ac5760405162461bcd60e51b81526004016200007a906200098b565b6001600160e01b031960e083901b1660a0526001600160601b0319606082901b1660805260005b8263ffffffff168163ffffffff1610156200012457620000f963ffffffff821662000216565b63ffffffff8216600090815260016020526040902055806200011b8162000a3c565b915050620000d3565b506200013663ffffffff831662000216565b60008052600260209081527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b919091556001600455600d80546001600160a01b03199081166001600160a01b039a8b161790915560f89490941b7fff000000000000000000000000000000000000000000000000000000000000001660c0528951600580548616918a16919091179055890151600680548516918916919091179055505060409096015160078054909716941693909317909455505050505060609490941b6001600160601b03191660e0525062000a8695505050505050565b6000816200024657507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6200086d565b81600114156200027857507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f86200086d565b8160021415620002aa57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc6227656200086d565b8160031415620002dc57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee6200086d565b81600414156200030e57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa50135876200086d565b81600514156200034057507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc6200086d565b81600614156200037257507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f6200086d565b8160071415620003a457507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef9992196200086d565b8160081415620003d657507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d6200086d565b81600914156200040857507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce6200086d565b81600a14156200043a57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad76200086d565b81600b14156200046c57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b476200086d565b81600c14156200049e57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b6200086d565b81600d1415620004d057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d3666200086d565b81600e14156200050257507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef6200086d565b81600f14156200053457507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca6200086d565b81601014156200056657507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec6200086d565b81601114156200059757507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b6200086d565b8160121415620005c957507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f6200086d565b8160131415620005fb57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b636200086d565b81601414156200062d57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb6200086d565b81601514156200065f57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b132796200086d565b81601614156200069157507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff6200086d565b8160171415620006c357507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d99626200086d565b8160181415620006f557507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc106200086d565b81601914156200072757507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a0136200086d565b81601a14156200075957507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac146200086d565b81601b14156200078b57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc06200086d565b81601c1415620007bd57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d506200086d565b81601d1415620007ef57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f1876200086d565b81601e14156200082157507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa06200086d565b81601f14156200085357507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad066200086d565b60405162461bcd60e51b81526004016200007a9062000a05565b919050565b805160ff811681146200086d57600080fd5b6000806000806000808688036101008112156200089f578283fd5b8751620008ac8162000a6d565b602089015190975063ffffffff81168114620008c6578384fd5b6040890151909650620008d98162000a6d565b6060890151909550620008ec8162000a6d565b93506060607f198201121562000900578283fd5b50604051606081016001600160401b03811182821017156200093057634e487b7160e01b84526041600452602484fd5b6040526080880151620009438162000a6d565b815260a0880151620009558162000a6d565b602082015260c08801516200096a8162000a6d565b604082015291506200097f60e0880162000872565b90509295509295509295565b6020808252601e908201527f5f6c6576656c732073686f756c64206265206c657373207468616e2033320000604082015260600190565b60208082526023908201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60408201526265726f60e81b606082015260800190565b60208082526013908201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604082015260600190565b600063ffffffff8083168181141562000a6357634e487b7160e01b83526011600452602483fd5b6001019392505050565b6001600160a01b038116811462000a8357600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c614c6562000b8260003960008181610928015281816109b40152818161161f015281816116930152818161187b01528181611c38015281816125d0015281816127a8015281816128490152818161288c01528181612aff01528181612b9a0152612bf6015260008181610d3b01528181610e510152818161149f0152818161173801528181611969015281816119a301528181611a2b015281816126620152818161276301528181612dd70152612eed01526000818161165a01528181611b06015281816129120152612988015260008181610b6101526124fc0152614c656000f3fe6080604052600436106102c95760003560e01c806390eeb02b11610175578063cd87a3b4116100dc578063ec73295911610095578063f5ab0dd61161006f578063f5ab0dd6146107d4578063fa73168714610803578063fc0c546a14610823578063fc7e9c6f14610838576102c9565b8063ec7329591461078a578063ed33639f1461079f578063f178e47c146107b4576102c9565b8063cd87a3b4146106c6578063dbc916b8146106db578063e4a301161461070a578063e5285dcc1461072a578063e70ea87c1461074a578063e82955881461076a576102c9565b8063b2bc6e0f1161012e578063b2bc6e0f14610631578063ba70f75714610651578063bac426d014610666578063bc063e1a14610524578063c2b40ae414610686578063c9be7250146106a6576102c9565b806390eeb02b146105a557806392156311146105ba57806395c87d1a146105da5780639bbca3a9146105ed5780639ff8006314610465578063ab8c71c01461060d576102c9565b80634ecf518b1161023457806371523c32116101ed578063840b2791116101c7578063840b2791146105395780638c0d34d81461054e5780638dd14802146105705780638f1c56bd14610590576102c9565b806371523c32146104ed57806378abb49b1461050f5780637fe24ffe14610524576102c9565b80634ecf518b146104435780634f401241146104655780635d2d766c14610485578063616e0957146104a55780636ad481f3146104c55780636d9833e3146104cd576102c9565b8063414a37ba11610286578063414a37ba146103a85780634167bb1e146103bd57806342d90711146103d057806343e7119f146103f057806344347ba914610410578063460b53e314610423576102c9565b806311e4dcb9146102ce57806317cc915c146103045780632063e3d3146103245780632570b7b4146103395780632b7ac3f31461036657806338bf282e14610388575b600080fd5b3480156102da57600080fd5b506102ee6102e93660046139c9565b61084d565b6040516102fb9190613f36565b60405180910390f35b34801561031057600080fd5b506102ee61031f366004613999565b6108e2565b610337610332366004613821565b6108f7565b005b34801561034557600080fd5b506103596103543660046139c9565b610a26565b6040516102fb9190613f41565b34801561037257600080fd5b5061037b610ad5565b6040516102fb9190613d65565b34801561039457600080fd5b506103596103a33660046139c9565b610ae4565b3480156103b457600080fd5b50610359610bee565b6103376103cb366004613bf3565b610c00565b3480156103dc57600080fd5b506103376103eb3660046139c9565b6111c6565b3480156103fc57600080fd5b5061035961040b366004613c8e565b6111fa565b61033761041e366004613c63565b611217565b34801561042f57600080fd5b5061033761043e366004613821565b611608565b34801561044f57600080fd5b50610458611658565b6040516102fb9190614821565b34801561047157600080fd5b50610337610480366004613821565b61167c565b34801561049157600080fd5b506104586104a0366004613999565b6116cc565b3480156104b157600080fd5b506102ee6104c036600461384a565b6116e4565b610337611864565b3480156104d957600080fd5b506102ee6104e8366004613999565b6118eb565b3480156104f957600080fd5b50610502611967565b6040516102fb9190614832565b34801561051b57600080fd5b5061035961198b565b34801561053057600080fd5b50610359611991565b34801561054557600080fd5b50610359611999565b34801561055a57600080fd5b5061056361199f565b6040516102fb9190613e58565b34801561057c57600080fd5b5061033761058b3660046137cc565b611b7c565b34801561059c57600080fd5b50610359611bc8565b3480156105b157600080fd5b50610458611bce565b3480156105c657600080fd5b506102ee6105d5366004613999565b611bda565b6103376105e83660046137e6565b611bef565b3480156105f957600080fd5b50610337610608366004613b93565b611cad565b34801561061957600080fd5b50610622611cf7565b6040516102fb93929190613d79565b34801561063d57600080fd5b5061033761064c366004613ade565b611d14565b34801561065d57600080fd5b50610359611d49565b34801561067257600080fd5b506103376106813660046137cc565b611d64565b34801561069257600080fd5b506103596106a1366004613999565b611db0565b3480156106b257600080fd5b506103376106c1366004613b10565b611dc2565b3480156106d257600080fd5b50610458611dda565b3480156106e757600080fd5b506106fb6106f6366004613999565b611ddf565b6040516102fb9392919061480b565b34801561071657600080fd5b506103376107253660046139c9565b611e12565b34801561073657600080fd5b506102ee610745366004613999565b611e9a565b34801561075657600080fd5b50610359610765366004613999565b611eaf565b34801561077657600080fd5b50610359610785366004613999565b611ec1565b34801561079657600080fd5b506103596124d6565b3480156107ab57600080fd5b5061037b6124fa565b3480156107c057600080fd5b506103596107cf366004613999565b61251e565b3480156107e057600080fd5b506107f46107ef36600461387c565b612530565b6040516102fb93929190613eb1565b34801561080f57600080fd5b506102ee61081e366004613999565b6125b9565b34801561082f57600080fd5b5061037b6125ce565b34801561084457600080fd5b506104586125f2565b60008161085c575060006108dc565b6000838152600c602052604090205463ffffffff16805b6000858152600b6020908152604080832063ffffffff851684529091529020548414156108a5576001925050506108dc565b63ffffffff81166108b45750601e5b806108be81614afd565b9150508163ffffffff168163ffffffff161415610873576000925050505b92915050565b60116020526000908152604090205460ff1681565b6001600160a01b03821661099d5780341461091157600080fd5b604051633d97186b60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d690349061096690339087906000903090600401613dc0565b6000604051808303818588803b15801561097f57600080fd5b505af1158015610993573d6000803e3d6000fd5b5050505050610a22565b604051633d97186b60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906109ef903390869086903090600401613dc0565b600060405180830381600087803b158015610a0957600080fd5b505af1158015610a1d573d6000803e3d6000fd5b505050505b5050565b6000600160f81b8210610a545760405162461bcd60e51b8152600401610a4b90614380565b60405180910390fd5b610a61600160f81b614b93565b83138015610a725750600160f81b83125b610a8e5760405162461bcd60e51b8152600401610a4b906140f3565b6000610a9a8385614a56565b90506000811215610acb57610aae81614b93565b610ac690600080516020614c10833981519152614a95565b610acd565b805b949350505050565b600d546001600160a01b031681565b6000600080516020614c108339815191528310610b135760405162461bcd60e51b8152600401610a4b90614156565b600080516020614c108339815191528210610b405760405162461bcd60e51b8152600401610a4b9061428a565b610b48613447565b8381526020810183905260405163014cf2b360e51b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063299e566090610b9e908490600401613e27565b60206040518083038186803b158015610bb657600080fd5b505afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acd91906139b1565b600080516020614c1083398151915281565b60005b836040015151811015610c7357610c4484604001518281518110610c3757634e487b7160e01b600052603260045260246000fd5b6020026020010151611e9a565b15610c615760405162461bcd60e51b8152600401610a4b906144f8565b80610c6b81614b1d565b915050610c03565b50600080516020614c1083398151915282604051602001610c9491906146de565b6040516020818303038152906040528051906020012060001c610cb79190614b5c565b60a084015114610cd95760405162461bcd60e51b8152600401610a4b9061411f565b610ceb82602001518360600151610a26565b836080015114610d0d5760405162461bcd60e51b8152600401610a4b90614056565b82604001515160021415610e235760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491867f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610d7792919061474b565b60006040518083038186803b158015610d8f57600080fd5b505af4158015610da3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dcb91908101906139ea565b91509150610dd8816116e4565b610df45760405162461bcd60e51b8152600401610a4b906143a5565b8451610e009083612605565b610e1c5760405162461bcd60e51b8152600401610a4b9061448a565b5050610f2e565b82604001515160101415610f165760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f867f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610e8d92919061474b565b60006040518083038186803b158015610ea557600080fd5b505af4158015610eb9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ee191908101906139ea565b91509150610eee816116e4565b610f0a5760405162461bcd60e51b8152600401610a4b906143a5565b8451610e009083612706565b60405162461bcd60e51b8152600401610a4b90614626565b60005b836040015151811015610fa85760016011600086604001518481518110610f6857634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610fa090614b1d565b915050610f31565b50600082602001511315610fea5760105482602001511115610fdc5760405162461bcd60e51b8152600401610a4b9061465d565b610fea8183602001516108f7565b6000826020015112156110645781516001600160a01b031661101e5760405162461bcd60e51b8152600401610a4b9061418b565b600f54826020015161102f90614b93565b101561104d5760405162461bcd60e51b8152600401610a4b90614208565b61106481836000015184602001516105e890614b93565b606082015115611080576110808260400151836060015161278e565b606083015180516110989160015b60200201516128fa565b50606083015151600354600080516020614bf083398151915291906110cc90600290600160201b900463ffffffff16614aac565b84608001516040516110e093929190613f4a565b60405180910390a16060830151600080516020614bf0833981519152906001602002015160035461112090600190600160201b900463ffffffff16614aac565b8460a0015160405161113493929190613f4a565b60405180910390a160005b8360400151518110156111c0577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce8460400151828151811061119157634e487b7160e01b600052603260045260246000fd5b60200260200101516040516111a69190613f41565b60405180910390a1806111b881614b1d565b91505061113f565b50505050565b6006546001600160a01b031633146111f05760405162461bcd60e51b8152600401610a4b906142fb565b610a228282612ada565b600b60209081526000928352604080842090915290825290205481565b6007546001600160a01b031633146112415760405162461bcd60e51b8152600401610a4b906146a7565b600260045414156112645760405162461bcd60e51b8152600401610a4b906145ef565b60026004908155604051639215631160e01b8152309163921563119161128c91879101613f41565b60206040518083038186803b1580156112a457600080fd5b505afa1580156112b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112dc9190613979565b156114985760008381526009602052604090205460ff1661130f5760405162461bcd60e51b8152600401610a4b90613ff9565b600083815260086020526040902054600a8054839290811061134157634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020154106113705760405162461bcd60e51b8152600401610a4b90614253565b600083815260086020908152604091829020548251606081018452868152918201859052918101839052600a8054839081106113bc57634e487b7160e01b600052603260045260246000fd5b60009182526020808320845160039093020191825583810151600180840191909155604094850151600290930192909255878352600c9052918120549091601e9161140f9163ffffffff909116906148cb565b6114199190614b70565b6000868152600c60209081526040808320805463ffffffff191663ffffffff8616908117909155600b835281842090845290915290819020869055519091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f906114899087908690889061480b565b60405180910390a150506115fe565b600a5460ff7f000000000000000000000000000000000000000000000000000000000000000016116114dc5760405162461bcd60e51b8152600401610a4b90613f8b565b6000838152600960209081526040808320805460ff19166001908117909155600a8054835160608101855289815280860189815281860189815294830184559287528051600383027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a881019190915592517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a984015592517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa9092019190915587855260088452828520819055600b84528285208580529093528184208690559051919290917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054906115f29088908790899061480b565b60405180910390a15050505b5050600160045550565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca69388906109ef90339086908690600401613d9c565b7f000000000000000000000000000000000000000000000000000000000000000081565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b6906109ef90339086908690600401613d9c565b600c6020526000908152604090205463ffffffff1681565b60006117178260008151811061170a57634e487b7160e01b600052603260045260246000fd5b60200260200101516118eb565b6117335760405162461bcd60e51b8152600401610a4b90614085565b61175e7f000000000000000000000000000000000000000000000000000000000000000060016148f3565b60ff168251146117805760405162461bcd60e51b8152600401610a4b906143cc565b60005b600a54811015611859576000600a82815481106117b057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050905061182a8160000151858460016117ff91906148b3565b8151811061181d57634e487b7160e01b600052603260045260246000fd5b602002602001015161084d565b6118465760405162461bcd60e51b8152600401610a4b90614403565b508061185181614b1d565b915050611783565b50600190505b919050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889034906118b79033906000908190600401613d9c565b6000604051808303818588803b1580156118d057600080fd5b505af11580156118e4573d6000803e3d6000fd5b5050505050565b6000816118fa5750600061185f565b60035463ffffffff16805b63ffffffff811660009081526002602052604090205484141561192d5760019250505061185f565b63ffffffff811661193c5750601e5b8061194681614afd565b9150508163ffffffff168163ffffffff161415611905575060009392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60105481565b600160f81b81565b600f5481565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b038111156119ea57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611a2357816020015b611a10613465565b815260200190600190039081611a085790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015611b7857611a5f8160016148b3565b600a5410611aef57600a8181548110611a8857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050828281518110611adf57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250611b66565b604051806060016040528060008152602001611b307f000000000000000000000000000000000000000000000000000000000000000063ffffffff16611ec1565b81526020016000815250828281518110611b5a57634e487b7160e01b600052603260045260246000fd5b60200260200101819052505b80611b7081614b1d565b915050611a29565b5090565b6006546001600160a01b03163314611ba65760405162461bcd60e51b8152600401610a4b906142fb565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600e5481565b60035463ffffffff1681565b60009081526009602052604090205460ff1690565b60026004541415611c125760405162461bcd60e51b8152600401610a4b906145ef565b6002600455611c213082612ae5565b604051632404142f60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634808285e90611c7190869085908790600401613e04565b600060405180830381600087803b158015611c8b57600080fd5b505af1158015611c9f573d6000803e3d6000fd5b505060016004555050505050565b600081602001511315611ced57611cc78160200151612bc1565b60105481602001511115611ced5760405162461bcd60e51b8152600401610a4b9061465d565b610a228282612c81565b6005546006546007546001600160a01b0392831692918216911683565b80516001600160a01b03163314611d3d5760405162461bcd60e51b8152600401610a4b90613fc2565b611d4681613201565b50565b60035463ffffffff1660009081526002602052604090205490565b6005546001600160a01b03163314611d8e5760405162461bcd60e51b8152600401610a4b906140bc565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b60026020526000908152604090205481565b611dcb83611d14565b611dd58282611cad565b505050565b601e81565b600a8181548110611def57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600054610100900460ff1680611e2b575060005460ff16155b611e475760405162461bcd60e51b8152600401610a4b90614332565b600054610100900460ff16158015611e72576000805460ff1961ff0019909116610100171660011790555b611e7c8383612ada565b611e8461324d565b8015611dd5576000805461ff0019169055505050565b60009081526011602052604090205460ff1690565b60086020526000908152604090205481565b600081611eef57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c61185f565b8160011415611f1f57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f861185f565b8160021415611f4f57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc62276561185f565b8160031415611f7f57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee61185f565b8160041415611faf57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa501358761185f565b8160051415611fdf57507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc61185f565b816006141561200f57507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f61185f565b816007141561203f57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef99921961185f565b816008141561206f57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d61185f565b816009141561209f57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce61185f565b81600a14156120cf57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad761185f565b81600b14156120ff57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b4761185f565b81600c141561212f57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b61185f565b81600d141561215f57507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d36661185f565b81600e141561218f57507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef61185f565b81600f14156121bf57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca61185f565b81601014156121ef57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec61185f565b816011141561221e57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b61185f565b816012141561224e57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f61185f565b816013141561227e57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b6361185f565b81601414156122ae57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb61185f565b81601514156122de57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b1327961185f565b816016141561230e57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff61185f565b816017141561233e57507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d996261185f565b816018141561236e57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc1061185f565b816019141561239e57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a01361185f565b81601a14156123ce57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac1461185f565b81601b14156123fe57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc061185f565b81601c141561242e57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d5061185f565b81601d141561245e57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f18761185f565b81601e141561248e57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa061185f565b81601f14156124be57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad0661185f565b60405162461bcd60e51b8152600401610a4b90614528565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020526000908152604090205481565b612538613447565b612540613489565b612548613447565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60096020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600354600160201b900463ffffffff1681565b6000808380602001905181019061261c9190613900565b9050600080600061262c84612530565b600d54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca539061268d908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600190600401613eda565b60206040518083038186803b1580156126a557600080fd5b505afa1580156126b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126dd9190613979565b9450846126fc5760405162461bcd60e51b8152600401610a4b906142cb565b5050505092915050565b6000808380602001905181019061271d9190613900565b9050600080600061272d84612530565b600d54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca539061268d908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600090600401613eda565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906127dd903090600401613d65565b60206040518083038186803b1580156127f557600080fd5b505afa158015612809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282d91906139b1565b90508115611dd557818110612875576128706001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461324f565b611dd5565b6040516340c10f1960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f19906128c39086908690600401613deb565b600060405180830381600087803b1580156128dd57600080fd5b505af11580156128f1573d6000803e3d6000fd5b50505050505050565b600354600090600160201b900463ffffffff166129387f00000000000000000000000000000000000000000000000000000000000000006002614981565b63ffffffff168163ffffffff1614156129635760405162461bcd60e51b8152600401610a4b9061459f565b6000612970600283614918565b9050600061297e8686610ae4565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015612a47576129c5600286614b70565b63ffffffff16612a00578392506129e18163ffffffff16611ec1565b63ffffffff821660009081526001602052604090208590559150612a1c565b63ffffffff811660009081526001602052604090205492508391505b612a268383610ae4565b9350612a33600286614918565b945080612a3f81614b38565b915050612986565b50600354600090601e90612a629063ffffffff1660016148cb565b612a6c9190614b70565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150612aa69087906148cb565b6003805463ffffffff92909216600160201b0267ffffffff0000000019909216919091179055509394505050505092915050565b600f91909155601055565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190612b34903090600401613d65565b60206040518083038186803b158015612b4c57600080fd5b505afa158015612b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b8491906139b1565b9050818110612875576128706001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461324f565b3415612bdf5760405162461bcd60e51b8152600401610a4b9061443a565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90612c2f90339030908690600401613d9c565b602060405180830381600087803b158015612c4957600080fd5b505af1158015612c5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190613979565b60026004541415612ca45760405162461bcd60e51b8152600401610a4b906145ef565b600260045560005b826040015151811015612d0f57612ce083604001518281518110610c3757634e487b7160e01b600052603260045260246000fd5b15612cfd5760405162461bcd60e51b8152600401610a4b906144f8565b80612d0781614b1d565b915050612cac565b50600080516020614c1083398151915281604051602001612d3091906146de565b6040516020818303038152906040528051906020012060001c612d539190614b5c565b60a083015114612d755760405162461bcd60e51b8152600401610a4b9061411f565b612d8781602001518260600151610a26565b826080015114612da95760405162461bcd60e51b8152600401610a4b90614056565b81604001515160021415612ebf5760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401612e1392919061474b565b60006040518083038186803b158015612e2b57600080fd5b505af4158015612e3f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612e6791908101906139ea565b91509150612e74816116e4565b612e905760405162461bcd60e51b8152600401610a4b906143a5565b8351612e9c9083612605565b612eb85760405162461bcd60e51b8152600401610a4b9061448a565b5050612fb2565b81604001515160101415610f165760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401612f2992919061474b565b60006040518083038186803b158015612f4157600080fd5b505af4158015612f55573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612f7d91908101906139ea565b91509150612f8a816116e4565b612fa65760405162461bcd60e51b8152600401610a4b906143a5565b8351612e9c9083612706565b60005b82604001515181101561302c5760016011600085604001518481518110612fec57634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061302490614b1d565b915050612fb5565b506000816020015112156130ab5780516001600160a01b03166130615760405162461bcd60e51b8152600401610a4b9061418b565b600f54816020015161307290614b93565b10156130905760405162461bcd60e51b8152600401610a4b90614208565b6130ab816000015182602001516130a690614b93565b612ae5565b6060810151156130c7576130c78160400151826060015161278e565b606082015180516130d991600161108e565b50606082015151600354600080516020614bf0833981519152919061310d90600290600160201b900463ffffffff16614aac565b836080015160405161312193929190613f4a565b60405180910390a16060820151600080516020614bf0833981519152906001602002015160035461316190600190600160201b900463ffffffff16614aac565b8360a0015160405161317593929190613f4a565b60405180910390a160005b8260400151518110156115fe577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce836040015182815181106131d257634e487b7160e01b600052603260045260246000fd5b60200260200101516040516131e79190613f41565b60405180910390a1806131f981614b1d565b915050613180565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e5082602001516040516132429190613f78565b60405180910390a250565b565b611dd58363a9059cbb60e01b848460405160240161326e929190613deb565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915260006132f5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661332f9092919063ffffffff16565b805190915015611dd557808060200190518101906133139190613979565b611dd55760405162461bcd60e51b8152600401610a4b90614555565b606061333e8484600085613348565b90505b9392505050565b60608247101561336a5760405162461bcd60e51b8152600401610a4b906141c2565b61337385613408565b61338f5760405162461bcd60e51b8152600401610a4b906144c1565b600080866001600160a01b031685876040516133ab9190613d49565b60006040518083038185875af1925050503d80600081146133e8576040519150601f19603f3d011682016040523d82523d6000602084013e6133ed565b606091505b50915091506133fd82828661340e565b979650505050505050565b3b151590565b6060831561341d575081613341565b82511561342d5782518084602001fd5b8160405162461bcd60e51b8152600401610a4b9190613f78565b60405180604001604052806002906020820280368337509192915050565b60405180606001604052806000815260200160008019168152602001600081525090565b60405180604001604052806002905b6134a0613447565b8152602001906001900390816134985790505090565b80356001600160a01b038116811461185f57600080fd5b600082601f8301126134dd578081fd5b604051604081018181106001600160401b03821117156134ff576134ff614bd9565b8060405250808385604086011115613515578384fd5b835b6002811015613536578135835260209283019290910190600101613517565b509195945050505050565b600082601f830112613551578081fd5b8135602061356661356183614869565b614840565b8281528181019085830183850287018401881015613582578586fd5b855b858110156135a057813584529284019290840190600101613584565b5090979650505050505050565b600082601f8301126135bd578081fd5b81356135cb6135618261488c565b8181528460208386010111156135df578283fd5b816020850160208301379081016020019190915292915050565b60006040828403121561360a578081fd5b604051604081016001600160401b03828210818311171561362d5761362d614bd9565b8160405282935061363d856134b6565b8352602085013591508082111561365357600080fd5b50613660858286016135ad565b6020830152505092915050565b600060c0828403121561367e578081fd5b61368860c0614840565b9050613693826134b6565b8152602082013560208201526136ab604083016134b6565b60408201526060820135606082015260808201356001600160401b03808211156136d457600080fd5b6136e0858386016135ad565b608084015260a08401359150808211156136f957600080fd5b50613706848285016135ad565b60a08301525092915050565b600060e08284031215613723578081fd5b61372d60c0614840565b905081356001600160401b038082111561374657600080fd5b613752858386016135ad565b8352602084013591508082111561376857600080fd5b613774858386016135ad565b6020840152604084013591508082111561378d57600080fd5b5061379a84828501613541565b6040830152506137ad83606084016134cd565b606082015260a0820135608082015260c082013560a082015292915050565b6000602082840312156137dd578081fd5b613341826134b6565b6000806000606084860312156137fa578182fd5b613803846134b6565b9250613811602085016134b6565b9150604084013590509250925092565b60008060408385031215613833578182fd5b61383c836134b6565b946020939093013593505050565b60006020828403121561385b578081fd5b81356001600160401b03811115613870578182fd5b610acd84828501613541565b600061010080838503121561388f578182fd5b83601f84011261389d578182fd5b6040518181018181106001600160401b03821117156138be576138be614bd9565b60405280848381018710156138d1578485fd5b8493505b60088410156138f5578035825260019390930192602091820191016138d5565b509095945050505050565b6000610100808385031215613913578182fd5b83601f840112613921578182fd5b6040518181018181106001600160401b038211171561394257613942614bd9565b6040528084838101871015613955578485fd5b8493505b60088410156138f557805182526001939093019260209182019101613959565b60006020828403121561398a578081fd5b81518015158114610acb578182fd5b6000602082840312156139aa578081fd5b5035919050565b6000602082840312156139c2578081fd5b5051919050565b600080604083850312156139db578182fd5b50508035926020909101359150565b600080604083850312156139fc578182fd5b82516001600160401b0380821115613a12578384fd5b818501915085601f830112613a25578384fd5b81516020613a356135618361488c565b8281528882848701011115613a48578687fd5b613a5783838301848801614ad1565b87820151909650935082841115613a6c578485fd5b838701935087601f850112613a7f578485fd5b83519250613a8f61356184614869565b8381528181019250848201828502860183018a1015613aac578687fd5b8695505b84861015613ace578051845260019590950194928201928201613ab0565b5080955050505050509250929050565b600060208284031215613aef578081fd5b81356001600160401b03811115613b04578182fd5b610acd848285016135f9565b600080600060608486031215613b24578081fd5b83356001600160401b0380821115613b3a578283fd5b613b46878388016135f9565b94506020860135915080821115613b5b578283fd5b613b6787838801613712565b93506040860135915080821115613b7c578283fd5b50613b898682870161366d565b9150509250925092565b60008060408385031215613ba5578182fd5b82356001600160401b0380821115613bbb578384fd5b613bc786838701613712565b93506020850135915080821115613bdc578283fd5b50613be98582860161366d565b9150509250929050565b600080600060608486031215613c07578081fd5b83356001600160401b0380821115613c1d578283fd5b613c2987838801613712565b94506020860135915080821115613c3e578283fd5b50613c4b8682870161366d565b925050613c5a604085016134b6565b90509250925092565b600080600060608486031215613c77578081fd5b505081359360208301359350604090920135919050565b60008060408385031215613ca0578182fd5b82359150602083013563ffffffff81168114613cba578182fd5b809150509250929050565b8060005b60028110156111c057613cdd848351613cf3565b6040939093019260209190910190600101613cc9565b8060005b60028110156111c0578151845260209384019390910190600101613cf7565b60008151808452613d2e816020860160208601614ad1565b601f01601f19169290920160200192915050565b60ff169052565b60008251613d5b818460208701614ad1565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03948516815292841660208401526040830191909152909116606082015260800190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0393841681526020810192909252909116604082015260600190565b60408101818360005b6002811015613e4f578151835260209283019290910190600101613e30565b50505092915050565b602080825282518282018190526000919060409081850190868401855b82811015613ea45781518051855286810151878601528501518585015260609093019290850190600101613e75565b5091979650505050505050565b6101008101613ec08286613cf3565b613ecd6040830185613cc5565b610acd60c0830184613cf3565b6000610160613ee9838a613cf3565b613ef66040840189613cc5565b613f0360c0840188613cf3565b80610100840152613f1681840187613d16565b60ff95909516610120840152505090151561014090910152949350505050565b901515815260200190565b90815260200190565b600084825263ffffffff8416602083015260606040830152613f6f6060830184613d16565b95945050505050565b6000602082526133416020830184613d16565b6020808252601a908201527f5468697320416e63686f72206973206174206361706163697479000000000000604082015260600190565b6020808252601c908201527f6f6e6c79206f776e65722063616e206265207265676973746572656400000000604082015260600190565b60208082526037908201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860408201527f6520627269646765206265666f72652075706461746573000000000000000000606082015260800190565b602080825260159082015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b604082015260600190565b6020808252601c908201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604082015260600190565b60208082526018908201527f73656e646572206973206e6f7420746865206272696467650000000000000000604082015260600190565b602080825260129082015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b604082015260600190565b6020808252601c908201527f496e636f72726563742065787465726e616c2064617461206861736800000000604082015260600190565b6020808252818101527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604082015260600190565b6020808252601e908201527f43616e277420776974686472617720746f207a65726f20616464726573730000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b6020808252601e908201527f4e6577206c65616620696e646578206d75737420626520677265617465720000604082015260600190565b60208082526021908201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6040820152601960fa1b606082015260800190565b60208082526016908201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604082015260600190565b60208082526017908201527f73656e646572206973206e6f74207468652061646d696e000000000000000000604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600b908201526a496e76616c69642066656560a81b604082015260600190565b6020808252600d908201526c496e76616c696420726f6f747360981b604082015260600190565b6020808252601b908201527f496e636f727265637420726f6f74206172726179206c656e6774680000000000604082015260600190565b60208082526017908201527f4e65696768626f7220726f6f74206e6f7420666f756e64000000000000000000604082015260600190565b60208082526030908201527f4554482076616c756520697320737570706f73656420746f206265203020666f60408201526f7220455243323020696e7374616e636560801b606082015260800190565b60208082526019908201527f496e76616c6964207472616e73616374696f6e2070726f6f6600000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b602080825260169082015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b604082015260600190565b602080825260139082015272496e646578206f7574206f6620626f756e647360681b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526030908201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160408201526f1d995cc818d85b88189948185919195960821b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526017908201527f756e737570706f7274656420696e70757420636f756e74000000000000000000604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60006020825260018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a084015261472e60e0840182613d16565b905060a0840151601f198483030160c0850152613f6f8282613d16565b600060408252835160e06040840152614768610120840182613d16565b9050602080860151603f19808685030160608701526147878483613d16565b60408901518782039092016080880152815180825291840194508592508301905b808310156147c857845182529383019360019290920191908301906147a8565b50606088015193506147dd60a0870185613cf3565b608088015160e087015260a08801516101008701529350614802905081850186613d42565b50509392505050565b9283526020830191909152604082015260600190565b63ffffffff91909116815260200190565b60ff91909116815260200190565b6040518181016001600160401b038111828210171561486157614861614bd9565b604052919050565b60006001600160401b0382111561488257614882614bd9565b5060209081020190565b60006001600160401b038211156148a5576148a5614bd9565b50601f01601f191660200190565b600082198211156148c6576148c6614bad565b500190565b600063ffffffff8083168185168083038211156148ea576148ea614bad565b01949350505050565b600060ff821660ff84168060ff0382111561491057614910614bad565b019392505050565b600063ffffffff8084168061492f5761492f614bc3565b92169190910492915050565b80825b600180861161494d5750614978565b81870482111561495f5761495f614bad565b8086161561496c57918102915b9490941c93800261493e565b94509492505050565b600063ffffffff610acd818286168386166000826149a157506001613341565b816149ae57506000613341565b81600181146149c457600281146149ce576149fb565b6001915050613341565b60ff8411156149df576149df614bad565b6001841b9150848211156149f5576149f5614bad565b50613341565b5060208310610133831016604e8410600b8410161715614a2e575081810a83811115614a2957614a29614bad565b613341565b614a3b848484600161493b565b808604821115614a4d57614a4d614bad565b02949350505050565b60008083128015600160ff1b850184121615614a7457614a74614bad565b6001600160ff1b0384018313811615614a8f57614a8f614bad565b50500390565b600082821015614aa757614aa7614bad565b500390565b600063ffffffff83811690831681811015614ac957614ac9614bad565b039392505050565b60005b83811015614aec578181015183820152602001614ad4565b838111156111c05750506000910152565b600063ffffffff821680614b1357614b13614bad565b6000190192915050565b6000600019821415614b3157614b31614bad565b5060010190565b600063ffffffff80831681811415614b5257614b52614bad565b6001019392505050565b600082614b6b57614b6b614bc3565b500690565b600063ffffffff80841680614b8757614b87614bc3565b92169190910692915050565b6000600160ff1b821415614ba957614ba9614bad565b0390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfef3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220c4aa6cbe5ccf2d692cd4646568937a5ba85af71d15084ce5aa154b681bd243f464736f6c63430008000033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _permissions: { bridge: string; admin: string; handler: string },
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _token,
      _permissions,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _permissions: { bridge: string; admin: string; handler: string },
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _token,
      _permissions,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
