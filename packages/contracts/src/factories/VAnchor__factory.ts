/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "chainID",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "latestLeafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "chainID",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "latestLeafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint64",
        name: "chainID",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "latestLeafIndex",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIDType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "chainID",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "latestLeafIndex",
            type: "uint32",
          },
        ],
        internalType: "struct LinkableTree.Edge[]",
        name: "edges",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_chainID",
        type: "uint64",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "neighborChainID",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newHandler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "sourceChainID",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b5060405162005c7738038062005c778339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c61517462000b0360003960008181610ba201528181610d8b01528181610e1f015281816110dc0152818161117a015281816113be01528181611fcd0152818161208e01528181612f6c0152818161300a015281816130570152818161320c01526132a401526000818161069e01528181610bed01528181610c570152818161122901528181611a5a01528181611c3801528181611cc401528181613345015281816134a4015281816137ae01526138d801526000818161060201528181610ce001528181611da0015281816139ee0152613ace015260008181610b1201528181613a9e0152613b6701526151746000f3fe6080604052600436106103815760003560e01c80638ea3099e116101d1578063c80916d411610102578063e5285dcc116100a0578063f178e47c1161006f578063f178e47c14610b34578063f5ab0dd614610b61578063fc0c546a14610b90578063fc7e9c6f14610bc457600080fd5b8063e5285dcc14610a7c578063e829558814610aac578063ec73295914610acc578063ed33639f14610b0057600080fd5b8063cd87a3b4116100dc578063cd87a3b4146109c9578063da32d3fd146109de578063dbc916b814610a11578063e4a3011614610a5c57600080fd5b8063c80916d414610956578063c9be725014610976578063cac8abfb1461099657600080fd5b80639ff800631161016f578063b7566a6711610149578063b7566a67146108df578063ba70f757146108ff578063bc063e1a14610708578063c2b40ae41461092957600080fd5b80639ff8006314610624578063a0d192f51461089f578063b2bc6e0f146108bf57600080fd5b806395c87d1a116101ab57806395c87d1a1461081f5780639bbca3a9146108325780639d0c4f67146108525780639fa12d0b1461087257600080fd5b80638ea3099e146107cc5780638f1c56bd146107ec57806390eeb02b1461080257600080fd5b80634da3e675116102b657806372c1ad0311610254578063840b279111610223578063840b2791146107505780638a8b4015146107665780638b7e8782146107795780638c0d34d8146107aa57600080fd5b806372c1ad03146106d257806378abb49b146106f25780637fe24ffe14610708578063839df9451461072057600080fd5b8063616e095711610290578063616e0957146106445780636ad481f3146106645780636d9833e31461066c57806371523c321461068c57600080fd5b80634da3e675146105c45780634ecf518b146105f05780634f4012411461062457600080fd5b80632b7ac3f311610323578063414a37ba116102fd578063414a37ba1461054f5780634167bb1e1461057157806342d9071114610584578063460b53e3146105a457600080fd5b80632b7ac3f3146104cc5780633408e4701461050457806336357e531461051757600080fd5b80631e1fe28e1161035f5780631e1fe28e1461042e5780631e627617146104675780632063e3d3146104895780632570b7b41461049e57600080fd5b80630b27fb9a1461038657806317cc915c146103be5780631a3de1f2146103fe575b600080fd5b34801561039257600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103ca57600080fd5b506103ee6103d9366004614383565b600c6020526000908152604090205460ff1681565b60405190151581526020016103b5565b34801561040a57600080fd5b506103ee610419366004614739565b60076020526000908152604090205460ff1681565b34801561043a57600080fd5b506103ee610449366004614739565b6001600160401b031660009081526007602052604090205460ff1690565b34801561047357600080fd5b5061047c610be9565b6040516103b591906148cb565b61049c61049736600461418c565b610d3f565b005b3480156104aa57600080fd5b506104be6104b93660046144cf565b610e80565b6040519081526020016103b5565b3480156104d857600080fd5b50600b546104ec906001600160a01b031681565b6040516001600160a01b0390911681526020016103b5565b34801561051057600080fd5b50466104be565b34801561052357600080fd5b506104be6105323660046147ac565b600960209081526000928352604080842090915290825290205481565b34801561055b57600080fd5b506104be60008051602061511f83398151915281565b61049c61057f3660046146a9565b610f70565b34801561059057600080fd5b5061049c61059f3660046144cf565b611090565b3480156105b057600080fd5b5061049c6105bf36600461418c565b6110c5565b3480156105d057600080fd5b506105d9611115565b60405165ffffffffffff90911681526020016103b5565b3480156105fc57600080fd5b506103a47f000000000000000000000000000000000000000000000000000000000000000081565b34801561063057600080fd5b5061049c61063f36600461418c565b611163565b34801561065057600080fd5b506103ee61065f366004614261565b6111b3565b61049c6113a7565b34801561067857600080fd5b506103ee610687366004614383565b61142e565b34801561069857600080fd5b506106c07f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016103b5565b3480156106de57600080fd5b5061049c6106ed3660046141b8565b6114a9565b3480156106fe57600080fd5b506104be60105481565b34801561071457600080fd5b506104be600160f81b81565b34801561072c57600080fd5b506103ee61073b366004614383565b600d6020526000908152604090205460ff1681565b34801561075c57600080fd5b506104be600f5481565b61049c610774366004614770565b61162a565b34801561078557600080fd5b50610791600160f81b81565b6040516001600160f01b031990911681526020016103b5565b3480156107b657600080fd5b506107bf611c34565b6040516103b59190614903565b3480156107d857600080fd5b506104be6107e736600461449a565b611e0a565b3480156107f857600080fd5b506104be600e5481565b34801561080e57600080fd5b506003546103a49063ffffffff1681565b61049c61082d36600461414b565b611f6d565b34801561083e57600080fd5b5061049c61084d366004614646565b612033565b34801561085e57600080fd5b506103ee61086d366004614754565b61221c565b34801561087e57600080fd5b5061089261088d3660046141ed565b6122c3565b6040516103b59190614885565b3480156108ab57600080fd5b5061049c6108ba3660046141b8565b612388565b3480156108cb57600080fd5b5061049c6108da3660046144f1565b6124f3565b3480156108eb57600080fd5b5061049c6108fa3660046145ac565b612558565b34801561090b57600080fd5b5060035463ffffffff166000908152600260205260409020546104be565b34801561093557600080fd5b506104be610944366004614383565b60026020526000908152604090205481565b34801561096257600080fd5b506005546104ec906001600160a01b031681565b34801561098257600080fd5b5061049c610991366004614525565b612572565b3480156109a257600080fd5b506103a46109b1366004614739565b60066020526000908152604090205463ffffffff1681565b3480156109d557600080fd5b506103a4601e81565b3480156109ea57600080fd5b506103a46109f9366004614739565b600a6020526000908152604090205463ffffffff1681565b348015610a1d57600080fd5b50610a31610a2c366004614383565b612585565b604080516001600160401b039094168452602084019290925263ffffffff16908201526060016103b5565b348015610a6857600080fd5b5061049c610a773660046144cf565b6125c8565b348015610a8857600080fd5b506103ee610a97366004614383565b6000908152600c602052604090205460ff1690565b348015610ab857600080fd5b506104be610ac7366004614383565b612686565b348015610ad857600080fd5b506104be7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610b0c57600080fd5b506104ec7f000000000000000000000000000000000000000000000000000000000000000081565b348015610b4057600080fd5b506104be610b4f366004614383565b60016020526000908152604090205481565b348015610b6d57600080fd5b50610b81610b7c366004614295565b612cc6565b6040516103b593929190614979565b348015610b9c57600080fd5b506104ec7f000000000000000000000000000000000000000000000000000000000000000081565b348015610bd057600080fd5b506003546103a490640100000000900463ffffffff1681565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610c2657610c266150f3565b604051908082528060200260200182016040528015610c4f578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610d3b57610c8b816001614d77565b60085410610cdb5760088181548110610ca657610ca66150dd565b906000526020600020906003020160010154828281518110610cca57610cca6150dd565b602002602001018181525050610d29565b610d0a7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16612686565b828281518110610d1c57610d1c6150dd565b6020026020010181815250505b80610d338161501e565b915050610c55565b5090565b6001600160a01b038216610ded57803414610d5957600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610dd057600080fd5b505af1158015610de4573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610e6457600080fd5b505af1158015610e78573d6000803e3d6000fd5b505050505050565b6000600160f81b8210610ec85760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610ed5600160f81b615094565b83138015610ee65750600160f81b83125b610f275760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610ebf565b6000610f338385614f20565b90506000811215610f6457610f4781615094565b610f5f9060008051602061511f833981519152614f5f565b610f66565b805b9150505b92915050565b610f7a8383612d4f565b600082602001511315610fbb5760105482602001511115610fad5760405162461bcd60e51b8152600401610ebf90614b02565b610fbb818360200151610d3f565b6000826020015112156110655781516001600160a01b031661101f5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610ebf565b600f54826020015161103090615094565b101561104e5760405162461bcd60e51b8152600401610ebf90614a3f565b611065818360000151846020015161082d90615094565b6060820151156110815761108182604001518360600151612f54565b61108b838361309b565b505050565b6005546001600160a01b031633146110ba5760405162461bcd60e51b8152600401610ebf90614b4c565b600f91909155601055565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610e4a90339086908690600401614861565b60408051600160f81b602082018190524660e01b6001600160e01b0319811660228401528351808403600601815260269093019093526000929161115881614f9b565b60d01c935050505090565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610e4a90339086908690600401614861565b60006111d8826000815181106111cb576111cb6150dd565b602002602001015161142e565b6112245760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610ebf565b61124f7f00000000000000000000000000000000000000000000000000000000000000006001614db7565b60ff168251146112a15760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610ebf565b60005b60085481101561139e576000600882815481106112c3576112c36150dd565b600091825260209182902060408051606081018252600390930290910180546001600160401b03168084526001808301549585019590955260029091015463ffffffff169183019190915290925061133f918690611322908690614d77565b81518110611332576113326150dd565b602002602001015161221c565b61138b5760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610ebf565b50806113968161501e565b9150506112a4565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca693889034906113fa9033906000908190600401614861565b6000604051808303818588803b15801561141357600080fd5b505af1158015611427573d6000803e3d6000fd5b5050505050565b60008161143d57506000919050565b60035463ffffffff16805b63ffffffff811660009081526002602052604090205484141561146f575060019392505050565b63ffffffff811661147e5750601e5b8061148881614ffe565b9150508163ffffffff168163ffffffff161415611448575060009392505050565b6005546001600160a01b031633146114d35760405162461bcd60e51b8152600401610ebf90614b4c565b6001600160a01b03821661151f5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610ebf565b600b5463ffffffff808316600160a01b90920416106115705760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610ebf565b600b5461158b90600160a01b900463ffffffff166001614d8f565b63ffffffff168163ffffffff1611156115e25760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b6044820152606401610ebf565b600580546001600160a01b039093166001600160a01b031990931692909217909155600b805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b6005546001600160a01b031633146116545760405162461bcd60e51b8152600401610ebf90614b4c565b600260045414156116775760405162461bcd60e51b8152600401610ebf90614acb565b60026004908155604051630f0ff14760e11b81526001600160401b038516918101919091523090631e1fe28e9060240160206040518083038186803b1580156116bf57600080fd5b505afa1580156116d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f79190614361565b15611a53576001600160401b03831660009081526007602052604090205460ff1661178a5760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610ebf565b6001600160401b0383166000908152600660205260409020546008805463ffffffff80851693169081106117c0576117c06150dd565b600091825260209091206002600390920201015463ffffffff16106118275760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610ebf565b6001600160401b03831660009081526006602052604090205460088054909163ffffffff1690811061185b5761185b6150dd565b60009182526020909120600260039092020101546118829063ffffffff1662010000614d8f565b63ffffffff168163ffffffff16106118ec5760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610ebf565b6001600160401b03831660008181526006602090815260409182902054825160608101845293845290830185905263ffffffff848116928401929092526008805492909116929183908110611943576119436150dd565b60009182526020808320845160039390930201805467ffffffffffffffff19166001600160401b03938416178155848201516001808301919091556040958601516002909201805463ffffffff191663ffffffff9384161790559289168452600a909152928220549192601e926119bc92911690614d8f565b6119c69190615071565b6001600160401b0386166000818152600a60209081526040808320805463ffffffff191663ffffffff8781169182179092556009845282852090855283529281902089905580519384529187169083015281018690529091507fdc99d807173c6caa23f32fd39646c61a94c6fb290c77d39dee765ca1a81b320b9060600160405180910390a15050611c2a565b60085460ff7f00000000000000000000000000000000000000000000000000000000000000001611611ac75760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610ebf565b6001600160401b038381166000818152600760209081526040808320805460ff19166001908117909155600880548351606080820186528882528187018c815263ffffffff8c81168489018181529786018755958a528351600386027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee38101805492909e1667ffffffffffffffff1990921691909117909c5590517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee48c015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee5909a0180549a861663ffffffff199b8c1617905588885260068752858820805495841695909a16949094179098556009855283862086805285528386208a90558351968752938601529084018790529093927f2355d7d593b8d116e51dafc9a436346d2209a7b84ae06180cd4b5d98f7579f7d910160405180910390a15050505b5050600160045550565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115611c7157611c716150f3565b604051908082528060200260200182016040528015611cbc57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181611c8f5790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610d3b57611cf8816001614d77565b60085410611d805760088181548110611d1357611d136150dd565b600091825260209182902060408051606081018252600390930290910180546001600160401b0316835260018101549383019390935260029092015463ffffffff16918101919091528251839083908110611d7057611d706150dd565b6020026020010181905250611df8565b604051806060016040528060006001600160401b03168152602001611dca7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16612686565b8152602001600063ffffffff16815250828281518110611dec57611dec6150dd565b60200260200101819052505b80611e028161501e565b915050611cc2565b600060008051602061511f8339815191528310611e695760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610ebf565b60008051602061511f8339815191528210611ed05760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610ebf565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611f11919060040161496b565b60206040518083038186803b158015611f2957600080fd5b505afa158015611f3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f619190614720565b925050505b9392505050565b60026004541415611f905760405162461bcd60e51b8152600401610ebf90614acb565b6002600455611f9f30826131f4565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b15801561201157600080fd5b505af1158015612025573d6000803e3d6000fd5b505060016004555050505050565b600260045414156120565760405162461bcd60e51b8152600401610ebf90614acb565b60026004556120658282612d4f565b60008160200151131561213f5760208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd916120c6913391309190600401614861565b602060405180830381600087803b1580156120e057600080fd5b505af11580156120f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121189190614361565b506010548160200151111561213f5760405162461bcd60e51b8152600401610ebf90614b02565b6000816020015112156121ed5780516001600160a01b03166121a35760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610ebf565b600f5481602001516121b490615094565b10156121d25760405162461bcd60e51b8152600401610ebf90614a3f565b6121ed816000015182602001516121e890615094565b6131f4565b6060810151156122095761220981604001518260600151612f54565b612213828261309b565b50506001600455565b60008161222b57506000610f6a565b6001600160401b0383166000908152600a602052604090205463ffffffff16805b6001600160401b038516600090815260096020908152604080832063ffffffff8516845290915290205484141561228857600192505050610f6a565b63ffffffff81166122975750601e5b806122a181614ffe565b9150508163ffffffff168163ffffffff16141561224c57506000949350505050565b6060816001600160401b038111156122dd576122dd6150f3565b604051908082528060200260200182016040528015612306578160200160208202803683370190505b50905060005b8281101561238157612345848483818110612329576123296150dd565b905060200201356000908152600c602052604090205460ff1690565b1561236f57600182828151811061235e5761235e6150dd565b911515602092830291909101909101525b806123798161501e565b91505061230c565b5092915050565b6005546001600160a01b031633146123b25760405162461bcd60e51b8152600401610ebf90614b4c565b6001600160a01b0382166123fe5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610ebf565b600b5463ffffffff808316600160a01b909204161061244f5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610ebf565b600b5461246a90600160a01b900463ffffffff166001614d8f565b63ffffffff168163ffffffff1611156124c15760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b6044820152606401610ebf565b600b805463ffffffff909216600160a01b026001600160c01b03199092166001600160a01b0390931692909217179055565b80516001600160a01b0316331461254c5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610ebf565b612555816132cb565b50565b612561846124f3565b61256c838383610f70565b50505050565b61257b836124f3565b61108b8282612033565b6008818154811061259557600080fd5b60009182526020909120600390910201805460018201546002909201546001600160401b03909116925063ffffffff1683565b600054610100900460ff16806125e1575060005460ff16155b6126445760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610ebf565b600054610100900460ff16158015612666576000805461ffff19166101011790555b600f8390556010829055801561108b576000805461ff0019169055505050565b6000816126b457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b81600114156126e457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561271457507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561274457507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004141561277457507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156127a457507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600614156127d457507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561280457507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561283457507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009141561286457507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a141561289457507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b14156128c457507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c14156128f457507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561292457507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561295457507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f141561298457507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156129b457507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b81601114156129e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b8160121415612a1357507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b8160131415612a4357507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b8160141415612a7357507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415612aa357507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415612ad357507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160171415612b0357507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160181415612b3357507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612b6357507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612b9357507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612bc357507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612bf357507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612c2357507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612c5357507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612c8357507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610ebf565b919050565b612cce613dba565b612cd6613dd8565b612cde613dba565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612ded57612d9583604001518281518110612d7857612d786150dd565b60200260200101516000908152600c602052604090205460ff1690565b15612ddb5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610ebf565b80612de58161501e565b915050612d52565b5060008051602061511f83398151915281604051602001612e0e9190614b83565b6040516020818303038152906040528051906020012060001c612e31919061505d565b60a083015114612e835760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610ebf565b612e9581602001518260600151610e80565b826080015114612edf5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610ebf565b612ee882613317565b60005b82604001515181101561108b576001600c600085604001518481518110612f1457612f146150dd565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612f4c9061501e565b915050612eeb565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612fb657600080fd5b505afa158015612fca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fee9190614720565b9050811561108b578181106130315761108b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846135d1565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610dd057600080fd5b606082015180516020909101516130b29190613623565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd91906130f990600290640100000000900463ffffffff16614f76565b836080015160405161310d939291906149fe565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd906001602002015160035461316090600190640100000000900463ffffffff16614f76565b8360a00151604051613174939291906149fe565b60405180910390a160005b82604001515181101561108b577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce836040015182815181106131c3576131c36150dd565b60200260200101516040516131da91815260200190565b60405180910390a1806131ec8161501e565b91505061317f565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561325657600080fd5b505afa15801561326a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061328e9190614720565b90508181106130315761108b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846135d1565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e50826020015160405161330c9190614a2c565b60405180910390a250565b806040015151600214156134765760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401613381929190614bf0565b60006040518083038186803b15801561339957600080fd5b505af41580156133ad573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526133d5919081019061439c565b915091506133e2816111b3565b61341e5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610ebf565b825161342a9083613751565b61108b5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610ebf565b806040015151601014156135895760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016134e0929190614bf0565b60006040518083038186803b1580156134f857600080fd5b505af415801561350c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613534919081019061439c565b91509150613541816111b3565b61357d5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610ebf565b825161342a908361387b565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610ebf565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261108b908490613903565b6000828152600d602052604081205460ff16156136525760405162461bcd60e51b8152600401610ebf90614a8a565b6000828152600d602052604090205460ff16156136815760405162461bcd60e51b8152600401610ebf90614a8a565b600061368d84846139d5565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b561372d836001614d8f565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080838060200190518101906137689190614300565b9050600080600061377884612cc6565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906137d9908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906001906004016149a2565b60206040518083038186803b1580156137f157600080fd5b505afa158015613805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138299190614361565b9450846138715760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610ebf565b5050505092915050565b600080838060200190518101906138929190614300565b905060008060006138a284612cc6565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906137d9908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906000906004016149a2565b6000613958826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613c429092919063ffffffff16565b80519091501561108b57808060200190518101906139769190614361565b61108b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ebf565b600354600090640100000000900463ffffffff16613a147f00000000000000000000000000000000000000000000000000000000000000006002614e44565b63ffffffff168163ffffffff161415613a885760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610ebf565b6000613a95600283614ddc565b90506000613ac47f00000000000000000000000000000000000000000000000000000000000000008787611e0a565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613bae57613b0b600286615071565b63ffffffff16613b4657839250613b278163ffffffff16612686565b63ffffffff821660009081526001602052604090208590559150613b62565b63ffffffff811660009081526001602052604090205492508391505b613b8d7f00000000000000000000000000000000000000000000000000000000000000008484611e0a565b9350613b9a600286614ddc565b945080613ba681615039565b915050613acc565b50600354600090601e90613bc99063ffffffff166001614d8f565b613bd39190615071565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613c0d908790614d8f565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b6060613c518484600085613c59565b949350505050565b606082471015613cba5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610ebf565b843b613d085760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ebf565b600080866001600160a01b03168587604051613d249190614845565b60006040518083038185875af1925050503d8060008114613d61576040519150601f19603f3d011682016040523d82523d6000602084013e613d66565b606091505b5091509150613d76828286613d81565b979650505050505050565b60608315613d90575081611f66565b825115613da05782518084602001fd5b8160405162461bcd60e51b8152600401610ebf9190614a2c565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613def613dba565b815260200190600190039081613de75790505090565b8035612cc181615109565b600082601f830112613e2157600080fd5b604051604081018181106001600160401b0382111715613e4357613e436150f3565b8060405250808385604086011115613e5a57600080fd5b60005b6002811015613e7c578135835260209283019290910190600101613e5d565b509195945050505050565b600082601f830112613e9857600080fd5b81356020613ead613ea883614d2d565b614cfd565b80838252828201915082860187848660051b8901011115613ecd57600080fd5b60005b85811015613eec57813584529284019290840190600101613ed0565b5090979650505050505050565b600082601f830112613f0a57600080fd5b8135613f18613ea882614d50565b818152846020838601011115613f2d57600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613f5c57600080fd5b604051604081016001600160401b038282108183111715613f7f57613f7f6150f3565b8160405282935084359150613f9382615109565b90825260208401359080821115613fa957600080fd5b50613fb685828601613ef9565b6020830152505092915050565b600060c08284031215613fd557600080fd5b613fdd614cb2565b9050613fe882613e05565b81526020820135602082015261400060408301613e05565b60408201526060820135606082015260808201356001600160401b038082111561402957600080fd5b61403585838601613ef9565b608084015260a084013591508082111561404e57600080fd5b5061405b84828501613ef9565b60a08301525092915050565b600060e0828403121561407957600080fd5b614081614cb2565b905081356001600160401b038082111561409a57600080fd5b6140a685838601613ef9565b835260208401359150808211156140bc57600080fd5b6140c885838601613ef9565b602084015260408401359150808211156140e157600080fd5b506140ee84828501613e87565b6040830152506141018360608401613e10565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612cc157600080fd5b80356001600160401b0381168114612cc157600080fd5b60008060006060848603121561416057600080fd5b833561416b81615109565b9250602084013561417b81615109565b929592945050506040919091013590565b6000806040838503121561419f57600080fd5b82356141aa81615109565b946020939093013593505050565b600080604083850312156141cb57600080fd5b82356141d681615109565b91506141e460208401614120565b90509250929050565b6000806020838503121561420057600080fd5b82356001600160401b038082111561421757600080fd5b818501915085601f83011261422b57600080fd5b81358181111561423a57600080fd5b8660208260051b850101111561424f57600080fd5b60209290920196919550909350505050565b60006020828403121561427357600080fd5b81356001600160401b0381111561428957600080fd5b610f6684828501613e87565b60006101008083850312156142a957600080fd5b83601f8401126142b857600080fd5b6142c0614cda565b80848684870111156142d157600080fd5b600093505b60088410156142f6578035835260019390930192602092830192016142d6565b5095945050505050565b600061010080838503121561431457600080fd5b83601f84011261432357600080fd5b61432b614cda565b808486848701111561433c57600080fd5b600093505b60088410156142f657805183526001939093019260209283019201614341565b60006020828403121561437357600080fd5b81518015158114610f6457600080fd5b60006020828403121561439557600080fd5b5035919050565b600080604083850312156143af57600080fd5b82516001600160401b03808211156143c657600080fd5b818501915085601f8301126143da57600080fd5b815160206143ea613ea883614d50565b82815288828487010111156143fe57600080fd5b61440d83838301848801614fd2565b8782015190965093508284111561442357600080fd5b838701935087601f85011261443757600080fd5b83519250614447613ea884614d2d565b8381528181019250848201600585901b860183018a101561446757600080fd5b600095505b8486101561448a57805184526001959095019492820192820161446c565b5080955050505050509250929050565b6000806000606084860312156144af57600080fd5b83356144ba81615109565b95602085013595506040909401359392505050565b600080604083850312156144e257600080fd5b50508035926020909101359150565b60006020828403121561450357600080fd5b81356001600160401b0381111561451957600080fd5b610f6684828501613f4a565b60008060006060848603121561453a57600080fd5b83356001600160401b038082111561455157600080fd5b61455d87838801613f4a565b9450602086013591508082111561457357600080fd5b61457f87838801614067565b9350604086013591508082111561459557600080fd5b506145a286828701613fc3565b9150509250925092565b600080600080608085870312156145c257600080fd5b84356001600160401b03808211156145d957600080fd5b6145e588838901613f4a565b955060208701359150808211156145fb57600080fd5b61460788838901614067565b9450604087013591508082111561461d57600080fd5b5061462a87828801613fc3565b925050606085013561463b81615109565b939692955090935050565b6000806040838503121561465957600080fd5b82356001600160401b038082111561467057600080fd5b61467c86838701614067565b9350602085013591508082111561469257600080fd5b5061469f85828601613fc3565b9150509250929050565b6000806000606084860312156146be57600080fd5b83356001600160401b03808211156146d557600080fd5b6146e187838801614067565b945060208601359150808211156146f757600080fd5b5061470486828701613fc3565b925050604084013561471581615109565b809150509250925092565b60006020828403121561473257600080fd5b5051919050565b60006020828403121561474b57600080fd5b611f6682614134565b6000806040838503121561476757600080fd5b6141aa83614134565b60008060006060848603121561478557600080fd5b61478e84614134565b9250602084013591506147a360408501614120565b90509250925092565b600080604083850312156147bf57600080fd5b6141d683614134565b8060005b600281101561256c576147e08483516147f6565b60409390930192602091909101906001016147cc565b8060005b600281101561256c5781518452602093840193909101906001016147fa565b60008151808452614831816020860160208601614fd2565b601f01601f19169290920160200192915050565b60008251614857818460208701614fd2565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b818110156148bf5783511515835292840192918401916001016148a1565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156148bf578351835292840192918401916001016148e7565b602080825282518282018190526000919060409081850190868401855b8281101561495e57815180516001600160401b03168552868101518786015285015163ffffffff168585015260609093019290850190600101614920565b5091979650505050505050565b60408101610f6a82846147f6565b610100810161498882866147f6565b61499560408301856147c8565b613c5160c08301846147f6565b60006101606149b1838a6147f6565b6149be60408401896147c8565b6149cb60c08401886147f6565b806101008401526149de81840187614819565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff83166020820152606060408201526000614a236060830184614819565b95945050505050565b602081526000611f666020830184614819565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a0840152614bd360e0840182614819565b905060a0840151601f198483030160c0850152614a238282614819565b604081526000835160e06040840152614c0d610120840182614819565b9050602080860151603f1980868503016060870152614c2c8483614819565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614c6e5784518252938301936001929092019190830190614c4e565b5060608801519350614c8360a08701856147f6565b608088015160e087015260a088015161010087015260ff8716838701529350614ca99050565b50509392505050565b60405160c081016001600160401b0381118282101715614cd457614cd46150f3565b60405290565b60405161010081016001600160401b0381118282101715614cd457614cd46150f3565b604051601f8201601f191681016001600160401b0381118282101715614d2557614d256150f3565b604052919050565b60006001600160401b03821115614d4657614d466150f3565b5060051b60200190565b60006001600160401b03821115614d6957614d696150f3565b50601f01601f191660200190565b60008219821115614d8a57614d8a6150b1565b500190565b600063ffffffff808316818516808303821115614dae57614dae6150b1565b01949350505050565b600060ff821660ff84168060ff03821115614dd457614dd46150b1565b019392505050565b600063ffffffff80841680614df357614df36150c7565b92169190910492915050565b600181815b80851115614e3c578163ffffffff04821115614e2257614e226150b1565b80851615614e2f57918102915b93841c9390800290614e04565b509250929050565b600063ffffffff610f66818516828516600082614e6357506001610f6a565b81614e7057506000610f6a565b8160018114614e865760028114614e9057614ec1565b6001915050610f6a565b60ff841115614ea157614ea16150b1565b6001841b915063ffffffff821115614ebb57614ebb6150b1565b50610f6a565b5060208310610133831016604e8410600b8410161715614ef8575081810a63ffffffff811115614ef357614ef36150b1565b610f6a565b614f028383614dff565b8063ffffffff04821115614f1857614f186150b1565b029392505050565b60008083128015600160ff1b850184121615614f3e57614f3e6150b1565b6001600160ff1b0384018313811615614f5957614f596150b1565b50500390565b600082821015614f7157614f716150b1565b500390565b600063ffffffff83811690831681811015614f9357614f936150b1565b039392505050565b805160208201516001600160d01b03198082169291906006831015614fca5780818460060360031b1b83161693505b505050919050565b60005b83811015614fed578181015183820152602001614fd5565b8381111561256c5750506000910152565b600063ffffffff821680615014576150146150b1565b6000190192915050565b6000600019821415615032576150326150b1565b5060010190565b600063ffffffff80831681811415615053576150536150b1565b6001019392505050565b60008261506c5761506c6150c7565b500690565b600063ffffffff80841680615088576150886150c7565b92169190910692915050565b6000600160ff1b8214156150aa576150aa6150b1565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461255557600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212206a0e2059ad66710ad0b351282c86e6119e3f6dd42f6e6a918d11a745019e04f864736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
