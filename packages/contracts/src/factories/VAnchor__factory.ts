/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "chainID",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "latestLeafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "chainID",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "latestLeafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint64",
        name: "chainID",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "latestLeafIndex",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "chainID",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "latestLeafIndex",
            type: "uint32",
          },
        ],
        internalType: "struct LinkableTree.Edge[]",
        name: "edges",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_chainID",
        type: "uint64",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "neighborChainID",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newHandler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "sourceChainID",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b5060405162005b7f38038062005b7f8339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c61507c62000b0360003960008181610b2f01528181610d1801528181610dac01528181611069015281816110b9015281816112fd01528181611f0c01528181611fcd01528181612eab01528181612f4901528181612f960152818161314b01526131e301526000818161065c01528181610b7a01528181610be4015281816111680152818161199901528181611b7701528181611c0301528181613284015281816133e3015281816136ed01526138170152600081816105c001528181610c6d01528181611cdf0152818161392d0152613a0d015260008181610a9f015281816139dd0152613aa6015261507c6000f3fe60806040526004361061036b5760003560e01c80638f1c56bd116101c6578063c9be7250116100f7578063e829558811610095578063f178e47c1161006f578063f178e47c14610ac1578063f5ab0dd614610aee578063fc0c546a14610b1d578063fc7e9c6f14610b5157600080fd5b8063e829558814610a39578063ec73295914610a59578063ed33639f14610a8d57600080fd5b8063da32d3fd116100d1578063da32d3fd1461096b578063dbc916b81461099e578063e4a30116146109e9578063e5285dcc14610a0957600080fd5b8063c9be725014610903578063cac8abfb14610923578063cd87a3b41461095657600080fd5b8063a0d192f511610164578063ba70f7571161013e578063ba70f7571461088c578063bc063e1a146106c6578063c2b40ae4146108b6578063c80916d4146108e357600080fd5b8063a0d192f51461082c578063b2bc6e0f1461084c578063b7566a671461086c57600080fd5b80639bbca3a9116101a05780639bbca3a9146107bf5780639d0c4f67146107df5780639fa12d0b146107ff5780639ff80063146105e257600080fd5b80638f1c56bd1461077957806390eeb02b1461078f57806395c87d1a146107ac57600080fd5b80634ecf518b116102a057806378abb49b1161023e578063840b279111610218578063840b27911461070e5780638a8b4015146107245780638c0d34d8146107375780638ea3099e1461075957600080fd5b806378abb49b146106b05780637fe24ffe146106c6578063839df945146106de57600080fd5b80636ad481f31161027a5780636ad481f3146106225780636d9833e31461062a57806371523c321461064a57806372c1ad031461069057600080fd5b80634ecf518b146105ae5780634f401241146105e2578063616e09571461060257600080fd5b80632b7ac3f31161030d578063414a37ba116102e7578063414a37ba146105395780634167bb1e1461055b57806342d907111461056e578063460b53e31461058e57600080fd5b80632b7ac3f3146104b65780633408e470146104ee57806336357e531461050157600080fd5b80631e1fe28e116103495780631e1fe28e146104185780631e627617146104515780632063e3d3146104735780632570b7b41461048857600080fd5b80630b27fb9a1461037057806317cc915c146103a85780631a3de1f2146103e8575b600080fd5b34801561037c57600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103b457600080fd5b506103d86103c33660046142c2565b600c6020526000908152604090205460ff1681565b604051901515815260200161039f565b3480156103f457600080fd5b506103d8610403366004614678565b60076020526000908152604090205460ff1681565b34801561042457600080fd5b506103d8610433366004614678565b6001600160401b031660009081526007602052604090205460ff1690565b34801561045d57600080fd5b50610466610b76565b60405161039f919061480a565b6104866104813660046140cb565b610ccc565b005b34801561049457600080fd5b506104a86104a336600461440e565b610e0d565b60405190815260200161039f565b3480156104c257600080fd5b50600b546104d6906001600160a01b031681565b6040516001600160a01b03909116815260200161039f565b3480156104fa57600080fd5b50466104a8565b34801561050d57600080fd5b506104a861051c3660046146eb565b600960209081526000928352604080842090915290825290205481565b34801561054557600080fd5b506104a860008051602061502783398151915281565b6104866105693660046145e8565b610efd565b34801561057a57600080fd5b5061048661058936600461440e565b61101d565b34801561059a57600080fd5b506104866105a93660046140cb565b611052565b3480156105ba57600080fd5b5061038e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105ee57600080fd5b506104866105fd3660046140cb565b6110a2565b34801561060e57600080fd5b506103d861061d3660046141a0565b6110f2565b6104866112e6565b34801561063657600080fd5b506103d86106453660046142c2565b61136d565b34801561065657600080fd5b5061067e7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161039f565b34801561069c57600080fd5b506104866106ab3660046140f7565b6113e8565b3480156106bc57600080fd5b506104a860105481565b3480156106d257600080fd5b506104a8600160f81b81565b3480156106ea57600080fd5b506103d86106f93660046142c2565b600d6020526000908152604090205460ff1681565b34801561071a57600080fd5b506104a8600f5481565b6104866107323660046146af565b611569565b34801561074357600080fd5b5061074c611b73565b60405161039f9190614842565b34801561076557600080fd5b506104a86107743660046143d9565b611d49565b34801561078557600080fd5b506104a8600e5481565b34801561079b57600080fd5b5060035461038e9063ffffffff1681565b6104866107ba36600461408a565b611eac565b3480156107cb57600080fd5b506104866107da366004614585565b611f72565b3480156107eb57600080fd5b506103d86107fa366004614693565b61215b565b34801561080b57600080fd5b5061081f61081a36600461412c565b612202565b60405161039f91906147c4565b34801561083857600080fd5b506104866108473660046140f7565b6122c7565b34801561085857600080fd5b50610486610867366004614430565b612432565b34801561087857600080fd5b506104866108873660046144eb565b612497565b34801561089857600080fd5b5060035463ffffffff166000908152600260205260409020546104a8565b3480156108c257600080fd5b506104a86108d13660046142c2565b60026020526000908152604090205481565b3480156108ef57600080fd5b506005546104d6906001600160a01b031681565b34801561090f57600080fd5b5061048661091e366004614464565b6124b1565b34801561092f57600080fd5b5061038e61093e366004614678565b60066020526000908152604090205463ffffffff1681565b34801561096257600080fd5b5061038e601e81565b34801561097757600080fd5b5061038e610986366004614678565b600a6020526000908152604090205463ffffffff1681565b3480156109aa57600080fd5b506109be6109b93660046142c2565b6124c4565b604080516001600160401b039094168452602084019290925263ffffffff169082015260600161039f565b3480156109f557600080fd5b50610486610a0436600461440e565b612507565b348015610a1557600080fd5b506103d8610a243660046142c2565b6000908152600c602052604090205460ff1690565b348015610a4557600080fd5b506104a8610a543660046142c2565b6125c5565b348015610a6557600080fd5b506104a87f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610a9957600080fd5b506104d67f000000000000000000000000000000000000000000000000000000000000000081565b348015610acd57600080fd5b506104a8610adc3660046142c2565b60016020526000908152604090205481565b348015610afa57600080fd5b50610b0e610b093660046141d4565b612c05565b60405161039f939291906148b8565b348015610b2957600080fd5b506104d67f000000000000000000000000000000000000000000000000000000000000000081565b348015610b5d57600080fd5b5060035461038e90640100000000900463ffffffff1681565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610bb357610bb3614ffb565b604051908082528060200260200182016040528015610bdc578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610cc857610c18816001614cb6565b60085410610c685760088181548110610c3357610c33614fe5565b906000526020600020906003020160010154828281518110610c5757610c57614fe5565b602002602001018181525050610cb6565b610c977f000000000000000000000000000000000000000000000000000000000000000063ffffffff166125c5565b828281518110610ca957610ca9614fe5565b6020026020010181815250505b80610cc081614f26565b915050610be2565b5090565b6001600160a01b038216610d7a57803414610ce657600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610d5d57600080fd5b505af1158015610d71573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610df157600080fd5b505af1158015610e05573d6000803e3d6000fd5b505050505050565b6000600160f81b8210610e555760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610e62600160f81b614f9c565b83138015610e735750600160f81b83125b610eb45760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610e4c565b6000610ec08385614e5f565b90506000811215610ef157610ed481614f9c565b610eec90600080516020615027833981519152614e9e565b610ef3565b805b9150505b92915050565b610f078383612c8e565b600082602001511315610f485760105482602001511115610f3a5760405162461bcd60e51b8152600401610e4c90614a41565b610f48818360200151610ccc565b600082602001511215610ff25781516001600160a01b0316610fac5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e4c565b600f548260200151610fbd90614f9c565b1015610fdb5760405162461bcd60e51b8152600401610e4c9061497e565b610ff281836000015184602001516107ba90614f9c565b60608201511561100e5761100e82604001518360600151612e93565b6110188383612fda565b505050565b6005546001600160a01b031633146110475760405162461bcd60e51b8152600401610e4c90614a8b565b600f91909155601055565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610dd7903390869086906004016147a0565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610dd7903390869086906004016147a0565b60006111178260008151811061110a5761110a614fe5565b602002602001015161136d565b6111635760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610e4c565b61118e7f00000000000000000000000000000000000000000000000000000000000000006001614cf6565b60ff168251146111e05760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610e4c565b60005b6008548110156112dd5760006008828154811061120257611202614fe5565b600091825260209182902060408051606081018252600390930290910180546001600160401b03168084526001808301549585019590955260029091015463ffffffff169183019190915290925061127e918690611261908690614cb6565b8151811061127157611271614fe5565b602002602001015161215b565b6112ca5760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610e4c565b50806112d581614f26565b9150506111e3565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890349061133990339060009081906004016147a0565b6000604051808303818588803b15801561135257600080fd5b505af1158015611366573d6000803e3d6000fd5b5050505050565b60008161137c57506000919050565b60035463ffffffff16805b63ffffffff81166000908152600260205260409020548414156113ae575060019392505050565b63ffffffff81166113bd5750601e5b806113c781614f06565b9150508163ffffffff168163ffffffff161415611387575060009392505050565b6005546001600160a01b031633146114125760405162461bcd60e51b8152600401610e4c90614a8b565b6001600160a01b03821661145e5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e4c565b600b5463ffffffff808316600160a01b90920416106114af5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e4c565b600b546114ca90600160a01b900463ffffffff166001614cce565b63ffffffff168163ffffffff1611156115215760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b6044820152606401610e4c565b600580546001600160a01b039093166001600160a01b031990931692909217909155600b805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b6005546001600160a01b031633146115935760405162461bcd60e51b8152600401610e4c90614a8b565b600260045414156115b65760405162461bcd60e51b8152600401610e4c90614a0a565b60026004908155604051630f0ff14760e11b81526001600160401b038516918101919091523090631e1fe28e9060240160206040518083038186803b1580156115fe57600080fd5b505afa158015611612573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163691906142a0565b15611992576001600160401b03831660009081526007602052604090205460ff166116c95760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610e4c565b6001600160401b0383166000908152600660205260409020546008805463ffffffff80851693169081106116ff576116ff614fe5565b600091825260209091206002600390920201015463ffffffff16106117665760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610e4c565b6001600160401b03831660009081526006602052604090205460088054909163ffffffff1690811061179a5761179a614fe5565b60009182526020909120600260039092020101546117c19063ffffffff1662010000614cce565b63ffffffff168163ffffffff161061182b5760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610e4c565b6001600160401b03831660008181526006602090815260409182902054825160608101845293845290830185905263ffffffff84811692840192909252600880549290911692918390811061188257611882614fe5565b60009182526020808320845160039390930201805467ffffffffffffffff19166001600160401b03938416178155848201516001808301919091556040958601516002909201805463ffffffff191663ffffffff9384161790559289168452600a909152928220549192601e926118fb92911690614cce565b6119059190614f79565b6001600160401b0386166000818152600a60209081526040808320805463ffffffff191663ffffffff8781169182179092556009845282852090855283529281902089905580519384529187169083015281018690529091507fdc99d807173c6caa23f32fd39646c61a94c6fb290c77d39dee765ca1a81b320b9060600160405180910390a15050611b69565b60085460ff7f00000000000000000000000000000000000000000000000000000000000000001611611a065760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610e4c565b6001600160401b038381166000818152600760209081526040808320805460ff19166001908117909155600880548351606080820186528882528187018c815263ffffffff8c81168489018181529786018755958a528351600386027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee38101805492909e1667ffffffffffffffff1990921691909117909c5590517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee48c015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee5909a0180549a861663ffffffff199b8c1617905588885260068752858820805495841695909a16949094179098556009855283862086805285528386208a90558351968752938601529084018790529093927f2355d7d593b8d116e51dafc9a436346d2209a7b84ae06180cd4b5d98f7579f7d910160405180910390a15050505b5050600160045550565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115611bb057611bb0614ffb565b604051908082528060200260200182016040528015611bfb57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181611bce5790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610cc857611c37816001614cb6565b60085410611cbf5760088181548110611c5257611c52614fe5565b600091825260209182902060408051606081018252600390930290910180546001600160401b0316835260018101549383019390935260029092015463ffffffff16918101919091528251839083908110611caf57611caf614fe5565b6020026020010181905250611d37565b604051806060016040528060006001600160401b03168152602001611d097f000000000000000000000000000000000000000000000000000000000000000063ffffffff166125c5565b8152602001600063ffffffff16815250828281518110611d2b57611d2b614fe5565b60200260200101819052505b80611d4181614f26565b915050611c01565b60006000805160206150278339815191528310611da85760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610e4c565b6000805160206150278339815191528210611e0f5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610e4c565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611e5091906004016148aa565b60206040518083038186803b158015611e6857600080fd5b505afa158015611e7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea0919061465f565b925050505b9392505050565b60026004541415611ecf5760405162461bcd60e51b8152600401610e4c90614a0a565b6002600455611ede3082613133565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611f5057600080fd5b505af1158015611f64573d6000803e3d6000fd5b505060016004555050505050565b60026004541415611f955760405162461bcd60e51b8152600401610e4c90614a0a565b6002600455611fa48282612c8e565b60008160200151131561207e5760208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd916120059133913091906004016147a0565b602060405180830381600087803b15801561201f57600080fd5b505af1158015612033573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205791906142a0565b506010548160200151111561207e5760405162461bcd60e51b8152600401610e4c90614a41565b60008160200151121561212c5780516001600160a01b03166120e25760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610e4c565b600f5481602001516120f390614f9c565b10156121115760405162461bcd60e51b8152600401610e4c9061497e565b61212c8160000151826020015161212790614f9c565b613133565b6060810151156121485761214881604001518260600151612e93565b6121528282612fda565b50506001600455565b60008161216a57506000610ef7565b6001600160401b0383166000908152600a602052604090205463ffffffff16805b6001600160401b038516600090815260096020908152604080832063ffffffff851684529091529020548414156121c757600192505050610ef7565b63ffffffff81166121d65750601e5b806121e081614f06565b9150508163ffffffff168163ffffffff16141561218b57506000949350505050565b6060816001600160401b0381111561221c5761221c614ffb565b604051908082528060200260200182016040528015612245578160200160208202803683370190505b50905060005b828110156122c05761228484848381811061226857612268614fe5565b905060200201356000908152600c602052604090205460ff1690565b156122ae57600182828151811061229d5761229d614fe5565b911515602092830291909101909101525b806122b881614f26565b91505061224b565b5092915050565b6005546001600160a01b031633146122f15760405162461bcd60e51b8152600401610e4c90614a8b565b6001600160a01b03821661233d5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610e4c565b600b5463ffffffff808316600160a01b909204161061238e5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610e4c565b600b546123a990600160a01b900463ffffffff166001614cce565b63ffffffff168163ffffffff1611156124005760405162461bcd60e51b81526020600482015260196024820152784e6f6e6365206d75737420696e6372656d656e74206279203160381b6044820152606401610e4c565b600b805463ffffffff909216600160a01b026001600160c01b03199092166001600160a01b0390931692909217179055565b80516001600160a01b0316331461248b5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610e4c565b6124948161320a565b50565b6124a084612432565b6124ab838383610efd565b50505050565b6124ba83612432565b6110188282611f72565b600881815481106124d457600080fd5b60009182526020909120600390910201805460018201546002909201546001600160401b03909116925063ffffffff1683565b600054610100900460ff1680612520575060005460ff16155b6125835760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e4c565b600054610100900460ff161580156125a5576000805461ffff19166101011790555b600f83905560108290558015611018576000805461ff0019169055505050565b6000816125f357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561262357507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561265357507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561268357507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156126b357507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156126e357507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b816006141561271357507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561274357507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561277357507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156127a357507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156127d357507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b141561280357507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c141561283357507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561286357507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561289357507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156128c357507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156128f357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011141561292257507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012141561295257507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013141561298257507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156129b257507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601514156129e257507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415612a1257507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b8160171415612a4257507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b8160181415612a7257507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b8160191415612aa257507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415612ad257507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415612b0257507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415612b3257507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d1415612b6257507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e1415612b9257507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415612bc257507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610e4c565b919050565b612c0d613cf9565b612c15613d17565b612c1d613cf9565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612d2c57612cd483604001518281518110612cb757612cb7614fe5565b60200260200101516000908152600c602052604090205460ff1690565b15612d1a5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610e4c565b80612d2481614f26565b915050612c91565b5060008051602061502783398151915281604051602001612d4d9190614ac2565b6040516020818303038152906040528051906020012060001c612d709190614f65565b60a083015114612dc25760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610e4c565b612dd481602001518260600151610e0d565b826080015114612e1e5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610e4c565b612e2782613256565b60005b826040015151811015611018576001600c600085604001518481518110612e5357612e53614fe5565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612e8b90614f26565b915050612e2a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612ef557600080fd5b505afa158015612f09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f2d919061465f565b9050811561101857818110612f70576110186001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613510565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610d5d57600080fd5b60608201518051602090910151612ff19190613562565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd919061303890600290640100000000900463ffffffff16614eb5565b836080015160405161304c9392919061493d565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd906001602002015160035461309f90600190640100000000900463ffffffff16614eb5565b8360a001516040516130b39392919061493d565b60405180910390a160005b826040015151811015611018577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce8360400151828151811061310257613102614fe5565b602002602001015160405161311991815260200190565b60405180910390a18061312b81614f26565b9150506130be565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561319557600080fd5b505afa1580156131a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131cd919061465f565b9050818110612f70576110186001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613510565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e50826020015160405161324b919061496b565b60405180910390a250565b806040015151600214156133b55760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016132c0929190614b2f565b60006040518083038186803b1580156132d857600080fd5b505af41580156132ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261331491908101906142db565b91509150613321816110f2565b61335d5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610e4c565b82516133699083613690565b6110185760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610e4c565b806040015151601014156134c85760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161341f929190614b2f565b60006040518083038186803b15801561343757600080fd5b505af415801561344b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261347391908101906142db565b91509150613480816110f2565b6134bc5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610e4c565b825161336990836137ba565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610e4c565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611018908490613842565b6000828152600d602052604081205460ff16156135915760405162461bcd60e51b8152600401610e4c906149c9565b6000828152600d602052604090205460ff16156135c05760405162461bcd60e51b8152600401610e4c906149c9565b60006135cc8484613914565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b561366c836001614cce565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080838060200190518101906136a7919061423f565b905060008060006136b784612c05565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613718908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906001906004016148e1565b60206040518083038186803b15801561373057600080fd5b505afa158015613744573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061376891906142a0565b9450846137b05760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610e4c565b5050505092915050565b600080838060200190518101906137d1919061423f565b905060008060006137e184612c05565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390613718908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906000906004016148e1565b6000613897826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613b819092919063ffffffff16565b80519091501561101857808060200190518101906138b591906142a0565b6110185760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e4c565b600354600090640100000000900463ffffffff166139537f00000000000000000000000000000000000000000000000000000000000000006002614d83565b63ffffffff168163ffffffff1614156139c75760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610e4c565b60006139d4600283614d1b565b90506000613a037f00000000000000000000000000000000000000000000000000000000000000008787611d49565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015613aed57613a4a600286614f79565b63ffffffff16613a8557839250613a668163ffffffff166125c5565b63ffffffff821660009081526001602052604090208590559150613aa1565b63ffffffff811660009081526001602052604090205492508391505b613acc7f00000000000000000000000000000000000000000000000000000000000000008484611d49565b9350613ad9600286614d1b565b945080613ae581614f41565b915050613a0b565b50600354600090601e90613b089063ffffffff166001614cce565b613b129190614f79565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150613b4c908790614cce565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b6060613b908484600085613b98565b949350505050565b606082471015613bf95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e4c565b843b613c475760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e4c565b600080866001600160a01b03168587604051613c639190614784565b60006040518083038185875af1925050503d8060008114613ca0576040519150601f19603f3d011682016040523d82523d6000602084013e613ca5565b606091505b5091509150613cb5828286613cc0565b979650505050505050565b60608315613ccf575081611ea5565b825115613cdf5782518084602001fd5b8160405162461bcd60e51b8152600401610e4c919061496b565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613d2e613cf9565b815260200190600190039081613d265790505090565b8035612c0081615011565b600082601f830112613d6057600080fd5b604051604081018181106001600160401b0382111715613d8257613d82614ffb565b8060405250808385604086011115613d9957600080fd5b60005b6002811015613dbb578135835260209283019290910190600101613d9c565b509195945050505050565b600082601f830112613dd757600080fd5b81356020613dec613de783614c6c565b614c3c565b80838252828201915082860187848660051b8901011115613e0c57600080fd5b60005b85811015613e2b57813584529284019290840190600101613e0f565b5090979650505050505050565b600082601f830112613e4957600080fd5b8135613e57613de782614c8f565b818152846020838601011115613e6c57600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613e9b57600080fd5b604051604081016001600160401b038282108183111715613ebe57613ebe614ffb565b8160405282935084359150613ed282615011565b90825260208401359080821115613ee857600080fd5b50613ef585828601613e38565b6020830152505092915050565b600060c08284031215613f1457600080fd5b613f1c614bf1565b9050613f2782613d44565b815260208201356020820152613f3f60408301613d44565b60408201526060820135606082015260808201356001600160401b0380821115613f6857600080fd5b613f7485838601613e38565b608084015260a0840135915080821115613f8d57600080fd5b50613f9a84828501613e38565b60a08301525092915050565b600060e08284031215613fb857600080fd5b613fc0614bf1565b905081356001600160401b0380821115613fd957600080fd5b613fe585838601613e38565b83526020840135915080821115613ffb57600080fd5b61400785838601613e38565b6020840152604084013591508082111561402057600080fd5b5061402d84828501613dc6565b6040830152506140408360608401613d4f565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff81168114612c0057600080fd5b80356001600160401b0381168114612c0057600080fd5b60008060006060848603121561409f57600080fd5b83356140aa81615011565b925060208401356140ba81615011565b929592945050506040919091013590565b600080604083850312156140de57600080fd5b82356140e981615011565b946020939093013593505050565b6000806040838503121561410a57600080fd5b823561411581615011565b91506141236020840161405f565b90509250929050565b6000806020838503121561413f57600080fd5b82356001600160401b038082111561415657600080fd5b818501915085601f83011261416a57600080fd5b81358181111561417957600080fd5b8660208260051b850101111561418e57600080fd5b60209290920196919550909350505050565b6000602082840312156141b257600080fd5b81356001600160401b038111156141c857600080fd5b610ef384828501613dc6565b60006101008083850312156141e857600080fd5b83601f8401126141f757600080fd5b6141ff614c19565b808486848701111561421057600080fd5b600093505b600884101561423557803583526001939093019260209283019201614215565b5095945050505050565b600061010080838503121561425357600080fd5b83601f84011261426257600080fd5b61426a614c19565b808486848701111561427b57600080fd5b600093505b600884101561423557805183526001939093019260209283019201614280565b6000602082840312156142b257600080fd5b81518015158114610ef157600080fd5b6000602082840312156142d457600080fd5b5035919050565b600080604083850312156142ee57600080fd5b82516001600160401b038082111561430557600080fd5b818501915085601f83011261431957600080fd5b81516020614329613de783614c8f565b828152888284870101111561433d57600080fd5b61434c83838301848801614eda565b8782015190965093508284111561436257600080fd5b838701935087601f85011261437657600080fd5b83519250614386613de784614c6c565b8381528181019250848201600585901b860183018a10156143a657600080fd5b600095505b848610156143c95780518452600195909501949282019282016143ab565b5080955050505050509250929050565b6000806000606084860312156143ee57600080fd5b83356143f981615011565b95602085013595506040909401359392505050565b6000806040838503121561442157600080fd5b50508035926020909101359150565b60006020828403121561444257600080fd5b81356001600160401b0381111561445857600080fd5b610ef384828501613e89565b60008060006060848603121561447957600080fd5b83356001600160401b038082111561449057600080fd5b61449c87838801613e89565b945060208601359150808211156144b257600080fd5b6144be87838801613fa6565b935060408601359150808211156144d457600080fd5b506144e186828701613f02565b9150509250925092565b6000806000806080858703121561450157600080fd5b84356001600160401b038082111561451857600080fd5b61452488838901613e89565b9550602087013591508082111561453a57600080fd5b61454688838901613fa6565b9450604087013591508082111561455c57600080fd5b5061456987828801613f02565b925050606085013561457a81615011565b939692955090935050565b6000806040838503121561459857600080fd5b82356001600160401b03808211156145af57600080fd5b6145bb86838701613fa6565b935060208501359150808211156145d157600080fd5b506145de85828601613f02565b9150509250929050565b6000806000606084860312156145fd57600080fd5b83356001600160401b038082111561461457600080fd5b61462087838801613fa6565b9450602086013591508082111561463657600080fd5b5061464386828701613f02565b925050604084013561465481615011565b809150509250925092565b60006020828403121561467157600080fd5b5051919050565b60006020828403121561468a57600080fd5b611ea582614073565b600080604083850312156146a657600080fd5b6140e983614073565b6000806000606084860312156146c457600080fd5b6146cd84614073565b9250602084013591506146e26040850161405f565b90509250925092565b600080604083850312156146fe57600080fd5b61411583614073565b8060005b60028110156124ab5761471f848351614735565b604093909301926020919091019060010161470b565b8060005b60028110156124ab578151845260209384019390910190600101614739565b60008151808452614770816020860160208601614eda565b601f01601f19169290920160200192915050565b60008251614796818460208701614eda565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b818110156147fe5783511515835292840192918401916001016147e0565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156147fe57835183529284019291840191600101614826565b602080825282518282018190526000919060409081850190868401855b8281101561489d57815180516001600160401b03168552868101518786015285015163ffffffff16858501526060909301929085019060010161485f565b5091979650505050505050565b60408101610ef78284614735565b61010081016148c78286614735565b6148d46040830185614707565b613b9060c0830184614735565b60006101606148f0838a614735565b6148fd6040840189614707565b61490a60c0840188614735565b8061010084015261491d81840187614758565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff831660208201526060604082015260006149626060830184614758565b95945050505050565b602081526000611ea56020830184614758565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a0840152614b1260e0840182614758565b905060a0840151601f198483030160c08501526149628282614758565b604081526000835160e06040840152614b4c610120840182614758565b9050602080860151603f1980868503016060870152614b6b8483614758565b6040890151878203909201608088015281518082529184019450600092508301905b80831015614bad5784518252938301936001929092019190830190614b8d565b5060608801519350614bc260a0870185614735565b608088015160e087015260a088015161010087015260ff8716838701529350614be89050565b50509392505050565b60405160c081016001600160401b0381118282101715614c1357614c13614ffb565b60405290565b60405161010081016001600160401b0381118282101715614c1357614c13614ffb565b604051601f8201601f191681016001600160401b0381118282101715614c6457614c64614ffb565b604052919050565b60006001600160401b03821115614c8557614c85614ffb565b5060051b60200190565b60006001600160401b03821115614ca857614ca8614ffb565b50601f01601f191660200190565b60008219821115614cc957614cc9614fb9565b500190565b600063ffffffff808316818516808303821115614ced57614ced614fb9565b01949350505050565b600060ff821660ff84168060ff03821115614d1357614d13614fb9565b019392505050565b600063ffffffff80841680614d3257614d32614fcf565b92169190910492915050565b600181815b80851115614d7b578163ffffffff04821115614d6157614d61614fb9565b80851615614d6e57918102915b93841c9390800290614d43565b509250929050565b600063ffffffff610ef3818516828516600082614da257506001610ef7565b81614daf57506000610ef7565b8160018114614dc55760028114614dcf57614e00565b6001915050610ef7565b60ff841115614de057614de0614fb9565b6001841b915063ffffffff821115614dfa57614dfa614fb9565b50610ef7565b5060208310610133831016604e8410600b8410161715614e37575081810a63ffffffff811115614e3257614e32614fb9565b610ef7565b614e418383614d3e565b8063ffffffff04821115614e5757614e57614fb9565b029392505050565b60008083128015600160ff1b850184121615614e7d57614e7d614fb9565b6001600160ff1b0384018313811615614e9857614e98614fb9565b50500390565b600082821015614eb057614eb0614fb9565b500390565b600063ffffffff83811690831681811015614ed257614ed2614fb9565b039392505050565b60005b83811015614ef5578181015183820152602001614edd565b838111156124ab5750506000910152565b600063ffffffff821680614f1c57614f1c614fb9565b6000190192915050565b6000600019821415614f3a57614f3a614fb9565b5060010190565b600063ffffffff80831681811415614f5b57614f5b614fb9565b6001019392505050565b600082614f7457614f74614fcf565b500690565b600063ffffffff80841680614f9057614f90614fcf565b92169190910692915050565b6000600160ff1b821415614fb257614fb2614fb9565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461249457600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212201e5db7fcd55067b3d205e13508b3662561db2818cd90b0f4d4b9ea9f970704f464736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
