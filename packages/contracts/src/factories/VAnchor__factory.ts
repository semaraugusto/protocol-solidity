/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
        ],
        internalType: "struct LinkableTree.Edge[]",
        name: "edges",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newHandler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b5060405162005883380380620058838339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c614d8062000b0360003960008181610b1001528181610d8e01528181610e220152818161160b0152818161165b0152818161192701528181611ee801528181611fa901528181612c6501528181612d0301528181612d5001528181612f050152612f9d01526000818161067901528181610bf001528181610c5a0152818161145a015281816117a201528181611b7601528181611c020152818161303e0152818161319d015281816134a701526135d101526000818161058a01528181610ce301528181611cc1015281816136e701526137c7015260008181610a500152818161379701526138600152614d806000f3fe60806040526004361061036b5760003560e01c80638ea3099e116101c6578063c9be7250116100f7578063ec73295911610095578063f5ab0dd61161006f578063f5ab0dd614610a9f578063fa73168714610ace578063fc0c546a14610afe578063fc7e9c6f14610b3257600080fd5b8063ec73295914610a0a578063ed33639f14610a3e578063f178e47c14610a7257600080fd5b8063e4a30116116100d1578063e4a301161461096d578063e5285dcc1461098d578063e70ea87c146109bd578063e8295588146109ea57600080fd5b8063c9be7250146108fd578063cd87a3b41461091d578063dbc916b81461093257600080fd5b80639ff8006311610164578063ba70f7571161013e578063ba70f75714610886578063bc063e1a146106e3578063c2b40ae4146108b0578063c80916d4146108dd57600080fd5b80639ff80063146105ac578063b2bc6e0f14610846578063b7566a671461086657600080fd5b806392156311116101a057806392156311146107b657806395c87d1a146107e65780639bbca3a9146107f95780639fa12d0b1461081957600080fd5b80638ea3099e146107635780638f1c56bd1461078357806390eeb02b1461079957600080fd5b80634ecf518b116102a057806371523c321161023e5780637fe24ffe116102185780637fe24ffe146106e3578063839df945146106fb578063840b27911461072b5780638c0d34d81461074157600080fd5b806371523c321461066757806372c1ad03146106ad57806378abb49b146106cd57600080fd5b80635d2d766c1161027a5780635d2d766c146105ec578063616e09571461061f5780636ad481f31461063f5780636d9833e31461064757600080fd5b80634ecf518b146105785780634f401241146105ac5780635437988d146105cc57600080fd5b80633408e4701161030d57806342d90711116102e757806342d90711146104ed57806343e7119f1461050d57806344347ba914610545578063460b53e31461055857600080fd5b80633408e470146104a5578063414a37ba146104b85780634167bb1e146104da57600080fd5b80631e627617116103495780631e627617146104085780632063e3d31461042a5780632570b7b41461043f5780632b7ac3f31461046d57600080fd5b80630b27fb9a1461037057806311e4dcb9146103a857806317cc915c146103d8575b600080fd5b34801561037c57600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103b457600080fd5b506103c86103c3366004614161565b610b57565b604051901515815260200161039f565b3480156103e457600080fd5b506103c86103f3366004614015565b600c6020526000908152604090205460ff1681565b34801561041457600080fd5b5061041d610bec565b60405161039f919061451d565b61043d610438366004613e1e565b610d42565b005b34801561044b57600080fd5b5061045f61045a366004614161565b610e83565b60405190815260200161039f565b34801561047957600080fd5b50600b5461048d906001600160a01b031681565b6040516001600160a01b03909116815260200161039f565b3480156104b157600080fd5b504661045f565b3480156104c457600080fd5b5061045f600080516020614d2b83398151915281565b61043d6104e836600461433b565b610f71565b3480156104f957600080fd5b5061043d610508366004614161565b611091565b34801561051957600080fd5b5061045f6105283660046143f7565b600960209081526000928352604080842090915290825290205481565b61043d6105533660046143cb565b6110c6565b34801561056457600080fd5b5061043d610573366004613e1e565b6115f4565b34801561058457600080fd5b5061038e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105b857600080fd5b5061043d6105c7366004613e1e565b611644565b3480156105d857600080fd5b5061043d6105e7366004613dc0565b611694565b3480156105f857600080fd5b5061038e610607366004614015565b600a6020526000908152604090205463ffffffff1681565b34801561062b57600080fd5b506103c861063a366004613ef3565b61172c565b61043d611910565b34801561065357600080fd5b506103c8610662366004614015565b611997565b34801561067357600080fd5b5061069b7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161039f565b3480156106b957600080fd5b5061043d6106c8366004613e4a565b611a12565b3480156106d957600080fd5b5061045f60105481565b3480156106ef57600080fd5b5061045f600160f81b81565b34801561070757600080fd5b506103c8610716366004614015565b600d6020526000908152604090205460ff1681565b34801561073757600080fd5b5061045f600f5481565b34801561074d57600080fd5b50610756611b72565b60405161039f9190614555565b34801561076f57600080fd5b5061045f61077e36600461412c565b611d25565b34801561078f57600080fd5b5061045f600e5481565b3480156107a557600080fd5b5060035461038e9063ffffffff1681565b3480156107c257600080fd5b506103c86107d1366004614015565b60009081526007602052604090205460ff1690565b61043d6107f4366004613ddd565b611e88565b34801561080557600080fd5b5061043d6108143660046142d8565b611f4e565b34801561082557600080fd5b50610839610834366004613e7f565b612137565b60405161039f91906144d7565b34801561085257600080fd5b5061043d610861366004614183565b6121fc565b34801561087257600080fd5b5061043d61088136600461423e565b612261565b34801561089257600080fd5b5060035463ffffffff1660009081526002602052604090205461045f565b3480156108bc57600080fd5b5061045f6108cb366004614015565b60026020526000908152604090205481565b3480156108e957600080fd5b5060055461048d906001600160a01b031681565b34801561090957600080fd5b5061043d6109183660046141b7565b61227b565b34801561092957600080fd5b5061038e601e81565b34801561093e57600080fd5b5061095261094d366004614015565b61228e565b6040805193845260208401929092529082015260600161039f565b34801561097957600080fd5b5061043d610988366004614161565b6122c1565b34801561099957600080fd5b506103c86109a8366004614015565b6000908152600c602052604090205460ff1690565b3480156109c957600080fd5b5061045f6109d8366004614015565b60066020526000908152604090205481565b3480156109f657600080fd5b5061045f610a05366004614015565b61237f565b348015610a1657600080fd5b5061045f7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610a4a57600080fd5b5061048d7f000000000000000000000000000000000000000000000000000000000000000081565b348015610a7e57600080fd5b5061045f610a8d366004614015565b60016020526000908152604090205481565b348015610aab57600080fd5b50610abf610aba366004613f27565b6129bf565b60405161039f939291906145bc565b348015610ada57600080fd5b506103c8610ae9366004614015565b60076020526000908152604090205460ff1681565b348015610b0a57600080fd5b5061048d7f000000000000000000000000000000000000000000000000000000000000000081565b348015610b3e57600080fd5b5060035461038e90640100000000900463ffffffff1681565b600081610b6657506000610be6565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610baf57600192505050610be6565b63ffffffff8116610bbe5750601e5b80610bc881614c0a565b9150508163ffffffff168163ffffffff161415610b7d576000925050505b92915050565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610c2957610c29614cff565b604051908082528060200260200182016040528015610c52578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610d3e57610c8e8160016149ba565b60085410610cde5760088181548110610ca957610ca9614ce9565b906000526020600020906003020160010154828281518110610ccd57610ccd614ce9565b602002602001018181525050610d2c565b610d0d7f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661237f565b828281518110610d1f57610d1f614ce9565b6020026020010181815250505b80610d3681614c2a565b915050610c58565b5090565b6001600160a01b038216610df057803414610d5c57600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610dd357600080fd5b505af1158015610de7573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610e6757600080fd5b505af1158015610e7b573d6000803e3d6000fd5b505050505050565b6000600160f81b8210610ecb5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610ed8600160f81b614ca0565b83138015610ee95750600160f81b83125b610f2a5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610ec2565b6000610f368385614b63565b90506000811215610f6757610f4a81614ca0565b610f6290600080516020614d2b833981519152614ba2565b610f69565b805b949350505050565b610f7b8383612a48565b600082602001511315610fbc5760105482602001511115610fae5760405162461bcd60e51b8152600401610ec290614745565b610fbc818360200151610d42565b6000826020015112156110665781516001600160a01b03166110205760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610ec2565b600f54826020015161103190614ca0565b101561104f5760405162461bcd60e51b8152600401610ec290614682565b61106681836000015184602001516107f490614ca0565b6060820151156110825761108282604001518360600151612c4d565b61108c8383612d94565b505050565b6005546001600160a01b031633146110bb5760405162461bcd60e51b8152600401610ec29061478f565b600f91909155601055565b6005546001600160a01b031633146110f05760405162461bcd60e51b8152600401610ec29061478f565b600260045414156111135760405162461bcd60e51b8152600401610ec29061470e565b60026004908155604051639215631160e01b8152908101849052309063921563119060240160206040518083038186803b15801561115057600080fd5b505afa158015611164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111889190613ff3565b156114535760008381526007602052604090205460ff166112115760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610ec2565b60008381526006602052604090205460088054839290811061123557611235614ce9565b906000526020600020906003020160020154106112945760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610ec2565b6000838152600660205260409020546008805490919081106112b8576112b8614ce9565b906000526020600020906003020160020154620100006112d891906149ba565b81106113365760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610ec2565b600083815260066020908152604091829020548251606081018452868152918201859052918101839052600880548390811061137457611374614ce9565b60009182526020808320845160039093020191825583810151600180840191909155604094850151600290930192909255878352600a9052918120549091601e916113c79163ffffffff909116906149d2565b6113d19190614c7d565b6000868152600a60209081526040808320805463ffffffff191663ffffffff86169081179091556009835281842090845282529182902087905581518881529081018690529081018690529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a150506115ea565b60085460ff7f000000000000000000000000000000000000000000000000000000000000000016116114c75760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610ec2565b6000838152600760209081526040808320805460ff19166001908117909155600880548351606080820186528a82528187018a81528287018a815295840185559388528151600384027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee485015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee590930192909255888652600685528386208190556009855283862086805285528386208890558351898152948501879052928401879052919391927fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b5050600160045550565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610e4d903390869086906004016144b3565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610e4d903390869086906004016144b3565b6005546001600160a01b031633146116be5760405162461bcd60e51b8152600401610ec29061478f565b6001600160a01b03811661170a5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610ec2565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b60006117518260008151811061174457611744614ce9565b6020026020010151611997565b61179d5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610ec2565b6117c87f000000000000000000000000000000000000000000000000000000000000000060016149fa565b60ff1682511461181a5760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610ec2565b60005b6008548110156119075760006008828154811061183c5761183c614ce9565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090506118a881600001518584600161188b91906149ba565b8151811061189b5761189b614ce9565b6020026020010151610b57565b6118f45760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610ec2565b50806118ff81614c2a565b91505061181d565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890349061196390339060009081906004016144b3565b6000604051808303818588803b15801561197c57600080fd5b505af1158015611990573d6000803e3d6000fd5b5050505050565b6000816119a657506000919050565b60035463ffffffff16805b63ffffffff81166000908152600260205260409020548414156119d8575060019392505050565b63ffffffff81166119e75750601e5b806119f181614c0a565b9150508163ffffffff168163ffffffff1614156119b1575060009392505050565b6005546001600160a01b03163314611a3c5760405162461bcd60e51b8152600401610ec29061478f565b6001600160a01b038216611a885760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610ec2565b600b5463ffffffff808316600160a01b9092041610611ad95760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610ec2565b600b54611af490600160a01b900463ffffffff1660016149d2565b63ffffffff168163ffffffff161115611b4f5760405162461bcd60e51b815260206004820152601960248201527f4e6f6e6365206d75737420696e6372656d656e742062792031000000000000006044820152606401610ec2565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115611baf57611baf614cff565b604051908082528060200260200182016040528015611bfa57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181611bcd5790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610d3e57611c368160016149ba565b60085410611caa5760088181548110611c5157611c51614ce9565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050828281518110611c9a57611c9a614ce9565b6020026020010181905250611d13565b604051806060016040528060008152602001611ceb7f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661237f565b81526020016000815250828281518110611d0757611d07614ce9565b60200260200101819052505b80611d1d81614c2a565b915050611c00565b6000600080516020614d2b8339815191528310611d845760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610ec2565b600080516020614d2b8339815191528210611deb5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610ec2565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611e2c91906004016145ae565b60206040518083038186803b158015611e4457600080fd5b505afa158015611e58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7c91906143b2565b925050505b9392505050565b60026004541415611eab5760405162461bcd60e51b8152600401610ec29061470e565b6002600455611eba3082612eed565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611f2c57600080fd5b505af1158015611f40573d6000803e3d6000fd5b505060016004555050505050565b60026004541415611f715760405162461bcd60e51b8152600401610ec29061470e565b6002600455611f808282612a48565b60008160200151131561205a5760208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91611fe19133913091906004016144b3565b602060405180830381600087803b158015611ffb57600080fd5b505af115801561200f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120339190613ff3565b506010548160200151111561205a5760405162461bcd60e51b8152600401610ec290614745565b6000816020015112156121085780516001600160a01b03166120be5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610ec2565b600f5481602001516120cf90614ca0565b10156120ed5760405162461bcd60e51b8152600401610ec290614682565b6121088160000151826020015161210390614ca0565b612eed565b6060810151156121245761212481604001518260600151612c4d565b61212e8282612d94565b50506001600455565b6060816001600160401b0381111561215157612151614cff565b60405190808252806020026020018201604052801561217a578160200160208202803683370190505b50905060005b828110156121f5576121b984848381811061219d5761219d614ce9565b905060200201356000908152600c602052604090205460ff1690565b156121e35760018282815181106121d2576121d2614ce9565b911515602092830291909101909101525b806121ed81614c2a565b915050612180565b5092915050565b80516001600160a01b031633146122555760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610ec2565b61225e81612fc4565b50565b61226a846121fc565b612275838383610f71565b50505050565b612284836121fc565b61108c8282611f4e565b6008818154811061229e57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600054610100900460ff16806122da575060005460ff16155b61233d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610ec2565b600054610100900460ff1615801561235f576000805461ffff19166101011790555b600f8390556010829055801561108c576000805461ff0019169055505050565b6000816123ad57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b81600114156123dd57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561240d57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561243d57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004141561246d57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b816005141561249d57507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600614156124cd57507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b81600714156124fd57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561252d57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009141561255d57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a141561258d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b14156125bd57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c14156125ed57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561261d57507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561264d57507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f141561267d57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156126ad57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b81601114156126dc57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012141561270c57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013141561273c57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b816014141561276c57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b816015141561279c57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b81601614156127cc57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156127fc57507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b816018141561282c57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b816019141561285c57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a141561288c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b14156128bc57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c14156128ec57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d141561291c57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e141561294c57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f141561297c57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610ec2565b919050565b6129c7613a46565b6129cf613a64565b6129d7613a46565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b60005b826040015151811015612ae657612a8e83604001518281518110612a7157612a71614ce9565b60200260200101516000908152600c602052604090205460ff1690565b15612ad45760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610ec2565b80612ade81614c2a565b915050612a4b565b50600080516020614d2b83398151915281604051602001612b0791906147c6565b6040516020818303038152906040528051906020012060001c612b2a9190614c69565b60a083015114612b7c5760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610ec2565b612b8e81602001518260600151610e83565b826080015114612bd85760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610ec2565b612be182613010565b60005b82604001515181101561108c576001600c600085604001518481518110612c0d57612c0d614ce9565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612c4590614c2a565b915050612be4565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612caf57600080fd5b505afa158015612cc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ce791906143b2565b9050811561108c57818110612d2a5761108c6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846132ca565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610dd357600080fd5b60608201518051602090910151612dab919061331c565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9190612df290600290640100000000900463ffffffff16614bb9565b8360800151604051612e0693929190614641565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9060016020020151600354612e5990600190640100000000900463ffffffff16614bb9565b8360a00151604051612e6d93929190614641565b60405180910390a160005b82604001515181101561108c577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce83604001518281518110612ebc57612ebc614ce9565b6020026020010151604051612ed391815260200190565b60405180910390a180612ee581614c2a565b915050612e78565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612f4f57600080fd5b505afa158015612f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f8791906143b2565b9050818110612d2a5761108c6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846132ca565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e508260200151604051613005919061466f565b60405180910390a250565b8060400151516002141561316f5760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161307a929190614833565b60006040518083038186803b15801561309257600080fd5b505af41580156130a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526130ce919081019061402e565b915091506130db8161172c565b6131175760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610ec2565b8251613123908361344a565b61108c5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610ec2565b806040015151601014156132825760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f847f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016131d9929190614833565b60006040518083038186803b1580156131f157600080fd5b505af4158015613205573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261322d919081019061402e565b9150915061323a8161172c565b6132765760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610ec2565b82516131239083613574565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610ec2565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261108c9084906135fc565b6000828152600d602052604081205460ff161561334b5760405162461bcd60e51b8152600401610ec2906146cd565b6000828152600d602052604090205460ff161561337a5760405162461bcd60e51b8152600401610ec2906146cd565b600061338684846136ce565b6000858152600d602090815260408083208054600160ff19918216811790925588855293829020805490941617909255815163ffffffff84168152429181019190915291925085917fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5910160405180910390a2827fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b56134268360016149d2565b6040805163ffffffff90921682524260208301520160405180910390a29392505050565b600080838060200190518101906134619190613f92565b90506000806000613471846129bf565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906134d2908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906001906004016145e5565b60206040518083038186803b1580156134ea57600080fd5b505afa1580156134fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135229190613ff3565b94508461356a5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610ec2565b5050505092915050565b6000808380602001905181019061358b9190613f92565b9050600080600061359b846129bf565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906134d2908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906000906004016145e5565b6000613651826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661393b9092919063ffffffff16565b80519091501561108c578080602001905181019061366f9190613ff3565b61108c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ec2565b600354600090640100000000900463ffffffff1661370d7f00000000000000000000000000000000000000000000000000000000000000006002614a87565b63ffffffff168163ffffffff1614156137815760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610ec2565b600061378e600283614a1f565b905060006137bd7f00000000000000000000000000000000000000000000000000000000000000008787611d25565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1610156138a757613804600286614c7d565b63ffffffff1661383f578392506138208163ffffffff1661237f565b63ffffffff82166000908152600160205260409020859055915061385b565b63ffffffff811660009081526001602052604090205492508391505b6138867f00000000000000000000000000000000000000000000000000000000000000008484611d25565b9350613893600286614a1f565b94508061389f81614c45565b9150506137c5565b50600354600090601e906138c29063ffffffff1660016149d2565b6138cc9190614c7d565b6003805463ffffffff191663ffffffff831690811790915560009081526002602081905260409091208690559091506139069087906149d2565b6003805463ffffffff929092166401000000000267ffffffff0000000019909216919091179055509394505050505092915050565b6060610f69848460008585843b6139945760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ec2565b600080866001600160a01b031685876040516139b09190614497565b60006040518083038185875af1925050503d80600081146139ed576040519150601f19603f3d011682016040523d82523d6000602084013e6139f2565b606091505b5091509150613a02828286613a0d565b979650505050505050565b60608315613a1c575081611e81565b825115613a2c5782518084602001fd5b8160405162461bcd60e51b8152600401610ec2919061466f565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b613a7b613a46565b815260200190600190039081613a735790505090565b80356129ba81614d15565b600082601f830112613aad57600080fd5b604051604081018181106001600160401b0382111715613acf57613acf614cff565b8060405250808385604086011115613ae657600080fd5b60005b6002811015613b08578135835260209283019290910190600101613ae9565b509195945050505050565b600082601f830112613b2457600080fd5b81356020613b39613b3483614970565b614940565b80838252828201915082860187848660051b8901011115613b5957600080fd5b60005b85811015613b7857813584529284019290840190600101613b5c565b5090979650505050505050565b600082601f830112613b9657600080fd5b8135613ba4613b3482614993565b818152846020838601011115613bb957600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613be857600080fd5b604051604081016001600160401b038282108183111715613c0b57613c0b614cff565b8160405282935084359150613c1f82614d15565b90825260208401359080821115613c3557600080fd5b50613c4285828601613b85565b6020830152505092915050565b600060c08284031215613c6157600080fd5b613c696148f5565b9050613c7482613a91565b815260208201356020820152613c8c60408301613a91565b60408201526060820135606082015260808201356001600160401b0380821115613cb557600080fd5b613cc185838601613b85565b608084015260a0840135915080821115613cda57600080fd5b50613ce784828501613b85565b60a08301525092915050565b600060e08284031215613d0557600080fd5b613d0d6148f5565b905081356001600160401b0380821115613d2657600080fd5b613d3285838601613b85565b83526020840135915080821115613d4857600080fd5b613d5485838601613b85565b60208401526040840135915080821115613d6d57600080fd5b50613d7a84828501613b13565b604083015250613d8d8360608401613a9c565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff811681146129ba57600080fd5b600060208284031215613dd257600080fd5b8135610f6781614d15565b600080600060608486031215613df257600080fd5b8335613dfd81614d15565b92506020840135613e0d81614d15565b929592945050506040919091013590565b60008060408385031215613e3157600080fd5b8235613e3c81614d15565b946020939093013593505050565b60008060408385031215613e5d57600080fd5b8235613e6881614d15565b9150613e7660208401613dac565b90509250929050565b60008060208385031215613e9257600080fd5b82356001600160401b0380821115613ea957600080fd5b818501915085601f830112613ebd57600080fd5b813581811115613ecc57600080fd5b8660208260051b8501011115613ee157600080fd5b60209290920196919550909350505050565b600060208284031215613f0557600080fd5b81356001600160401b03811115613f1b57600080fd5b610f6984828501613b13565b6000610100808385031215613f3b57600080fd5b83601f840112613f4a57600080fd5b613f5261491d565b8084868487011115613f6357600080fd5b600093505b6008841015613f8857803583526001939093019260209283019201613f68565b5095945050505050565b6000610100808385031215613fa657600080fd5b83601f840112613fb557600080fd5b613fbd61491d565b8084868487011115613fce57600080fd5b600093505b6008841015613f8857805183526001939093019260209283019201613fd3565b60006020828403121561400557600080fd5b81518015158114610f6757600080fd5b60006020828403121561402757600080fd5b5035919050565b6000806040838503121561404157600080fd5b82516001600160401b038082111561405857600080fd5b818501915085601f83011261406c57600080fd5b8151602061407c613b3483614993565b828152888284870101111561409057600080fd5b61409f83838301848801614bde565b878201519096509350828411156140b557600080fd5b838701935087601f8501126140c957600080fd5b835192506140d9613b3484614970565b8381528181019250848201600585901b860183018a10156140f957600080fd5b600095505b8486101561411c5780518452600195909501949282019282016140fe565b5080955050505050509250929050565b60008060006060848603121561414157600080fd5b833561414c81614d15565b95602085013595506040909401359392505050565b6000806040838503121561417457600080fd5b50508035926020909101359150565b60006020828403121561419557600080fd5b81356001600160401b038111156141ab57600080fd5b610f6984828501613bd6565b6000806000606084860312156141cc57600080fd5b83356001600160401b03808211156141e357600080fd5b6141ef87838801613bd6565b9450602086013591508082111561420557600080fd5b61421187838801613cf3565b9350604086013591508082111561422757600080fd5b5061423486828701613c4f565b9150509250925092565b6000806000806080858703121561425457600080fd5b84356001600160401b038082111561426b57600080fd5b61427788838901613bd6565b9550602087013591508082111561428d57600080fd5b61429988838901613cf3565b945060408701359150808211156142af57600080fd5b506142bc87828801613c4f565b92505060608501356142cd81614d15565b939692955090935050565b600080604083850312156142eb57600080fd5b82356001600160401b038082111561430257600080fd5b61430e86838701613cf3565b9350602085013591508082111561432457600080fd5b5061433185828601613c4f565b9150509250929050565b60008060006060848603121561435057600080fd5b83356001600160401b038082111561436757600080fd5b61437387838801613cf3565b9450602086013591508082111561438957600080fd5b5061439686828701613c4f565b92505060408401356143a781614d15565b809150509250925092565b6000602082840312156143c457600080fd5b5051919050565b6000806000606084860312156143e057600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561440a57600080fd5b82359150613e7660208401613dac565b8060005b600281101561227557614432848351614448565b604093909301926020919091019060010161441e565b8060005b600281101561227557815184526020938401939091019060010161444c565b60008151808452614483816020860160208601614bde565b601f01601f19169290920160200192915050565b600082516144a9818460208701614bde565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b818110156145115783511515835292840192918401916001016144f3565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561451157835183529284019291840191600101614539565b602080825282518282018190526000919060409081850190868401855b828110156145a15781518051855286810151878601528501518585015260609093019290850190600101614572565b5091979650505050505050565b60408101610be68284614448565b61010081016145cb8286614448565b6145d8604083018561441a565b610f6960c0830184614448565b60006101606145f4838a614448565b614601604084018961441a565b61460e60c0840188614448565b806101008401526146218184018761446b565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff83166020820152606060408201526000614666606083018461446b565b95945050505050565b602081526000611e81602083018461446b565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b60208082526021908201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656040820152601960fa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a084015261481660e084018261446b565b905060a0840151601f198483030160c0850152614666828261446b565b604081526000835160e0604084015261485061012084018261446b565b9050602080860151603f198086850301606087015261486f848361446b565b6040890151878203909201608088015281518082529184019450600092508301905b808310156148b15784518252938301936001929092019190830190614891565b50606088015193506148c660a0870185614448565b608088015160e087015260a088015161010087015260ff87168387015293506148ec9050565b50509392505050565b60405160c081016001600160401b038111828210171561491757614917614cff565b60405290565b60405161010081016001600160401b038111828210171561491757614917614cff565b604051601f8201601f191681016001600160401b038111828210171561496857614968614cff565b604052919050565b60006001600160401b0382111561498957614989614cff565b5060051b60200190565b60006001600160401b038211156149ac576149ac614cff565b50601f01601f191660200190565b600082198211156149cd576149cd614cbd565b500190565b600063ffffffff8083168185168083038211156149f1576149f1614cbd565b01949350505050565b600060ff821660ff84168060ff03821115614a1757614a17614cbd565b019392505050565b600063ffffffff80841680614a3657614a36614cd3565b92169190910492915050565b600181815b80851115614a7f578163ffffffff04821115614a6557614a65614cbd565b80851615614a7257918102915b93841c9390800290614a47565b509250929050565b600063ffffffff610f69818516828516600082614aa657506001610be6565b81614ab357506000610be6565b8160018114614ac95760028114614ad357614b04565b6001915050610be6565b60ff841115614ae457614ae4614cbd565b6001841b915063ffffffff821115614afe57614afe614cbd565b50610be6565b5060208310610133831016604e8410600b8410161715614b3b575081810a63ffffffff811115614b3657614b36614cbd565b610be6565b614b458383614a42565b8063ffffffff04821115614b5b57614b5b614cbd565b029392505050565b60008083128015600160ff1b850184121615614b8157614b81614cbd565b6001600160ff1b0384018313811615614b9c57614b9c614cbd565b50500390565b600082821015614bb457614bb4614cbd565b500390565b600063ffffffff83811690831681811015614bd657614bd6614cbd565b039392505050565b60005b83811015614bf9578181015183820152602001614be1565b838111156122755750506000910152565b600063ffffffff821680614c2057614c20614cbd565b6000190192915050565b6000600019821415614c3e57614c3e614cbd565b5060010190565b600063ffffffff80831681811415614c5f57614c5f614cbd565b6001019392505050565b600082614c7857614c78614cd3565b500690565b600063ffffffff80841680614c9457614c94614cd3565b92169190910692915050565b6000600160ff1b821415614cb657614cb6614cbd565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461225e57600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122087037e5938c2ece421fc43bb40d167c5b97e2ded696807df0c8d4a5170c10bf864736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
