/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "address",
            name: "handler",
            type: "address",
          },
        ],
        internalType: "struct VAnchorBase.PermissionedAccounts",
        name: "_permissions",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
        ],
        internalType: "struct VAnchorBase.Edge[]",
        name: "edges",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissions",
    outputs: [
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "handler",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b03191690556012805463ffffffff191690553480156200002f57600080fd5b506040516200568238038062005682833981016040819052620000529162000903565b858585848484848483828260008263ffffffff1611620000c55760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff16106200011d5760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000bc565b6001600160e01b031960e083901b1660a0526001600160601b0319606082901b1660805260005b8263ffffffff168163ffffffff16101562000195576200016a63ffffffff821662000286565b63ffffffff8216600090815260016020526040902055806200018c8162000a0f565b91505062000144565b50620001a763ffffffff831662000286565b60008052600260209081527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b919091556001600455600d80546001600160a01b03199081166001600160a01b03998a161790915560f89490941b7fff000000000000000000000000000000000000000000000000000000000000001660c0528851600580548616918916919091179055880151600680548516918816919091179055505060409095015160078054909616931692909217909355505050505060609390931b6001600160601b03191660e0525062000a5b945050505050565b600081620002b557507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002e657507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200031757507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200034857507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200037957507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b8160051415620003aa57507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003db57507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b81600714156200040c57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200043d57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200046e57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200049f57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004d057507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c14156200050157507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200053257507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200056357507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200059457507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005c557507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005f557507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200062657507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200065757507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200068857507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006b957507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006ea57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200071b57507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200074c57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200077d57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415620007ae57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007df57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c14156200081057507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200084157507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200087257507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f1415620008a357507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000bc565b919050565b805160ff81168114620008ec57600080fd5b6000806000806000808688036101008112156200091f57600080fd5b87516200092c8162000a42565b602089015190975063ffffffff811681146200094757600080fd5b60408901519096506200095a8162000a42565b60608901519095506200096d8162000a42565b93506060607f19820112156200098257600080fd5b50604051606081016001600160401b0381118282101715620009b457634e487b7160e01b600052604160045260246000fd5b6040526080880151620009c78162000a42565b815260a0880151620009d98162000a42565b602082015260c0880151620009ee8162000a42565b6040820152915062000a0360e08801620008f1565b90509295509295509295565b600063ffffffff8083168181141562000a3857634e487b7160e01b600052601160045260246000fd5b6001019392505050565b6001600160a01b038116811462000a5857600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c614b2b62000b5760003960008181610a0701528181610b2e01528181610bc201528181611a4901528181611a9901528181611d65015281816120b401528181612b6501528181612c0301528181612c5001528181612ed501528181612f6d01526130120152600081816105d601528181611044015281816111860152818161189801528181611be001528181611ea101528181611f2d015281816129f801528181612b220152818161326601526133a80152600081816104e701528181611fec01528181612cac0152612d6b0152600081816109470152610df90152614b2b6000f3fe6080604052600436106102e45760003560e01c80638c0d34d811610190578063cd87a3b4116100dc578063ec73295911610095578063f5ab0dd61161006f578063f5ab0dd614610996578063fa731687146109c5578063fc0c546a146109f5578063fc7e9c6f14610a2957600080fd5b8063ec73295914610901578063ed33639f14610935578063f178e47c1461096957600080fd5b8063cd87a3b414610814578063dbc916b814610829578063e4a3011614610864578063e5285dcc14610884578063e70ea87c146108b4578063e8295588146108e157600080fd5b80639ff8006311610149578063ba70f75711610123578063ba70f7571461079d578063bc063e1a14610640578063c2b40ae4146107c7578063c9be7250146107f457600080fd5b80639ff8006314610509578063ab8c71c014610726578063b2bc6e0f1461077d57600080fd5b80638c0d34d81461066e5780638f1c56bd1461069057806390eeb02b146106a657806392156311146106c357806395c87d1a146106f35780639bbca3a91461070657600080fd5b8063460b53e31161024f5780636ad481f31161020857806372c1ad03116101e257806372c1ad031461060a57806378abb49b1461062a5780637fe24ffe14610640578063840b27911461065857600080fd5b80636ad481f31461059c5780636d9833e3146105a457806371523c32146105c457600080fd5b8063460b53e3146104b55780634ecf518b146104d55780634f401241146105095780635437988d146105295780635d2d766c14610549578063616e09571461057c57600080fd5b806338bf282e116102a157806338bf282e146103f5578063414a37ba146104155780634167bb1e1461043757806342d907111461044a57806343e7119f1461046a57806344347ba9146104a257600080fd5b80630b27fb9a146102e957806311e4dcb91461031a57806317cc915c1461034a5780632063e3d31461037a5780632570b7b41461038f5780632b7ac3f3146103bd575b600080fd5b3480156102f557600080fd5b5060125463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b34801561032657600080fd5b5061033a610335366004613f2f565b610a4d565b6040519015158152602001610311565b34801561035657600080fd5b5061033a610365366004613efd565b60116020526000908152604090205460ff1681565b61038d610388366004613d7e565b610ae2565b005b34801561039b57600080fd5b506103af6103aa366004613f2f565b610c24565b604051908152602001610311565b3480156103c957600080fd5b50600d546103dd906001600160a01b031681565b6040516001600160a01b039091168152602001610311565b34801561040157600080fd5b506103af610410366004613f2f565b610d12565b34801561042157600080fd5b506103af600080516020614ad683398151915281565b61038d61044536600461416d565b610e86565b34801561045657600080fd5b5061038d610465366004613f2f565b611541565b34801561047657600080fd5b506103af61048536600461420c565b600b60209081526000928352604080842090915290825290205481565b61038d6104b03660046141e0565b6115a6565b3480156104c157600080fd5b5061038d6104d0366004613d7e565b611a32565b3480156104e157600080fd5b506103007f000000000000000000000000000000000000000000000000000000000000000081565b34801561051557600080fd5b5061038d610524366004613d7e565b611a82565b34801561053557600080fd5b5061038d610544366004613d27565b611ad2565b34801561055557600080fd5b50610300610564366004613efd565b600c6020526000908152604090205463ffffffff1681565b34801561058857600080fd5b5061033a610597366004613ddb565b611b6a565b61038d611d4e565b3480156105b057600080fd5b5061033a6105bf366004613efd565b611dd5565b3480156105d057600080fd5b506105f87f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610311565b34801561061657600080fd5b5061038d610625366004613da8565b611e50565b34801561063657600080fd5b506103af60105481565b34801561064c57600080fd5b506103af600160f81b81565b34801561066457600080fd5b506103af600f5481565b34801561067a57600080fd5b50610683611e9d565b604051610311919061431d565b34801561069c57600080fd5b506103af600e5481565b3480156106b257600080fd5b506003546103009063ffffffff1681565b3480156106cf57600080fd5b5061033a6106de366004613efd565b60009081526009602052604090205460ff1690565b61038d610701366004613d42565b612054565b34801561071257600080fd5b5061038d61072136600461410a565b61211a565b34801561073257600080fd5b50600554600654600754610753926001600160a01b03908116928116911683565b604080516001600160a01b0394851681529284166020840152921691810191909152606001610311565b34801561078957600080fd5b5061038d61079836600461404f565b612164565b3480156107a957600080fd5b5060035463ffffffff166000908152600260205260409020546103af565b3480156107d357600080fd5b506103af6107e2366004613efd565b60026020526000908152604090205481565b34801561080057600080fd5b5061038d61080f366004614083565b6121c9565b34801561082057600080fd5b50610300601e81565b34801561083557600080fd5b50610849610844366004613efd565b6121e1565b60408051938452602084019290925290820152606001610311565b34801561087057600080fd5b5061038d61087f366004613f2f565b612214565b34801561089057600080fd5b5061033a61089f366004613efd565b60009081526011602052604090205460ff1690565b3480156108c057600080fd5b506103af6108cf366004613efd565b60086020526000908152604090205481565b3480156108ed57600080fd5b506103af6108fc366004613efd565b6122d2565b34801561090d57600080fd5b506103af7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b34801561094157600080fd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561097557600080fd5b506103af610984366004613efd565b60016020526000908152604090205481565b3480156109a257600080fd5b506109b66109b1366004613e0f565b612912565b60405161031193929190614376565b3480156109d157600080fd5b5061033a6109e0366004613efd565b60096020526000908152604090205460ff1681565b348015610a0157600080fd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b348015610a3557600080fd5b5060035461030090600160201b900463ffffffff1681565b600081610a5c57506000610adc565b6000838152600c602052604090205463ffffffff16805b6000858152600b6020908152604080832063ffffffff85168452909152902054841415610aa557600192505050610adc565b63ffffffff8116610ab45750601e5b80610abe816149aa565b9150508163ffffffff168163ffffffff161415610a73576000925050505b92915050565b6001600160a01b038216610b9057803414610afc57600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610b7357600080fd5b505af1158015610b87573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610c0757600080fd5b505af1158015610c1b573d6000803e3d6000fd5b505050505b5050565b6000600160f81b8210610c6c5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610c79600160f81b614a40565b83138015610c8a5750600160f81b83125b610ccb5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610c63565b6000610cd78385614903565b90506000811215610d0857610ceb81614a40565b610d0390600080516020614ad6833981519152614942565b610d0a565b805b949350505050565b6000600080516020614ad68339815191528310610d715760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610c63565b600080516020614ad68339815191528210610dd85760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610c63565b610de06139a5565b8381526020810183905260405163014cf2b360e51b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063299e566090610e369084906004016142ec565b60206040518083038186803b158015610e4e57600080fd5b505afa158015610e62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0a9190613f16565b60005b836040015151811015610f2457610ecc84604001518281518110610eaf57610eaf614a89565b602002602001015160009081526011602052604090205460ff1690565b15610f125760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610c63565b80610f1c816149ca565b915050610e89565b50600080516020614ad683398151915282604051602001610f459190614566565b6040516020818303038152906040528051906020012060001c610f689190614a09565b60a084015114610fba5760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610c63565b610fcc82602001518360600151610c24565b8360800151146110165760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610c63565b826040015151600214156111585760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491867f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016110809291906145d3565b60006040518083038186803b15801561109857600080fd5b505af41580156110ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110d49190810190613f51565b915091506110e181611b6a565b6110fd5760405162461bcd60e51b8152600401610c6390614487565b8451611109908361299b565b6111515760405162461bcd60e51b815260206004820152601960248201527824b73b30b634b2103a3930b739b0b1ba34b7b710383937b7b360391b6044820152606401610c63565b5050611293565b8260400151516010141561124b5760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f867f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016111c29291906145d3565b60006040518083038186803b1580156111da57600080fd5b505af41580156111ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112169190810190613f51565b9150915061122381611b6a565b61123f5760405162461bcd60e51b8152600401610c6390614487565b84516111099083612ac5565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610c63565b60005b8360400151518110156112ff57600160116000866040015184815181106112bf576112bf614a89565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806112f7906149ca565b915050611296565b5060008260200151131561134157601054826020015111156113335760405162461bcd60e51b8152600401610c63906144e5565b611341818360200151610ae2565b6000826020015112156113eb5781516001600160a01b03166113a55760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610c63565b600f5482602001516113b690614a40565b10156113d45760405162461bcd60e51b8152600401610c639061443c565b6113eb818360000151846020015161070190614a40565b6060820151156114075761140782604001518360600151612b4d565b6060830151805161141f9160015b6020020151612c94565b50606083015151600354600080516020614ab6833981519152919061145390600290600160201b900463ffffffff16614959565b8460800151604051611467939291906143fb565b60405180910390a16060830151600080516020614ab683398151915290600160200201516003546114a790600190600160201b900463ffffffff16614959565b8460a001516040516114bb939291906143fb565b60405180910390a160005b83604001515181101561153b577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce8460400151828151811061150a5761150a614a89565b602002602001015160405161152191815260200190565b60405180910390a180611533816149ca565b9150506114c6565b50505050565b6006546001600160a01b0316331461159b5760405162461bcd60e51b815260206004820152601760248201527f73656e646572206973206e6f74207468652061646d696e0000000000000000006044820152606401610c63565b600f91909155601055565b6007546001600160a01b031633146115d05760405162461bcd60e51b8152600401610c639061452f565b600260045414156115f35760405162461bcd60e51b8152600401610c63906144ae565b60026004908155604051639215631160e01b8152908101849052309063921563119060240160206040518083038186803b15801561163057600080fd5b505afa158015611644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116689190613edb565b156118915760008381526009602052604090205460ff166116f15760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610c63565b600083815260086020526040902054600a8054839290811061171557611715614a89565b906000526020600020906003020160020154106117745760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610c63565b600083815260086020908152604091829020548251606081018452868152918201859052918101839052600a8054839081106117b2576117b2614a89565b60009182526020808320845160039093020191825583810151600180840191909155604094850151600290930192909255878352600c9052918120549091601e916118059163ffffffff90911690614772565b61180f9190614a1d565b6000868152600c60209081526040808320805463ffffffff191663ffffffff8616908117909155600b835281842090845282529182902087905581518881529081018690529081018690529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a15050611a28565b600a5460ff7f000000000000000000000000000000000000000000000000000000000000000016116119055760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610c63565b6000838152600960209081526040808320805460ff19166001908117909155600a80548351606080820186528a82528187018a81528287018a815295840185559388528151600384027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a881019190915593517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a985015593517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa9093019290925588865260088552838620819055600b855283862086805285528386208890558351898152948501879052928401879052919391927fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b5050600160045550565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610bed903390869086906004016142c8565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610bed903390869086906004016142c8565b6007546001600160a01b03163314611afc5760405162461bcd60e51b8152600401610c639061452f565b6001600160a01b038116611b485760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610c63565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6000611b8f82600081518110611b8257611b82614a89565b6020026020010151611dd5565b611bdb5760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610c63565b611c067f0000000000000000000000000000000000000000000000000000000000000000600161479a565b60ff16825114611c585760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610c63565b60005b600a54811015611d45576000600a8281548110611c7a57611c7a614a89565b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250509050611ce6816000015185846001611cc9919061475a565b81518110611cd957611cd9614a89565b6020026020010151610a4d565b611d325760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610c63565b5080611d3d816149ca565b915050611c5b565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca69388903490611da190339060009081906004016142c8565b6000604051808303818588803b158015611dba57600080fd5b505af1158015611dce573d6000803e3d6000fd5b5050505050565b600081611de457506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415611e16575060019392505050565b63ffffffff8116611e255750601e5b80611e2f816149aa565b9150508163ffffffff168163ffffffff161415611def575060009392505050565b6007546001600160a01b03163314611e7a5760405162461bcd60e51b8152600401610c639061452f565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115611eda57611eda614a9f565b604051908082528060200260200182016040528015611f2557816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181611ef85790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff1681101561205057611f6181600161475a565b600a5410611fd557600a8181548110611f7c57611f7c614a89565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050828281518110611fc557611fc5614a89565b602002602001018190525061203e565b6040518060600160405280600081526020016120167f000000000000000000000000000000000000000000000000000000000000000063ffffffff166122d2565b8152602001600081525082828151811061203257612032614a89565b60200260200101819052505b80612048816149ca565b915050611f2b565b5090565b600260045414156120775760405162461bcd60e51b8152600401610c63906144ae565b60026004556120863082612ebd565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b1580156120f857600080fd5b505af115801561210c573d6000803e3d6000fd5b505060016004555050505050565b60008160200151131561215a576121348160200151612f94565b6010548160200151111561215a5760405162461bcd60e51b8152600401610c63906144e5565b610c20828261309d565b80516001600160a01b031633146121bd5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610c63565b6121c6816136d2565b50565b6121d283612164565b6121dc828261211a565b505050565b600a81815481106121f157600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600054610100900460ff168061222d575060005460ff16155b6122905760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610c63565b600054610100900460ff161580156122b2576000805461ffff19166101011790555b600f839055601082905580156121dc576000805461ff0019169055505050565b60008161230057507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561233057507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561236057507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561239057507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156123c057507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156123f057507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b816006141561242057507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561245057507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561248057507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156124b057507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156124e057507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b141561251057507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c141561254057507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561257057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156125a057507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156125d057507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b816010141561260057507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011141561262f57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012141561265f57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013141561268f57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156126bf57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601514156126ef57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b816016141561271f57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b816017141561274f57507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b816018141561277f57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156127af57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156127df57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b141561280f57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c141561283f57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d141561286f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e141561289f57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156128cf57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610c63565b919050565b61291a6139a5565b6129226139c3565b61292a6139a5565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b600080838060200190518101906129b29190613e7a565b905060008060006129c284612912565b600d54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390612a23908690869086908c907f00000000000000000000000000000000000000000000000000000000000000009060019060040161439f565b60206040518083038186803b158015612a3b57600080fd5b505afa158015612a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a739190613edb565b945084612abb5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610c63565b5050505092915050565b60008083806020019051810190612adc9190613e7a565b90506000806000612aec84612912565b600d54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca5390612a23908690869086908c907f00000000000000000000000000000000000000000000000000000000000000009060009060040161439f565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612baf57600080fd5b505afa158015612bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612be79190613f16565b905081156121dc57818110612c2a576121dc6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461371e565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610b7357600080fd5b600354600090600160201b900463ffffffff16612cd27f00000000000000000000000000000000000000000000000000000000000000006002614827565b63ffffffff168163ffffffff161415612d465760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610c63565b6000612d536002836147bf565b90506000612d618686610d12565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015612e2a57612da8600286614a1d565b63ffffffff16612de357839250612dc48163ffffffff166122d2565b63ffffffff821660009081526001602052604090208590559150612dff565b63ffffffff811660009081526001602052604090205492508391505b612e098383610d12565b9350612e166002866147bf565b945080612e22816149e5565b915050612d69565b50600354600090601e90612e459063ffffffff166001614772565b612e4f9190614a1d565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150612e89908790614772565b6003805463ffffffff92909216600160201b0267ffffffff0000000019909216919091179055509394505050505092915050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612f1f57600080fd5b505afa158015612f33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f579190613f16565b9050818110612c2a576121dc6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461371e565b3415612ffb5760405162461bcd60e51b815260206004820152603060248201527f4554482076616c756520697320737570706f73656420746f206265203020666f60448201526f7220455243323020696e7374616e636560801b6064820152608401610c63565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd9061304b903390309086906004016142c8565b602060405180830381600087803b15801561306557600080fd5b505af1158015613079573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c209190613edb565b600260045414156130c05760405162461bcd60e51b8152600401610c63906144ae565b600260045560005b826040015151811015613146576130ee83604001518281518110610eaf57610eaf614a89565b156131345760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610c63565b8061313e816149ca565b9150506130c8565b50600080516020614ad6833981519152816040516020016131679190614566565b6040516020818303038152906040528051906020012060001c61318a9190614a09565b60a0830151146131dc5760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610c63565b6131ee81602001518260600151610c24565b8260800151146132385760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610c63565b8160400151516002141561337a5760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016132a29291906145d3565b60006040518083038186803b1580156132ba57600080fd5b505af41580156132ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132f69190810190613f51565b9150915061330381611b6a565b61331f5760405162461bcd60e51b8152600401610c6390614487565b835161332b908361299b565b6133735760405162461bcd60e51b815260206004820152601960248201527824b73b30b634b2103a3930b739b0b1ba34b7b710383937b7b360391b6044820152606401610c63565b505061346d565b8160400151516010141561124b5760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016133e49291906145d3565b60006040518083038186803b1580156133fc57600080fd5b505af4158015613410573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526134389190810190613f51565b9150915061344581611b6a565b6134615760405162461bcd60e51b8152600401610c6390614487565b835161332b9083612ac5565b60005b8260400151518110156134d9576001601160008560400151848151811061349957613499614a89565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806134d1906149ca565b915050613470565b506000816020015112156135885780516001600160a01b031661353e5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610c63565b600f54816020015161354f90614a40565b101561356d5760405162461bcd60e51b8152600401610c639061443c565b6135888160000151826020015161358390614a40565b612ebd565b6060810151156135a4576135a481604001518260600151612b4d565b606082015180516135b6916001611415565b50606082015151600354600080516020614ab683398151915291906135ea90600290600160201b900463ffffffff16614959565b83608001516040516135fe939291906143fb565b60405180910390a16060820151600080516020614ab6833981519152906001602002015160035461363e90600190600160201b900463ffffffff16614959565b8360a00151604051613652939291906143fb565b60405180910390a160005b826040015151811015611a28577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce836040015182815181106136a1576136a1614a89565b60200260200101516040516136b891815260200190565b60405180910390a1806136ca816149ca565b91505061365d565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e5082602001516040516137139190614429565b60405180910390a250565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526121dc928692916000916137ae91851690849061382b565b8051909150156121dc57808060200190518101906137cc9190613edb565b6121dc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c63565b606061383a8484600085613844565b90505b9392505050565b6060824710156138a55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610c63565b843b6138f35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c63565b600080866001600160a01b0316858760405161390f91906142ac565b60006040518083038185875af1925050503d806000811461394c576040519150601f19603f3d011682016040523d82523d6000602084013e613951565b606091505b509150915061396182828661396c565b979650505050505050565b6060831561397b57508161383d565b82511561398b5782518084602001fd5b8160405162461bcd60e51b8152600401610c639190614429565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b6139da6139a5565b8152602001906001900390816139d25790505090565b80356001600160a01b038116811461290d57600080fd5b600082601f830112613a1857600080fd5b604051604081018181106001600160401b0382111715613a3a57613a3a614a9f565b8060405250808385604086011115613a5157600080fd5b60005b6002811015613a73578135835260209283019290910190600101613a54565b509195945050505050565b600082601f830112613a8f57600080fd5b81356020613aa4613a9f83614710565b6146e0565b80838252828201915082860187848660051b8901011115613ac457600080fd5b60005b85811015613ae357813584529284019290840190600101613ac7565b5090979650505050505050565b600082601f830112613b0157600080fd5b8135613b0f613a9f82614733565b818152846020838601011115613b2457600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613b5357600080fd5b604051604081016001600160401b038282108183111715613b7657613b76614a9f565b81604052829350613b86856139f0565b83526020850135915080821115613b9c57600080fd5b50613ba985828601613af0565b6020830152505092915050565b600060c08284031215613bc857600080fd5b613bd0614695565b9050613bdb826139f0565b815260208201356020820152613bf3604083016139f0565b60408201526060820135606082015260808201356001600160401b0380821115613c1c57600080fd5b613c2885838601613af0565b608084015260a0840135915080821115613c4157600080fd5b50613c4e84828501613af0565b60a08301525092915050565b600060e08284031215613c6c57600080fd5b613c74614695565b905081356001600160401b0380821115613c8d57600080fd5b613c9985838601613af0565b83526020840135915080821115613caf57600080fd5b613cbb85838601613af0565b60208401526040840135915080821115613cd457600080fd5b50613ce184828501613a7e565b604083015250613cf48360608401613a07565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff8116811461290d57600080fd5b600060208284031215613d3957600080fd5b61383d826139f0565b600080600060608486031215613d5757600080fd5b613d60846139f0565b9250613d6e602085016139f0565b9150604084013590509250925092565b60008060408385031215613d9157600080fd5b613d9a836139f0565b946020939093013593505050565b60008060408385031215613dbb57600080fd5b613dc4836139f0565b9150613dd260208401613d13565b90509250929050565b600060208284031215613ded57600080fd5b81356001600160401b03811115613e0357600080fd5b610d0a84828501613a7e565b6000610100808385031215613e2357600080fd5b83601f840112613e3257600080fd5b613e3a6146bd565b8084868487011115613e4b57600080fd5b600093505b6008841015613e7057803583526001939093019260209283019201613e50565b5095945050505050565b6000610100808385031215613e8e57600080fd5b83601f840112613e9d57600080fd5b613ea56146bd565b8084868487011115613eb657600080fd5b600093505b6008841015613e7057805183526001939093019260209283019201613ebb565b600060208284031215613eed57600080fd5b81518015158114610d0857600080fd5b600060208284031215613f0f57600080fd5b5035919050565b600060208284031215613f2857600080fd5b5051919050565b60008060408385031215613f4257600080fd5b50508035926020909101359150565b60008060408385031215613f6457600080fd5b82516001600160401b0380821115613f7b57600080fd5b818501915085601f830112613f8f57600080fd5b81516020613f9f613a9f83614733565b8281528882848701011115613fb357600080fd5b613fc28383830184880161497e565b87820151909650935082841115613fd857600080fd5b838701935087601f850112613fec57600080fd5b83519250613ffc613a9f84614710565b8381528181019250848201600585901b860183018a101561401c57600080fd5b600095505b8486101561403f578051845260019590950194928201928201614021565b5080955050505050509250929050565b60006020828403121561406157600080fd5b81356001600160401b0381111561407757600080fd5b610d0a84828501613b41565b60008060006060848603121561409857600080fd5b83356001600160401b03808211156140af57600080fd5b6140bb87838801613b41565b945060208601359150808211156140d157600080fd5b6140dd87838801613c5a565b935060408601359150808211156140f357600080fd5b5061410086828701613bb6565b9150509250925092565b6000806040838503121561411d57600080fd5b82356001600160401b038082111561413457600080fd5b61414086838701613c5a565b9350602085013591508082111561415657600080fd5b5061416385828601613bb6565b9150509250929050565b60008060006060848603121561418257600080fd5b83356001600160401b038082111561419957600080fd5b6141a587838801613c5a565b945060208601359150808211156141bb57600080fd5b506141c886828701613bb6565b9250506141d7604085016139f0565b90509250925092565b6000806000606084860312156141f557600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561421f57600080fd5b82359150613dd260208401613d13565b8060005b600281101561153b5761424784835161425d565b6040939093019260209190910190600101614233565b8060005b600281101561153b578151845260209384019390910190600101614261565b6000815180845261429881602086016020860161497e565b601f01601f19169290920160200192915050565b600082516142be81846020870161497e565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60408101818360005b60028110156143145781518352602092830192909101906001016142f5565b50505092915050565b602080825282518282018190526000919060409081850190868401855b82811015614369578151805185528681015187860152850151858501526060909301929085019060010161433a565b5091979650505050505050565b6101008101614385828661425d565b614392604083018561422f565b610d0a60c083018461425d565b60006101606143ae838a61425d565b6143bb604084018961422f565b6143c860c084018861425d565b806101008401526143db81840187614280565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff831660208201526060604082015260006144206060830184614280565b95945050505050565b60208152600061383d6020830184614280565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b6020808252600d908201526c496e76616c696420726f6f747360981b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a08401526145b660e0840182614280565b905060a0840151601f198483030160c08501526144208282614280565b604081526000835160e060408401526145f0610120840182614280565b9050602080860151603f198086850301606087015261460f8483614280565b6040890151878203909201608088015281518082529184019450600092508301905b808310156146515784518252938301936001929092019190830190614631565b506060880151935061466660a087018561425d565b608088015160e087015260a088015161010087015260ff871683870152935061468c9050565b50509392505050565b60405160c081016001600160401b03811182821017156146b7576146b7614a9f565b60405290565b60405161010081016001600160401b03811182821017156146b7576146b7614a9f565b604051601f8201601f191681016001600160401b038111828210171561470857614708614a9f565b604052919050565b60006001600160401b0382111561472957614729614a9f565b5060051b60200190565b60006001600160401b0382111561474c5761474c614a9f565b50601f01601f191660200190565b6000821982111561476d5761476d614a5d565b500190565b600063ffffffff80831681851680830382111561479157614791614a5d565b01949350505050565b600060ff821660ff84168060ff038211156147b7576147b7614a5d565b019392505050565b600063ffffffff808416806147d6576147d6614a73565b92169190910492915050565b600181815b8085111561481f578163ffffffff0482111561480557614805614a5d565b8085161561481257918102915b93841c93908002906147e7565b509250929050565b600063ffffffff610d0a81851682851660008261484657506001610adc565b8161485357506000610adc565b81600181146148695760028114614873576148a4565b6001915050610adc565b60ff84111561488457614884614a5d565b6001841b915063ffffffff82111561489e5761489e614a5d565b50610adc565b5060208310610133831016604e8410600b84101617156148db575081810a63ffffffff8111156148d6576148d6614a5d565b610adc565b6148e583836147e2565b8063ffffffff048211156148fb576148fb614a5d565b029392505050565b60008083128015600160ff1b85018412161561492157614921614a5d565b6001600160ff1b038401831381161561493c5761493c614a5d565b50500390565b60008282101561495457614954614a5d565b500390565b600063ffffffff8381169083168181101561497657614976614a5d565b039392505050565b60005b83811015614999578181015183820152602001614981565b8381111561153b5750506000910152565b600063ffffffff8216806149c0576149c0614a5d565b6000190192915050565b60006000198214156149de576149de614a5d565b5060010190565b600063ffffffff808316818114156149ff576149ff614a5d565b6001019392505050565b600082614a1857614a18614a73565b500690565b600063ffffffff80841680614a3457614a34614a73565b92169190910692915050565b6000600160ff1b821415614a5657614a56614a5d565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfef3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122026b4e42ffb82cc643c0aa765162d913c0259dded8b5e0de70519e0d3556ee43064736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _permissions: { bridge: string; admin: string; handler: string },
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _token,
      _permissions,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _permissions: { bridge: string; admin: string; handler: string },
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _token,
      _permissions,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
