/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff191690553480156200002f57600080fd5b50604051620055ca380380620055ca8339810160408190526200005291620008d5565b8585858584818385838183818160008263ffffffff1611620000c75760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff16106200011f5760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000be565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff16101562000196576200016b63ffffffff82166200026f565b63ffffffff8216600090815260016020526040902055806200018d816200099e565b91505062000145565b50620001b4620001a860018462000976565b63ffffffff166200026f565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b0319166001600160a01b0395861617905560f81b7fff000000000000000000000000000000000000000000000000000000000000001660c0525050600b8054600160201b600160c01b031916640100000000979092169690960217909455505050505060601b6001600160601b03191660e05250620009f492505050565b6000816200029e57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002cf57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030057507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033157507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036257507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039357507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c457507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003f557507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042657507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045757507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048857507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004b957507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ea57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200051b57507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200054c57507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200057d57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005ae57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005de57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200060f57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064057507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067157507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a257507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d357507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070457507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073557507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076657507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079757507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007c857507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007f957507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082a57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200085b57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200088c57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000be565b60008060008060008060c08789031215620008ef57600080fd5b8651620008fc81620009db565b602088015190965063ffffffff811681146200091757600080fd5b60408801519095506200092a81620009db565b60608801519094506200093d81620009db565b60808801519093506200095081620009db565b60a088015190925060ff811681146200096857600080fd5b809150509295509295509295565b600063ffffffff83811690831681811015620009965762000996620009c5565b039392505050565b600063ffffffff80831681811415620009bb57620009bb620009c5565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f157600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c614ada62000af060003960008181610a0b01528181610c8801528181610d1c01528181611a7b01528181611acb01528181611da20152818161209d01528181612b5c01528181612bfa01528181612c4701528181612ecb01528181612f63015261300801526000818161061301528181610aea01528181610b540152818161102a0152818161116c015281816118ca01528181611c1d015281816129e801528181612b190152818161325c015261339e01526000818161052401528181610bdd01528181612ca30152612d4601526000818161094b0152612ddf0152614ada6000f3fe6080604052600436106102ff5760003560e01c80638ea3099e11610190578063cd87a3b4116100dc578063ec73295911610095578063f5ab0dd61161006f578063f5ab0dd61461099a578063fa731687146109c9578063fc0c546a146109f9578063fc7e9c6f14610a2d57600080fd5b8063ec73295914610905578063ed33639f14610939578063f178e47c1461096d57600080fd5b8063cd87a3b414610818578063dbc916b81461082d578063e4a3011614610868578063e5285dcc14610888578063e70ea87c146108b8578063e8295588146108e557600080fd5b80639ff8006311610149578063bc063e1a11610123578063bc063e1a1461067d578063c2b40ae4146107ab578063c80916d4146107d8578063c9be7250146107f857600080fd5b80639ff8006314610546578063b2bc6e0f14610761578063ba70f7571461078157600080fd5b80638ea3099e146106ab5780638f1c56bd146106cb57806390eeb02b146106e157806392156311146106fe57806395c87d1a1461072e5780639bbca3a91461074157600080fd5b8063460b53e31161024f5780636ad481f31161020857806372c1ad03116101e257806372c1ad031461064757806378abb49b146106675780637fe24ffe1461067d578063840b27911461069557600080fd5b80636ad481f3146105d95780636d9833e3146105e157806371523c321461060157600080fd5b8063460b53e3146104f25780634ecf518b146105125780634f401241146105465780635437988d146105665780635d2d766c14610586578063616e0957146105b957600080fd5b80632b7ac3f3116102bc5780634167bb1e116102965780634167bb1e1461046e57806342d907111461048157806343e7119f146104a757806344347ba9146104df57600080fd5b80632b7ac3f3146103fa5780633408e47014610439578063414a37ba1461044c57600080fd5b80630b27fb9a1461030457806311e4dcb91461033557806317cc915c146103655780631e627617146103955780632063e3d3146103b75780632570b7b4146103cc575b600080fd5b34801561031057600080fd5b50600b5463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b34801561034157600080fd5b50610355610350366004613fe2565b610a51565b604051901515815260200161032c565b34801561037157600080fd5b50610355610380366004613e96565b600f6020526000908152604090205460ff1681565b3480156103a157600080fd5b506103aa610ae6565b60405161032c91906142be565b6103ca6103c5366004613d13565b610c3c565b005b3480156103d857600080fd5b506103ec6103e7366004613fe2565b610d7e565b60405190815260200161032c565b34801561040657600080fd5b50600b5461042190600160201b90046001600160a01b031681565b6040516001600160a01b03909116815260200161032c565b34801561044557600080fd5b50466103ec565b34801561045857600080fd5b506103ec600080516020614a8583398151915281565b6103ca61047c366004614122565b610e6c565b34801561048d57600080fd5b506103ca61049c366004613fe2565b600d91909155600e55565b3480156104b357600080fd5b506103ec6104c23660046141de565b600960209081526000928352604080842090915290825290205481565b6103ca6104ed3660046141b2565b611536565b3480156104fe57600080fd5b506103ca61050d366004613d13565b611a64565b34801561051e57600080fd5b5061031b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561055257600080fd5b506103ca610561366004613d13565b611ab4565b34801561057257600080fd5b506103ca610581366004613cb5565b611b04565b34801561059257600080fd5b5061031b6105a1366004613e96565b600a6020526000908152604090205463ffffffff1681565b3480156105c557600080fd5b506103556105d4366004613d74565b611ba7565b6103ca611d8b565b3480156105ed57600080fd5b506103556105fc366004613e96565b611e12565b34801561060d57600080fd5b506106357f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161032c565b34801561065357600080fd5b506103ca610662366004613d3f565b611e8d565b34801561067357600080fd5b506103ec600e5481565b34801561068957600080fd5b506103ec600160f81b81565b3480156106a157600080fd5b506103ec600d5481565b3480156106b757600080fd5b506103ec6106c6366004613fad565b611eda565b3480156106d757600080fd5b506103ec600c5481565b3480156106ed57600080fd5b5060035461031b9063ffffffff1681565b34801561070a57600080fd5b50610355610719366004613e96565b60009081526007602052604090205460ff1690565b6103ca61073c366004613cd2565b61203d565b34801561074d57600080fd5b506103ca61075c3660046140bf565b612103565b34801561076d57600080fd5b506103ca61077c366004614004565b61214d565b34801561078d57600080fd5b5060035463ffffffff166000908152600260205260409020546103ec565b3480156107b757600080fd5b506103ec6107c6366004613e96565b60026020526000908152604090205481565b3480156107e457600080fd5b50600554610421906001600160a01b031681565b34801561080457600080fd5b506103ca610813366004614038565b6121b2565b34801561082457600080fd5b5061031b601e81565b34801561083957600080fd5b5061084d610848366004613e96565b6121ca565b6040805193845260208401929092529082015260600161032c565b34801561087457600080fd5b506103ca610883366004613fe2565b6121fd565b34801561089457600080fd5b506103556108a3366004613e96565b6000908152600f602052604090205460ff1690565b3480156108c457600080fd5b506103ec6108d3366004613e96565b60066020526000908152604090205481565b3480156108f157600080fd5b506103ec610900366004613e96565b6122bb565b34801561091157600080fd5b506103ec7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b34801561094557600080fd5b506104217f000000000000000000000000000000000000000000000000000000000000000081565b34801561097957600080fd5b506103ec610988366004613e96565b60016020526000908152604090205481565b3480156109a657600080fd5b506109ba6109b5366004613da8565b6128fb565b60405161032c93929190614310565b3480156109d557600080fd5b506103556109e4366004613e96565b60076020526000908152604090205460ff1681565b348015610a0557600080fd5b506104217f000000000000000000000000000000000000000000000000000000000000000081565b348015610a3957600080fd5b5060035461031b90600160201b900463ffffffff1681565b600081610a6057506000610ae0565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610aa957600192505050610ae0565b63ffffffff8116610ab85750601e5b80610ac281614944565b9150508163ffffffff168163ffffffff161415610a77576000925050505b92915050565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610b2357610b23614a39565b604051908082528060200260200182016040528015610b4c578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610c3857610b888160016146f4565b60085410610bd85760088181548110610ba357610ba3614a23565b906000526020600020906003020160010154828281518110610bc757610bc7614a23565b602002602001018181525050610c26565b610c077f000000000000000000000000000000000000000000000000000000000000000063ffffffff166122bb565b828281518110610c1957610c19614a23565b6020026020010181815250505b80610c3081614964565b915050610b52565b5090565b6001600160a01b038216610cea57803414610c5657600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610ccd57600080fd5b505af1158015610ce1573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610d6157600080fd5b505af1158015610d75573d6000803e3d6000fd5b505050505b5050565b6000600160f81b8210610dc65760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610dd3600160f81b6149da565b83138015610de45750600160f81b83125b610e255760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610dbd565b6000610e31838561489d565b90506000811215610e6257610e45816149da565b610e5d90600080516020614a858339815191526148dc565b610e64565b805b949350505050565b60005b836040015151811015610f0a57610eb284604001518281518110610e9557610e95614a23565b60200260200101516000908152600f602052604090205460ff1690565b15610ef85760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610dbd565b80610f0281614964565b915050610e6f565b50600080516020614a8583398151915282604051602001610f2b9190614500565b6040516020818303038152906040528051906020012060001c610f4e91906149a3565b60a084015114610fa05760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610dbd565b610fb282602001518360600151610d7e565b836080015114610ffc5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610dbd565b8260400151516002141561113e5760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491867f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161106692919061456d565b60006040518083038186803b15801561107e57600080fd5b505af4158015611092573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110ba9190810190613eaf565b915091506110c781611ba7565b6110e35760405162461bcd60e51b8152600401610dbd90614421565b84516110ef9083612984565b6111375760405162461bcd60e51b815260206004820152601960248201527824b73b30b634b2103a3930b739b0b1ba34b7b710383937b7b360391b6044820152606401610dbd565b5050611279565b826040015151601014156112315760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f867f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016111a892919061456d565b60006040518083038186803b1580156111c057600080fd5b505af41580156111d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111fc9190810190613eaf565b9150915061120981611ba7565b6112255760405162461bcd60e51b8152600401610dbd90614421565b84516110ef9083612ab5565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610dbd565b60005b8360400151518110156112e5576001600f6000866040015184815181106112a5576112a5614a23565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806112dd90614964565b91505061127c565b5060008260200151131561132757600e54826020015111156113195760405162461bcd60e51b8152600401610dbd9061447f565b611327818360200151610c3c565b6000826020015112156113d15781516001600160a01b031661138b5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610dbd565b600d54826020015161139c906149da565b10156113ba5760405162461bcd60e51b8152600401610dbd906143d6565b6113d1818360000151846020015161073c906149da565b6060820151156113ed576113ed82604001518360600151612b44565b60608301516114039060005b6020020151612c8b565b5060608301516114149060016113f9565b50606083015151600354600080516020614a65833981519152919061144890600290600160201b900463ffffffff166148f3565b846080015160405161145c93929190614395565b60405180910390a16060830151600080516020614a65833981519152906001602002015160035461149c90600190600160201b900463ffffffff166148f3565b8460a001516040516114b093929190614395565b60405180910390a160005b836040015151811015611530577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce846040015182815181106114ff576114ff614a23565b602002602001015160405161151691815260200190565b60405180910390a18061152881614964565b9150506114bb565b50505050565b6005546001600160a01b031633146115605760405162461bcd60e51b8152600401610dbd906144c9565b600260045414156115835760405162461bcd60e51b8152600401610dbd90614448565b60026004908155604051639215631160e01b8152908101849052309063921563119060240160206040518083038186803b1580156115c057600080fd5b505afa1580156115d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f89190613e74565b156118c35760008381526007602052604090205460ff166116815760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610dbd565b6000838152600660205260409020546008805483929081106116a5576116a5614a23565b906000526020600020906003020160020154106117045760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610dbd565b60008381526006602052604090205460088054909190811061172857611728614a23565b9060005260206000209060030201600201546201000061174891906146f4565b81106117a65760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610dbd565b60008381526006602090815260409182902054825160608101845286815291820185905291810183905260088054839081106117e4576117e4614a23565b60009182526020808320845160039093020191825583810151600180840191909155604094850151600290930192909255878352600a9052918120549091601e916118379163ffffffff9091169061470c565b61184191906149b7565b6000868152600a60209081526040808320805463ffffffff191663ffffffff86169081179091556009835281842090845282529182902087905581518881529081018690529081018690529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a15050611a5a565b60085460ff7f000000000000000000000000000000000000000000000000000000000000000016116119375760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610dbd565b6000838152600760209081526040808320805460ff19166001908117909155600880548351606080820186528a82528187018a81528287018a815295840185559388528151600384027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee485015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee590930192909255888652600685528386208190556009855283862086805285528386208890558351898152948501879052928401879052919391927fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b5050600160045550565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610d479033908690869060040161429a565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610d479033908690869060040161429a565b6005546001600160a01b03163314611b2e5760405162461bcd60e51b8152600401610dbd906144c9565b6001600160a01b038116611b7a5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610dbd565b600b80546001600160a01b03909216600160201b02640100000000600160c01b0319909216919091179055565b6000611bcc82600081518110611bbf57611bbf614a23565b6020026020010151611e12565b611c185760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610dbd565b611c437f00000000000000000000000000000000000000000000000000000000000000006001614734565b60ff16825114611c955760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610dbd565b60005b600854811015611d8257600060088281548110611cb757611cb7614a23565b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250509050611d23816000015185846001611d0691906146f4565b81518110611d1657611d16614a23565b6020026020010151610a51565b611d6f5760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610dbd565b5080611d7a81614964565b915050611c98565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca69388903490611dde903390600090819060040161429a565b6000604051808303818588803b158015611df757600080fd5b505af1158015611e0b573d6000803e3d6000fd5b5050505050565b600081611e2157506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415611e53575060019392505050565b63ffffffff8116611e625750601e5b80611e6c81614944565b9150508163ffffffff168163ffffffff161415611e2c575060009392505050565b6005546001600160a01b03163314611eb75760405162461bcd60e51b8152600401610dbd906144c9565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000600080516020614a858339815191528310611f395760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610dbd565b600080516020614a858339815191528210611fa05760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610dbd565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611fe19190600401614302565b60206040518083038186803b158015611ff957600080fd5b505afa15801561200d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120319190614199565b925050505b9392505050565b600260045414156120605760405162461bcd60e51b8152600401610dbd90614448565b600260045561206f3082612eb3565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b1580156120e157600080fd5b505af11580156120f5573d6000803e3d6000fd5b505060016004555050505050565b6000816020015113156121435761211d8160200151612f8a565b600e54816020015111156121435760405162461bcd60e51b8152600401610dbd9061447f565b610d7a8282613093565b80516001600160a01b031633146121a65760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610dbd565b6121af816136d7565b50565b6121bb8361214d565b6121c58282612103565b505050565b600881815481106121da57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600054610100900460ff1680612216575060005460ff16155b6122795760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610dbd565b600054610100900460ff1615801561229b576000805461ffff19166101011790555b600d839055600e82905580156121c5576000805461ff0019169055505050565b6000816122e957507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561231957507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561234957507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561237957507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156123a957507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156123d957507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b816006141561240957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561243957507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561246957507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009141561249957507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156124c957507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b14156124f957507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c141561252957507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561255957507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561258957507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156125b957507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156125e957507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011141561261857507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012141561264857507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013141561267857507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156126a857507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601514156126d857507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b816016141561270857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b816017141561273857507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b816018141561276857507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b816019141561279857507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156127c857507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b14156127f857507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c141561282857507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d141561285857507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e141561288857507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156128b857507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610dbd565b919050565b61290361393b565b61290b613959565b61291361393b565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b6000808380602001905181019061299b9190613e13565b905060008060006129ab846128fb565b600b54604051638041ca5360e01b81529396509194509250600160201b90046001600160a01b031690638041ca5390612a13908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600190600401614339565b60206040518083038186803b158015612a2b57600080fd5b505afa158015612a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a639190613e74565b945084612aab5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610dbd565b5050505092915050565b60008083806020019051810190612acc9190613e13565b90506000806000612adc846128fb565b600b54604051638041ca5360e01b81529396509194509250600160201b90046001600160a01b031690638041ca5390612a13908690869086908c907f000000000000000000000000000000000000000000000000000000000000000090600090600401614339565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612ba657600080fd5b505afa158015612bba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bde9190614199565b905081156121c557818110612c21576121c56001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613723565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610ccd57600080fd5b600354600090600160201b900463ffffffff16612cc97f000000000000000000000000000000000000000000000000000000000000000060026147c1565b63ffffffff168163ffffffff161415612d3d5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610dbd565b8083600080805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015612e2657612d836002866149b7565b63ffffffff16612dbe57839250612d9f8163ffffffff166122bb565b63ffffffff821660009081526001602052604090208590559150612dda565b63ffffffff811660009081526001602052604090205492508391505b612e057f00000000000000000000000000000000000000000000000000000000000000008484611eda565b9350612e12600286614759565b945080612e1e8161497f565b915050612d44565b50600354600090601e90612e419063ffffffff16600161470c565b612e4b91906149b7565b6003805463ffffffff191663ffffffff831690811790915560009081526002602052604090208590559050612e8186600161470c565b6003805463ffffffff92909216600160201b0267ffffffff000000001990921691909117905550939695505050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612f1557600080fd5b505afa158015612f29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f4d9190614199565b9050818110612c21576121c56001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484613723565b3415612ff15760405162461bcd60e51b815260206004820152603060248201527f4554482076616c756520697320737570706f73656420746f206265203020666f60448201526f7220455243323020696e7374616e636560801b6064820152608401610dbd565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906130419033903090869060040161429a565b602060405180830381600087803b15801561305b57600080fd5b505af115801561306f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7a9190613e74565b600260045414156130b65760405162461bcd60e51b8152600401610dbd90614448565b600260045560005b82604001515181101561313c576130e483604001518281518110610e9557610e95614a23565b1561312a5760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610dbd565b8061313481614964565b9150506130be565b50600080516020614a858339815191528160405160200161315d9190614500565b6040516020818303038152906040528051906020012060001c61318091906149a3565b60a0830151146131d25760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610dbd565b6131e481602001518260600151610d7e565b82608001511461322e5760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610dbd565b816040015151600214156133705760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161329892919061456d565b60006040518083038186803b1580156132b057600080fd5b505af41580156132c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132ec9190810190613eaf565b915091506132f981611ba7565b6133155760405162461bcd60e51b8152600401610dbd90614421565b83516133219083612984565b6133695760405162461bcd60e51b815260206004820152601960248201527824b73b30b634b2103a3930b739b0b1ba34b7b710383937b7b360391b6044820152606401610dbd565b5050613463565b816040015151601014156112315760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016133da92919061456d565b60006040518083038186803b1580156133f257600080fd5b505af4158015613406573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261342e9190810190613eaf565b9150915061343b81611ba7565b6134575760405162461bcd60e51b8152600401610dbd90614421565b83516133219083612ab5565b60005b8260400151518110156134cf576001600f60008560400151848151811061348f5761348f614a23565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806134c790614964565b915050613466565b5060008160200151121561357e5780516001600160a01b03166135345760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610dbd565b600d548160200151613545906149da565b10156135635760405162461bcd60e51b8152600401610dbd906143d6565b61357e81600001518260200151613579906149da565b612eb3565b60608101511561359a5761359a81604001518260600151612b44565b60608201516135aa9060006113f9565b5060608201516135bb9060016113f9565b50606082015151600354600080516020614a6583398151915291906135ef90600290600160201b900463ffffffff166148f3565b836080015160405161360393929190614395565b60405180910390a16060820151600080516020614a65833981519152906001602002015160035461364390600190600160201b900463ffffffff166148f3565b8360a0015160405161365793929190614395565b60405180910390a160005b826040015151811015611a5a577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce836040015182815181106136a6576136a6614a23565b60200260200101516040516136bd91815260200190565b60405180910390a1806136cf81614964565b915050613662565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e50826020015160405161371891906143c3565b60405180910390a250565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526121c5928692916000916137b3918516908490613830565b8051909150156121c557808060200190518101906137d19190613e74565b6121c55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610dbd565b6060610e64848460008585843b6138895760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610dbd565b600080866001600160a01b031685876040516138a5919061427e565b60006040518083038185875af1925050503d80600081146138e2576040519150601f19603f3d011682016040523d82523d6000602084013e6138e7565b606091505b50915091506138f7828286613902565b979650505050505050565b60608315613911575081612036565b8251156139215782518084602001fd5b8160405162461bcd60e51b8152600401610dbd91906143c3565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b61397061393b565b8152602001906001900390816139685790505090565b80356128f681614a4f565b600082601f8301126139a257600080fd5b604051604081018181106001600160401b03821117156139c4576139c4614a39565b80604052508083856040860111156139db57600080fd5b60005b60028110156139fd5781358352602092830192909101906001016139de565b509195945050505050565b600082601f830112613a1957600080fd5b81356020613a2e613a29836146aa565b61467a565b80838252828201915082860187848660051b8901011115613a4e57600080fd5b60005b85811015613a6d57813584529284019290840190600101613a51565b5090979650505050505050565b600082601f830112613a8b57600080fd5b8135613a99613a29826146cd565b818152846020838601011115613aae57600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613add57600080fd5b604051604081016001600160401b038282108183111715613b0057613b00614a39565b8160405282935084359150613b1482614a4f565b90825260208401359080821115613b2a57600080fd5b50613b3785828601613a7a565b6020830152505092915050565b600060c08284031215613b5657600080fd5b613b5e61462f565b9050613b6982613986565b815260208201356020820152613b8160408301613986565b60408201526060820135606082015260808201356001600160401b0380821115613baa57600080fd5b613bb685838601613a7a565b608084015260a0840135915080821115613bcf57600080fd5b50613bdc84828501613a7a565b60a08301525092915050565b600060e08284031215613bfa57600080fd5b613c0261462f565b905081356001600160401b0380821115613c1b57600080fd5b613c2785838601613a7a565b83526020840135915080821115613c3d57600080fd5b613c4985838601613a7a565b60208401526040840135915080821115613c6257600080fd5b50613c6f84828501613a08565b604083015250613c828360608401613991565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff811681146128f657600080fd5b600060208284031215613cc757600080fd5b8135610e6281614a4f565b600080600060608486031215613ce757600080fd5b8335613cf281614a4f565b92506020840135613d0281614a4f565b929592945050506040919091013590565b60008060408385031215613d2657600080fd5b8235613d3181614a4f565b946020939093013593505050565b60008060408385031215613d5257600080fd5b8235613d5d81614a4f565b9150613d6b60208401613ca1565b90509250929050565b600060208284031215613d8657600080fd5b81356001600160401b03811115613d9c57600080fd5b610e6484828501613a08565b6000610100808385031215613dbc57600080fd5b83601f840112613dcb57600080fd5b613dd3614657565b8084868487011115613de457600080fd5b600093505b6008841015613e0957803583526001939093019260209283019201613de9565b5095945050505050565b6000610100808385031215613e2757600080fd5b83601f840112613e3657600080fd5b613e3e614657565b8084868487011115613e4f57600080fd5b600093505b6008841015613e0957805183526001939093019260209283019201613e54565b600060208284031215613e8657600080fd5b81518015158114610e6257600080fd5b600060208284031215613ea857600080fd5b5035919050565b60008060408385031215613ec257600080fd5b82516001600160401b0380821115613ed957600080fd5b818501915085601f830112613eed57600080fd5b81516020613efd613a29836146cd565b8281528882848701011115613f1157600080fd5b613f2083838301848801614918565b87820151909650935082841115613f3657600080fd5b838701935087601f850112613f4a57600080fd5b83519250613f5a613a29846146aa565b8381528181019250848201600585901b860183018a1015613f7a57600080fd5b600095505b84861015613f9d578051845260019590950194928201928201613f7f565b5080955050505050509250929050565b600080600060608486031215613fc257600080fd5b8335613fcd81614a4f565b95602085013595506040909401359392505050565b60008060408385031215613ff557600080fd5b50508035926020909101359150565b60006020828403121561401657600080fd5b81356001600160401b0381111561402c57600080fd5b610e6484828501613acb565b60008060006060848603121561404d57600080fd5b83356001600160401b038082111561406457600080fd5b61407087838801613acb565b9450602086013591508082111561408657600080fd5b61409287838801613be8565b935060408601359150808211156140a857600080fd5b506140b586828701613b44565b9150509250925092565b600080604083850312156140d257600080fd5b82356001600160401b03808211156140e957600080fd5b6140f586838701613be8565b9350602085013591508082111561410b57600080fd5b5061411885828601613b44565b9150509250929050565b60008060006060848603121561413757600080fd5b83356001600160401b038082111561414e57600080fd5b61415a87838801613be8565b9450602086013591508082111561417057600080fd5b5061417d86828701613b44565b925050604084013561418e81614a4f565b809150509250925092565b6000602082840312156141ab57600080fd5b5051919050565b6000806000606084860312156141c757600080fd5b505081359360208301359350604090920135919050565b600080604083850312156141f157600080fd5b82359150613d6b60208401613ca1565b8060005b60028110156115305761421984835161422f565b6040939093019260209190910190600101614205565b8060005b6002811015611530578151845260209384019390910190600101614233565b6000815180845261426a816020860160208601614918565b601f01601f19169290920160200192915050565b60008251614290818460208701614918565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b818110156142f6578351835292840192918401916001016142da565b50909695505050505050565b60408101610ae0828461422f565b610100810161431f828661422f565b61432c6040830185614201565b610e6460c083018461422f565b6000610160614348838a61422f565b6143556040840189614201565b61436260c084018861422f565b8061010084015261437581840187614252565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff831660208201526060604082015260006143ba6060830184614252565b95945050505050565b6020815260006120366020830184614252565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b6020808252600d908201526c496e76616c696420726f6f747360981b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a084015261455060e0840182614252565b905060a0840151601f198483030160c08501526143ba8282614252565b604081526000835160e0604084015261458a610120840182614252565b9050602080860151603f19808685030160608701526145a98483614252565b6040890151878203909201608088015281518082529184019450600092508301905b808310156145eb57845182529383019360019290920191908301906145cb565b506060880151935061460060a087018561422f565b608088015160e087015260a088015161010087015260ff87168387015293506146269050565b50509392505050565b60405160c081016001600160401b038111828210171561465157614651614a39565b60405290565b60405161010081016001600160401b038111828210171561465157614651614a39565b604051601f8201601f191681016001600160401b03811182821017156146a2576146a2614a39565b604052919050565b60006001600160401b038211156146c3576146c3614a39565b5060051b60200190565b60006001600160401b038211156146e6576146e6614a39565b50601f01601f191660200190565b60008219821115614707576147076149f7565b500190565b600063ffffffff80831681851680830382111561472b5761472b6149f7565b01949350505050565b600060ff821660ff84168060ff03821115614751576147516149f7565b019392505050565b600063ffffffff8084168061477057614770614a0d565b92169190910492915050565b600181815b808511156147b9578163ffffffff0482111561479f5761479f6149f7565b808516156147ac57918102915b93841c9390800290614781565b509250929050565b600063ffffffff610e648185168285166000826147e057506001610ae0565b816147ed57506000610ae0565b8160018114614803576002811461480d5761483e565b6001915050610ae0565b60ff84111561481e5761481e6149f7565b6001841b915063ffffffff821115614838576148386149f7565b50610ae0565b5060208310610133831016604e8410600b8410161715614875575081810a63ffffffff811115614870576148706149f7565b610ae0565b61487f838361477c565b8063ffffffff04821115614895576148956149f7565b029392505050565b60008083128015600160ff1b8501841216156148bb576148bb6149f7565b6001600160ff1b03840183138116156148d6576148d66149f7565b50500390565b6000828210156148ee576148ee6149f7565b500390565b600063ffffffff83811690831681811015614910576149106149f7565b039392505050565b60005b8381101561493357818101518382015260200161491b565b838111156115305750506000910152565b600063ffffffff82168061495a5761495a6149f7565b6000190192915050565b6000600019821415614978576149786149f7565b5060010190565b600063ffffffff80831681811415614999576149996149f7565b6001019392505050565b6000826149b2576149b2614a0d565b500690565b600063ffffffff808416806149ce576149ce614a0d565b92169190910692915050565b6000600160ff1b8214156149f0576149f06149f7565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146121af57600080fdfef3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220ed470ff0fba94b129e3d0fcc1475590122e4d37b6dc86b133aebbfe91cc8d7ee64736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
