/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "bridge",
            type: "address",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "address",
            name: "handler",
            type: "address",
          },
        ],
        internalType: "struct VAnchorBase.PermissionedAccounts",
        name: "_permissions",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
        ],
        internalType: "struct VAnchorBase.Edge[]",
        name: "edges",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissions",
    outputs: [
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "handler",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b03191690553480156200002257600080fd5b5060405162005613380380620056138339810160408190526200004591620008f8565b85858584848484848484838360008263ffffffff1611620000b95760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001115760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000b0565b6001600160e01b031960e083901b1660a0526001600160601b0319606082901b1660805260005b8263ffffffff168163ffffffff16101562000189576200015e63ffffffff82166200027b565b63ffffffff821660009081526001602052604090205580620001808162000a04565b91505062000138565b506200019b63ffffffff83166200027b565b60008052600260209081527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b919091556001600455600d80546001600160a01b03199081166001600160a01b039a8b161790915560f89490941b7fff000000000000000000000000000000000000000000000000000000000000001660c0528951600580548616918a16919091179055890151600680548516918916919091179055505060409096015160078054909716941693909317909455505050505060609490941b6001600160601b03191660e0525062000a5095505050505050565b600081620002aa57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002db57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030c57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033d57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036e57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039f57507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003d057507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b81600714156200040157507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200043257507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200046357507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200049457507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004c557507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004f657507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052757507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055857507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058957507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005ba57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005ea57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061b57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064c57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067d57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006ae57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006df57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200071057507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200074157507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200077257507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a1415620007a357507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007d457507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c14156200080557507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200083657507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086757507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089857507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000b0565b919050565b805160ff81168114620008e157600080fd5b6000806000806000808688036101008112156200091457600080fd5b8751620009218162000a37565b602089015190975063ffffffff811681146200093c57600080fd5b60408901519096506200094f8162000a37565b6060890151909550620009628162000a37565b93506060607f19820112156200097757600080fd5b50604051606081016001600160401b0381118282101715620009a957634e487b7160e01b600052604160045260246000fd5b6040526080880151620009bc8162000a37565b815260a0880151620009ce8162000a37565b602082015260c0880151620009e38162000a37565b60408201529150620009f860e08801620008e6565b90509295509295509295565b600063ffffffff8083168181141562000a2d57634e487b7160e01b600052601160045260246000fd5b6001019392505050565b6001600160a01b038116811462000a4d57600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c614ac762000b4c600039600081816109d501528181610afc01528181610b9001528181611a1701528181611a6701528181611d330152818161203501528181612b3201528181612bd001528181612c1d01528181612ea201528181612f3a0152612fdf0152600081816105a401528181611012015281816111540152818161186601528181611bae01528181611e2201528181611eae015281816129c501528181612aef0152818161323301526133750152600081816104a001528181611f6d01528181612c790152612d380152600081816109150152610dc70152614ac76000f3fe6080604052600436106102c95760003560e01c806390eeb02b11610175578063cd87a3b4116100dc578063ec73295911610095578063f5ab0dd61161006f578063f5ab0dd614610964578063fa73168714610993578063fc0c546a146109c3578063fc7e9c6f146109f757600080fd5b8063ec732959146108cf578063ed33639f14610903578063f178e47c1461093757600080fd5b8063cd87a3b4146107e2578063dbc916b8146107f7578063e4a3011614610832578063e5285dcc14610852578063e70ea87c14610882578063e8295588146108af57600080fd5b8063b2bc6e0f1161012e578063b2bc6e0f1461072b578063ba70f7571461074b578063bac426d014610775578063bc063e1a146105ee578063c2b40ae414610795578063c9be7250146107c257600080fd5b806390eeb02b14610654578063921563111461067157806395c87d1a146106a15780639bbca3a9146106b45780639ff80063146104d7578063ab8c71c0146106d457600080fd5b80634ecf518b116102345780636d9833e3116101ed5780637fe24ffe116101c75780637fe24ffe146105ee578063840b2791146106065780638c0d34d81461061c5780638f1c56bd1461063e57600080fd5b80636d9833e31461057257806371523c321461059257806378abb49b146105d857600080fd5b80634ecf518b1461048e5780634f401241146104d75780635437988d146104f75780635d2d766c14610517578063616e09571461054a5780636ad481f31461056a57600080fd5b8063414a37ba11610286578063414a37ba146103ce5780634167bb1e146103f057806342d907111461040357806343e7119f1461042357806344347ba91461045b578063460b53e31461046e57600080fd5b806311e4dcb9146102ce57806317cc915c146103035780632063e3d3146103335780632570b7b4146103485780632b7ac3f31461037657806338bf282e146103ae575b600080fd5b3480156102da57600080fd5b506102ee6102e9366004613eb5565b610a1b565b60405190151581526020015b60405180910390f35b34801561030f57600080fd5b506102ee61031e366004613e83565b60116020526000908152604090205460ff1681565b610346610341366004613d37565b610ab0565b005b34801561035457600080fd5b50610368610363366004613eb5565b610bf2565b6040519081526020016102fa565b34801561038257600080fd5b50600d54610396906001600160a01b031681565b6040516001600160a01b0390911681526020016102fa565b3480156103ba57600080fd5b506103686103c9366004613eb5565b610ce0565b3480156103da57600080fd5b50610368600080516020614a7283398151915281565b6103466103fe3660046140f3565b610e54565b34801561040f57600080fd5b5061034661041e366004613eb5565b61150f565b34801561042f57600080fd5b5061036861043e366004614192565b600b60209081526000928352604080842090915290825290205481565b610346610469366004614166565b611574565b34801561047a57600080fd5b50610346610489366004613d37565b611a00565b34801561049a57600080fd5b506104c27f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016102fa565b3480156104e357600080fd5b506103466104f2366004613d37565b611a50565b34801561050357600080fd5b50610346610512366004613ce0565b611aa0565b34801561052357600080fd5b506104c2610532366004613e83565b600c6020526000908152604090205463ffffffff1681565b34801561055657600080fd5b506102ee610565366004613d61565b611b38565b610346611d1c565b34801561057e57600080fd5b506102ee61058d366004613e83565b611da3565b34801561059e57600080fd5b506105c67f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016102fa565b3480156105e457600080fd5b5061036860105481565b3480156105fa57600080fd5b50610368600160f81b81565b34801561061257600080fd5b50610368600f5481565b34801561062857600080fd5b50610631611e1e565b6040516102fa91906142b9565b34801561064a57600080fd5b50610368600e5481565b34801561066057600080fd5b506003546104c29063ffffffff1681565b34801561067d57600080fd5b506102ee61068c366004613e83565b60009081526009602052604090205460ff1690565b6103466106af366004613cfb565b611fd5565b3480156106c057600080fd5b506103466106cf366004614090565b61209b565b3480156106e057600080fd5b50600554600654600754610701926001600160a01b03908116928116911683565b604080516001600160a01b03948516815292841660208401529216918101919091526060016102fa565b34801561073757600080fd5b50610346610746366004613fd5565b6120e5565b34801561075757600080fd5b5060035463ffffffff16600090815260026020526040902054610368565b34801561078157600080fd5b50610346610790366004613ce0565b61214a565b3480156107a157600080fd5b506103686107b0366004613e83565b60026020526000908152604090205481565b3480156107ce57600080fd5b506103466107dd366004614009565b612196565b3480156107ee57600080fd5b506104c2601e81565b34801561080357600080fd5b50610817610812366004613e83565b6121ae565b604080519384526020840192909252908201526060016102fa565b34801561083e57600080fd5b5061034661084d366004613eb5565b6121e1565b34801561085e57600080fd5b506102ee61086d366004613e83565b60009081526011602052604090205460ff1690565b34801561088e57600080fd5b5061036861089d366004613e83565b60086020526000908152604090205481565b3480156108bb57600080fd5b506103686108ca366004613e83565b61229f565b3480156108db57600080fd5b506103687f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b34801561090f57600080fd5b506103967f000000000000000000000000000000000000000000000000000000000000000081565b34801561094357600080fd5b50610368610952366004613e83565b60016020526000908152604090205481565b34801561097057600080fd5b5061098461097f366004613d95565b6128df565b6040516102fa93929190614312565b34801561099f57600080fd5b506102ee6109ae366004613e83565b60096020526000908152604090205460ff1681565b3480156109cf57600080fd5b506103967f000000000000000000000000000000000000000000000000000000000000000081565b348015610a0357600080fd5b506003546104c290600160201b900463ffffffff1681565b600081610a2a57506000610aaa565b6000838152600c602052604090205463ffffffff16805b6000858152600b6020908152604080832063ffffffff85168452909152902054841415610a7357600192505050610aaa565b63ffffffff8116610a825750601e5b80610a8c81614946565b9150508163ffffffff168163ffffffff161415610a41576000925050505b92915050565b6001600160a01b038216610b5e57803414610aca57600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610b4157600080fd5b505af1158015610b55573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610bd557600080fd5b505af1158015610be9573d6000803e3d6000fd5b505050505b5050565b6000600160f81b8210610c3a5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610c47600160f81b6149dc565b83138015610c585750600160f81b83125b610c995760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610c31565b6000610ca5838561489f565b90506000811215610cd657610cb9816149dc565b610cd190600080516020614a728339815191526148de565b610cd8565b805b949350505050565b6000600080516020614a728339815191528310610d3f5760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610c31565b600080516020614a728339815191528210610da65760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610c31565b610dae613972565b8381526020810183905260405163014cf2b360e51b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063299e566090610e04908490600401614288565b60206040518083038186803b158015610e1c57600080fd5b505afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190613e9c565b60005b836040015151811015610ef257610e9a84604001518281518110610e7d57610e7d614a25565b602002602001015160009081526011602052604090205460ff1690565b15610ee05760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610c31565b80610eea81614966565b915050610e57565b50600080516020614a7283398151915282604051602001610f139190614502565b6040516020818303038152906040528051906020012060001c610f3691906149a5565b60a084015114610f885760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610c31565b610f9a82602001518360600151610bf2565b836080015114610fe45760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610c31565b826040015151600214156111265760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491867f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161104e92919061456f565b60006040518083038186803b15801561106657600080fd5b505af415801561107a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110a29190810190613ed7565b915091506110af81611b38565b6110cb5760405162461bcd60e51b8152600401610c3190614423565b84516110d79083612968565b61111f5760405162461bcd60e51b815260206004820152601960248201527824b73b30b634b2103a3930b739b0b1ba34b7b710383937b7b360391b6044820152606401610c31565b5050611261565b826040015151601014156112195760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f867f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161119092919061456f565b60006040518083038186803b1580156111a857600080fd5b505af41580156111bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111e49190810190613ed7565b915091506111f181611b38565b61120d5760405162461bcd60e51b8152600401610c3190614423565b84516110d79083612a92565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610c31565b60005b8360400151518110156112cd576001601160008660400151848151811061128d5761128d614a25565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806112c590614966565b915050611264565b5060008260200151131561130f57601054826020015111156113015760405162461bcd60e51b8152600401610c3190614481565b61130f818360200151610ab0565b6000826020015112156113b95781516001600160a01b03166113735760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610c31565b600f548260200151611384906149dc565b10156113a25760405162461bcd60e51b8152600401610c31906143d8565b6113b981836000015184602001516106af906149dc565b6060820151156113d5576113d582604001518360600151612b1a565b606083015180516113ed9160015b6020020151612c61565b50606083015151600354600080516020614a52833981519152919061142190600290600160201b900463ffffffff166148f5565b846080015160405161143593929190614397565b60405180910390a16060830151600080516020614a52833981519152906001602002015160035461147590600190600160201b900463ffffffff166148f5565b8460a0015160405161148993929190614397565b60405180910390a160005b836040015151811015611509577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce846040015182815181106114d8576114d8614a25565b60200260200101516040516114ef91815260200190565b60405180910390a18061150181614966565b915050611494565b50505050565b6006546001600160a01b031633146115695760405162461bcd60e51b815260206004820152601760248201527f73656e646572206973206e6f74207468652061646d696e0000000000000000006044820152606401610c31565b600f91909155601055565b6007546001600160a01b0316331461159e5760405162461bcd60e51b8152600401610c31906144cb565b600260045414156115c15760405162461bcd60e51b8152600401610c319061444a565b60026004908155604051639215631160e01b8152908101849052309063921563119060240160206040518083038186803b1580156115fe57600080fd5b505afa158015611612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116369190613e61565b1561185f5760008381526009602052604090205460ff166116bf5760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610c31565b600083815260086020526040902054600a805483929081106116e3576116e3614a25565b906000526020600020906003020160020154106117425760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610c31565b600083815260086020908152604091829020548251606081018452868152918201859052918101839052600a80548390811061178057611780614a25565b60009182526020808320845160039093020191825583810151600180840191909155604094850151600290930192909255878352600c9052918120549091601e916117d39163ffffffff9091169061470e565b6117dd91906149b9565b6000868152600c60209081526040808320805463ffffffff191663ffffffff8616908117909155600b835281842090845282529182902087905581518881529081018690529081018690529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a150506119f6565b600a5460ff7f000000000000000000000000000000000000000000000000000000000000000016116118d35760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610c31565b6000838152600960209081526040808320805460ff19166001908117909155600a80548351606080820186528a82528187018a81528287018a815295840185559388528151600384027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a881019190915593517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a985015593517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa9093019290925588865260088552838620819055600b855283862086805285528386208890558351898152948501879052928401879052919391927fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b5050600160045550565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610bbb90339086908690600401614264565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610bbb90339086908690600401614264565b6007546001600160a01b03163314611aca5760405162461bcd60e51b8152600401610c31906144cb565b6001600160a01b038116611b165760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610c31565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6000611b5d82600081518110611b5057611b50614a25565b6020026020010151611da3565b611ba95760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610c31565b611bd47f00000000000000000000000000000000000000000000000000000000000000006001614736565b60ff16825114611c265760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610c31565b60005b600a54811015611d13576000600a8281548110611c4857611c48614a25565b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250509050611cb4816000015185846001611c9791906146f6565b81518110611ca757611ca7614a25565b6020026020010151610a1b565b611d005760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610c31565b5080611d0b81614966565b915050611c29565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca69388903490611d6f9033906000908190600401614264565b6000604051808303818588803b158015611d8857600080fd5b505af1158015611d9c573d6000803e3d6000fd5b5050505050565b600081611db257506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415611de4575060019392505050565b63ffffffff8116611df35750601e5b80611dfd81614946565b9150508163ffffffff168163ffffffff161415611dbd575060009392505050565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115611e5b57611e5b614a3b565b604051908082528060200260200182016040528015611ea657816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181611e795790505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015611fd157611ee28160016146f6565b600a5410611f5657600a8181548110611efd57611efd614a25565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050828281518110611f4657611f46614a25565b6020026020010181905250611fbf565b604051806060016040528060008152602001611f977f000000000000000000000000000000000000000000000000000000000000000063ffffffff1661229f565b81526020016000815250828281518110611fb357611fb3614a25565b60200260200101819052505b80611fc981614966565b915050611eac565b5090565b60026004541415611ff85760405162461bcd60e51b8152600401610c319061444a565b60026004556120073082612e8a565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b15801561207957600080fd5b505af115801561208d573d6000803e3d6000fd5b505060016004555050505050565b6000816020015113156120db576120b58160200151612f61565b601054816020015111156120db5760405162461bcd60e51b8152600401610c3190614481565b610bee828261306a565b80516001600160a01b0316331461213e5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610c31565b6121478161369f565b50565b6007546001600160a01b031633146121745760405162461bcd60e51b8152600401610c31906144cb565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b61219f836120e5565b6121a9828261209b565b505050565b600a81815481106121be57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600054610100900460ff16806121fa575060005460ff16155b61225d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610c31565b600054610100900460ff1615801561227f576000805461ffff19166101011790555b600f839055601082905580156121a9576000805461ff0019169055505050565b6000816122cd57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b81600114156122fd57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561232d57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561235d57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b816004141561238d57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156123bd57507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b81600614156123ed57507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561241d57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561244d57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b816009141561247d57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156124ad57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b14156124dd57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c141561250d57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561253d57507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561256d57507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f141561259d57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156125cd57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b81601114156125fc57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012141561262c57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013141561265c57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b816014141561268c57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601514156126bc57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b81601614156126ec57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b816017141561271c57507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b816018141561274c57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b816019141561277c57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156127ac57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b14156127dc57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c141561280c57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d141561283c57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e141561286c57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f141561289c57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610c31565b919050565b6128e7613972565b6128ef613990565b6128f7613972565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b6000808380602001905181019061297f9190613e00565b9050600080600061298f846128df565b600d54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906129f0908690869086908c907f00000000000000000000000000000000000000000000000000000000000000009060019060040161433b565b60206040518083038186803b158015612a0857600080fd5b505afa158015612a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a409190613e61565b945084612a885760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610c31565b5050505092915050565b60008083806020019051810190612aa99190613e00565b90506000806000612ab9846128df565b600d54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca53906129f0908690869086908c907f00000000000000000000000000000000000000000000000000000000000000009060009060040161433b565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612b7c57600080fd5b505afa158015612b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bb49190613e9c565b905081156121a957818110612bf7576121a96001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846136eb565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610b4157600080fd5b600354600090600160201b900463ffffffff16612c9f7f000000000000000000000000000000000000000000000000000000000000000060026147c3565b63ffffffff168163ffffffff161415612d135760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610c31565b6000612d2060028361475b565b90506000612d2e8686610ce0565b905060008060015b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015612df757612d756002866149b9565b63ffffffff16612db057839250612d918163ffffffff1661229f565b63ffffffff821660009081526001602052604090208590559150612dcc565b63ffffffff811660009081526001602052604090205492508391505b612dd68383610ce0565b9350612de360028661475b565b945080612def81614981565b915050612d36565b50600354600090601e90612e129063ffffffff16600161470e565b612e1c91906149b9565b6003805463ffffffff191663ffffffff83169081179091556000908152600260208190526040909120869055909150612e5690879061470e565b6003805463ffffffff92909216600160201b0267ffffffff0000000019909216919091179055509394505050505092915050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612eec57600080fd5b505afa158015612f00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f249190613e9c565b9050818110612bf7576121a96001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846136eb565b3415612fc85760405162461bcd60e51b815260206004820152603060248201527f4554482076616c756520697320737570706f73656420746f206265203020666f60448201526f7220455243323020696e7374616e636560801b6064820152608401610c31565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd9061301890339030908690600401614264565b602060405180830381600087803b15801561303257600080fd5b505af1158015613046573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bee9190613e61565b6002600454141561308d5760405162461bcd60e51b8152600401610c319061444a565b600260045560005b826040015151811015613113576130bb83604001518281518110610e7d57610e7d614a25565b156131015760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610c31565b8061310b81614966565b915050613095565b50600080516020614a72833981519152816040516020016131349190614502565b6040516020818303038152906040528051906020012060001c61315791906149a5565b60a0830151146131a95760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610c31565b6131bb81602001518260600151610bf2565b8260800151146132055760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610c31565b816040015151600214156133475760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161326f92919061456f565b60006040518083038186803b15801561328757600080fd5b505af415801561329b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132c39190810190613ed7565b915091506132d081611b38565b6132ec5760405162461bcd60e51b8152600401610c3190614423565b83516132f89083612968565b6133405760405162461bcd60e51b815260206004820152601960248201527824b73b30b634b2103a3930b739b0b1ba34b7b710383937b7b360391b6044820152606401610c31565b505061343a565b816040015151601014156112195760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016133b192919061456f565b60006040518083038186803b1580156133c957600080fd5b505af41580156133dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526134059190810190613ed7565b9150915061341281611b38565b61342e5760405162461bcd60e51b8152600401610c3190614423565b83516132f89083612a92565b60005b8260400151518110156134a6576001601160008560400151848151811061346657613466614a25565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061349e90614966565b91505061343d565b506000816020015112156135555780516001600160a01b031661350b5760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610c31565b600f54816020015161351c906149dc565b101561353a5760405162461bcd60e51b8152600401610c31906143d8565b61355581600001518260200151613550906149dc565b612e8a565b6060810151156135715761357181604001518260600151612b1a565b606082015180516135839160016113e3565b50606082015151600354600080516020614a5283398151915291906135b790600290600160201b900463ffffffff166148f5565b83608001516040516135cb93929190614397565b60405180910390a16060820151600080516020614a52833981519152906001602002015160035461360b90600190600160201b900463ffffffff166148f5565b8360a0015160405161361f93929190614397565b60405180910390a160005b8260400151518110156119f6577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce8360400151828151811061366e5761366e614a25565b602002602001015160405161368591815260200190565b60405180910390a18061369781614966565b91505061362a565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e5082602001516040516136e091906143c5565b60405180910390a250565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526121a99286929160009161377b9185169084906137f8565b8051909150156121a957808060200190518101906137999190613e61565b6121a95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c31565b60606138078484600085613811565b90505b9392505050565b6060824710156138725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610c31565b843b6138c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c31565b600080866001600160a01b031685876040516138dc9190614248565b60006040518083038185875af1925050503d8060008114613919576040519150601f19603f3d011682016040523d82523d6000602084013e61391e565b606091505b509150915061392e828286613939565b979650505050505050565b6060831561394857508161380a565b8251156139585782518084602001fd5b8160405162461bcd60e51b8152600401610c3191906143c5565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b6139a7613972565b81526020019060019003908161399f5790505090565b80356001600160a01b03811681146128da57600080fd5b600082601f8301126139e557600080fd5b604051604081018181106001600160401b0382111715613a0757613a07614a3b565b8060405250808385604086011115613a1e57600080fd5b60005b6002811015613a40578135835260209283019290910190600101613a21565b509195945050505050565b600082601f830112613a5c57600080fd5b81356020613a71613a6c836146ac565b61467c565b80838252828201915082860187848660051b8901011115613a9157600080fd5b60005b85811015613ab057813584529284019290840190600101613a94565b5090979650505050505050565b600082601f830112613ace57600080fd5b8135613adc613a6c826146cf565b818152846020838601011115613af157600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613b2057600080fd5b604051604081016001600160401b038282108183111715613b4357613b43614a3b565b81604052829350613b53856139bd565b83526020850135915080821115613b6957600080fd5b50613b7685828601613abd565b6020830152505092915050565b600060c08284031215613b9557600080fd5b613b9d614631565b9050613ba8826139bd565b815260208201356020820152613bc0604083016139bd565b60408201526060820135606082015260808201356001600160401b0380821115613be957600080fd5b613bf585838601613abd565b608084015260a0840135915080821115613c0e57600080fd5b50613c1b84828501613abd565b60a08301525092915050565b600060e08284031215613c3957600080fd5b613c41614631565b905081356001600160401b0380821115613c5a57600080fd5b613c6685838601613abd565b83526020840135915080821115613c7c57600080fd5b613c8885838601613abd565b60208401526040840135915080821115613ca157600080fd5b50613cae84828501613a4b565b604083015250613cc183606084016139d4565b606082015260a0820135608082015260c082013560a082015292915050565b600060208284031215613cf257600080fd5b61380a826139bd565b600080600060608486031215613d1057600080fd5b613d19846139bd565b9250613d27602085016139bd565b9150604084013590509250925092565b60008060408385031215613d4a57600080fd5b613d53836139bd565b946020939093013593505050565b600060208284031215613d7357600080fd5b81356001600160401b03811115613d8957600080fd5b610cd884828501613a4b565b6000610100808385031215613da957600080fd5b83601f840112613db857600080fd5b613dc0614659565b8084868487011115613dd157600080fd5b600093505b6008841015613df657803583526001939093019260209283019201613dd6565b5095945050505050565b6000610100808385031215613e1457600080fd5b83601f840112613e2357600080fd5b613e2b614659565b8084868487011115613e3c57600080fd5b600093505b6008841015613df657805183526001939093019260209283019201613e41565b600060208284031215613e7357600080fd5b81518015158114610cd657600080fd5b600060208284031215613e9557600080fd5b5035919050565b600060208284031215613eae57600080fd5b5051919050565b60008060408385031215613ec857600080fd5b50508035926020909101359150565b60008060408385031215613eea57600080fd5b82516001600160401b0380821115613f0157600080fd5b818501915085601f830112613f1557600080fd5b81516020613f25613a6c836146cf565b8281528882848701011115613f3957600080fd5b613f488383830184880161491a565b87820151909650935082841115613f5e57600080fd5b838701935087601f850112613f7257600080fd5b83519250613f82613a6c846146ac565b8381528181019250848201600585901b860183018a1015613fa257600080fd5b600095505b84861015613fc5578051845260019590950194928201928201613fa7565b5080955050505050509250929050565b600060208284031215613fe757600080fd5b81356001600160401b03811115613ffd57600080fd5b610cd884828501613b0e565b60008060006060848603121561401e57600080fd5b83356001600160401b038082111561403557600080fd5b61404187838801613b0e565b9450602086013591508082111561405757600080fd5b61406387838801613c27565b9350604086013591508082111561407957600080fd5b5061408686828701613b83565b9150509250925092565b600080604083850312156140a357600080fd5b82356001600160401b03808211156140ba57600080fd5b6140c686838701613c27565b935060208501359150808211156140dc57600080fd5b506140e985828601613b83565b9150509250929050565b60008060006060848603121561410857600080fd5b83356001600160401b038082111561411f57600080fd5b61412b87838801613c27565b9450602086013591508082111561414157600080fd5b5061414e86828701613b83565b92505061415d604085016139bd565b90509250925092565b60008060006060848603121561417b57600080fd5b505081359360208301359350604090920135919050565b600080604083850312156141a557600080fd5b82359150602083013563ffffffff811681146141c057600080fd5b809150509250929050565b8060005b6002811015611509576141e38483516141f9565b60409390930192602091909101906001016141cf565b8060005b60028110156115095781518452602093840193909101906001016141fd565b6000815180845261423481602086016020860161491a565b601f01601f19169290920160200192915050565b6000825161425a81846020870161491a565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60408101818360005b60028110156142b0578151835260209283019290910190600101614291565b50505092915050565b602080825282518282018190526000919060409081850190868401855b8281101561430557815180518552868101518786015285015185850152606090930192908501906001016142d6565b5091979650505050505050565b610100810161432182866141f9565b61432e60408301856141cb565b610cd860c08301846141f9565b600061016061434a838a6141f9565b61435760408401896141cb565b61436460c08401886141f9565b806101008401526143778184018761421c565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff831660208201526060604082015260006143bc606083018461421c565b95945050505050565b60208152600061380a602083018461421c565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b6020808252600d908201526c496e76616c696420726f6f747360981b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a084015261455260e084018261421c565b905060a0840151601f198483030160c08501526143bc828261421c565b604081526000835160e0604084015261458c61012084018261421c565b9050602080860151603f19808685030160608701526145ab848361421c565b6040890151878203909201608088015281518082529184019450600092508301905b808310156145ed57845182529383019360019290920191908301906145cd565b506060880151935061460260a08701856141f9565b608088015160e087015260a088015161010087015260ff87168387015293506146289050565b50509392505050565b60405160c081016001600160401b038111828210171561465357614653614a3b565b60405290565b60405161010081016001600160401b038111828210171561465357614653614a3b565b604051601f8201601f191681016001600160401b03811182821017156146a4576146a4614a3b565b604052919050565b60006001600160401b038211156146c5576146c5614a3b565b5060051b60200190565b60006001600160401b038211156146e8576146e8614a3b565b50601f01601f191660200190565b60008219821115614709576147096149f9565b500190565b600063ffffffff80831681851680830382111561472d5761472d6149f9565b01949350505050565b600060ff821660ff84168060ff03821115614753576147536149f9565b019392505050565b600063ffffffff8084168061477257614772614a0f565b92169190910492915050565b600181815b808511156147bb578163ffffffff048211156147a1576147a16149f9565b808516156147ae57918102915b93841c9390800290614783565b509250929050565b600063ffffffff610cd88185168285166000826147e257506001610aaa565b816147ef57506000610aaa565b8160018114614805576002811461480f57614840565b6001915050610aaa565b60ff841115614820576148206149f9565b6001841b915063ffffffff82111561483a5761483a6149f9565b50610aaa565b5060208310610133831016604e8410600b8410161715614877575081810a63ffffffff811115614872576148726149f9565b610aaa565b614881838361477e565b8063ffffffff04821115614897576148976149f9565b029392505050565b60008083128015600160ff1b8501841216156148bd576148bd6149f9565b6001600160ff1b03840183138116156148d8576148d86149f9565b50500390565b6000828210156148f0576148f06149f9565b500390565b600063ffffffff83811690831681811015614912576149126149f9565b039392505050565b60005b8381101561493557818101518382015260200161491d565b838111156115095750506000910152565b600063ffffffff82168061495c5761495c6149f9565b6000190192915050565b600060001982141561497a5761497a6149f9565b5060010190565b600063ffffffff8083168181141561499b5761499b6149f9565b6001019392505050565b6000826149b4576149b4614a0f565b500690565b600063ffffffff808416806149d0576149d0614a0f565b92169190910692915050565b6000600160ff1b8214156149f2576149f26149f9565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfef3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220d041f3064ec96ff75d6f2afb6e6b22306a9116b421b33e65e226bc9f239007fe64736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _permissions: { bridge: string; admin: string; handler: string },
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _token,
      _permissions,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _token: string,
    _permissions: { bridge: string; admin: string; handler: string },
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _token,
      _permissions,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
