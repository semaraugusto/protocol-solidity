/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VAnchor, VAnchorInterface } from "../VAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedOutput",
        type: "bytes",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_extAmount",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "calculatePublicAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "configureLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonT3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "insert",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "registerAndTransact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "publicKey",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.Account",
        name: "_account",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_proofArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "registerAndTransactWrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newHandler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
    ],
    name: "setVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "roots",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "inputNullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[2]",
            name: "outputCommitments",
            type: "bytes32[2]",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "extDataHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VAnchorEncodeInputs.Proof",
        name: "_args",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "extAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encryptedOutput2",
            type: "bytes",
          },
        ],
        internalType: "struct VAnchorBase.ExtData",
        name: "_extData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "transactWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "unpackProof",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IAnchorVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minusExtAmount",
        type: "uint256",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_extAmount",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052600380546001600160401b0319169055600b805463ffffffff60a01b191690553480156200003257600080fd5b506040516200560c3803806200560c8339810160408190526200005591620008da565b85858585848185848684848383838183818160008263ffffffff1611620000cf5760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff1610620001275760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000c6565b60e09190911b6001600160e01b03191660a05260601b6001600160601b03191660805260005b8263ffffffff168163ffffffff1610156200019e576200017363ffffffff821662000274565b63ffffffff8216600090815260016020526040902055806200019581620009a3565b9150506200014d565b50620001bc620001b06001846200097b565b63ffffffff1662000274565b6000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600455600580546001600160a01b03199081166001600160a01b039687161790915560f89190911b7fff000000000000000000000000000000000000000000000000000000000000001660c052600b80549091169790931696909617909155505050505060609790971b6001600160601b03191660e05250620009f99950505050505050505050565b600081620002a357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b8160011415620002d457507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b81600214156200030557507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b81600314156200033657507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156200036757507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156200039857507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b8160061415620003c957507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b8160071415620003fa57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b81600814156200042b57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156200045c57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156200048d57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b1415620004be57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c1415620004ef57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d14156200052057507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e14156200055157507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156200058257507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b8160101415620005b357507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b8160111415620005e357507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b81601214156200061457507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b81601314156200064557507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156200067657507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b8160151415620006a757507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b8160161415620006d857507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b81601714156200070957507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b81601814156200073a57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156200076b57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156200079c57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b1415620007cd57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c1415620007fe57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d14156200082f57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e14156200086057507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156200089157507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e6473000000000000000000000000006044820152606401620000c6565b60008060008060008060c08789031215620008f457600080fd5b86516200090181620009e0565b602088015190965063ffffffff811681146200091c57600080fd5b60408801519095506200092f81620009e0565b60608801519094506200094281620009e0565b60808801519093506200095581620009e0565b60a088015190925060ff811681146200096d57600080fd5b809150509295509295509295565b600063ffffffff838116908316818110156200099b576200099b620009ca565b039392505050565b600063ffffffff80831681811415620009c057620009c0620009ca565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620009f657600080fd5b50565b60805160601c60a05160e01c60c05160f81c60e05160601c614b2562000ae760003960008181610b0101528181610d7f01528181610e130152818161170f0152818161175f01528181611a2b01528181611e3901528181611efb01528181612e2a01528181612ec801528181612f15015281816130da015261317201526000818161068c01528181610be101528181610c4b0152818161155e015281816118a6015281816132150152818161337701528181613553015261367d01526000818161059d01528181610cd4015281816129b30152612a56015260008181610a410152612aef0152614b256000f3fe60806040526004361061036b5760003560e01c80638ea3099e116101c6578063c9be7250116100f7578063ec73295911610095578063f5ab0dd61161006f578063f5ab0dd614610a90578063fa73168714610abf578063fc0c546a14610aef578063fc7e9c6f14610b2357600080fd5b8063ec732959146109fb578063ed33639f14610a2f578063f178e47c14610a6357600080fd5b8063e4a30116116100d1578063e4a301161461095e578063e5285dcc1461097e578063e70ea87c146109ae578063e8295588146109db57600080fd5b8063c9be7250146108ee578063cd87a3b41461090e578063dbc916b81461092357600080fd5b80639ff8006311610164578063ba70f7571161013e578063ba70f75714610877578063bc063e1a146106f6578063c2b40ae4146108a1578063c80916d4146108ce57600080fd5b80639ff80063146105bf578063b2bc6e0f14610837578063b7566a671461085757600080fd5b806392156311116101a057806392156311146107a757806395c87d1a146107d75780639bbca3a9146107ea5780639fa12d0b1461080a57600080fd5b80638ea3099e146107545780638f1c56bd1461077457806390eeb02b1461078a57600080fd5b8063460b53e3116102a05780636d9833e31161023e57806378abb49b1161021857806378abb49b146106e05780637fe24ffe146106f6578063839df9451461070e578063840b27911461073e57600080fd5b80636d9833e31461065a57806371523c321461067a57806372c1ad03146106c057600080fd5b80635437988d1161027a5780635437988d146105df5780635d2d766c146105ff578063616e0957146106325780636ad481f31461065257600080fd5b8063460b53e31461056b5780634ecf518b1461058b5780634f401241146105bf57600080fd5b80632d287e431161030d5780634167bb1e116102e75780634167bb1e146104ed57806342d907111461050057806343e7119f1461052057806344347ba91461055857600080fd5b80632d287e43146104a55780633408e470146104b8578063414a37ba146104cb57600080fd5b80631e627617116103495780631e627617146104085780632063e3d31461042a5780632570b7b41461043f5780632b7ac3f31461046d57600080fd5b80630b27fb9a1461037057806311e4dcb9146103a857806317cc915c146103d8575b600080fd5b34801561037c57600080fd5b50600b54600160a01b900463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b3480156103b457600080fd5b506103c86103c3366004613fa0565b610b48565b604051901515815260200161039f565b3480156103e457600080fd5b506103c86103f3366004613e54565b600c6020526000908152604090205460ff1681565b34801561041457600080fd5b5061041d610bdd565b60405161039f919061435c565b61043d610438366004613c5d565b610d33565b005b34801561044b57600080fd5b5061045f61045a366004613fa0565b610e74565b60405190815260200161039f565b34801561047957600080fd5b50600b5461048d906001600160a01b031681565b6040516001600160a01b03909116815260200161039f565b61038e6104b3366004613e54565b610f62565b3480156104c457600080fd5b504661045f565b3480156104d757600080fd5b5061045f600080516020614ad083398151915281565b61043d6104fb36600461417a565b611074565b34801561050c57600080fd5b5061043d61051b366004613fa0565b611195565b34801561052c57600080fd5b5061045f61053b366004614236565b600960209081526000928352604080842090915290825290205481565b61043d61056636600461420a565b6111ca565b34801561057757600080fd5b5061043d610586366004613c5d565b6116f8565b34801561059757600080fd5b5061038e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105cb57600080fd5b5061043d6105da366004613c5d565b611748565b3480156105eb57600080fd5b5061043d6105fa366004613bff565b611798565b34801561060b57600080fd5b5061038e61061a366004613e54565b600a6020526000908152604090205463ffffffff1681565b34801561063e57600080fd5b506103c861064d366004613d32565b611830565b61043d611a14565b34801561066657600080fd5b506103c8610675366004613e54565b611a9b565b34801561068657600080fd5b506106ae7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161039f565b3480156106cc57600080fd5b5061043d6106db366004613c89565b611b16565b3480156106ec57600080fd5b5061045f60105481565b34801561070257600080fd5b5061045f600160f81b81565b34801561071a57600080fd5b506103c8610729366004613e54565b600d6020526000908152604090205460ff1681565b34801561074a57600080fd5b5061045f600f5481565b34801561076057600080fd5b5061045f61076f366004613f6b565b611c76565b34801561078057600080fd5b5061045f600e5481565b34801561079657600080fd5b5060035461038e9063ffffffff1681565b3480156107b357600080fd5b506103c86107c2366004613e54565b60009081526007602052604090205460ff1690565b61043d6107e5366004613c1c565b611dd9565b3480156107f657600080fd5b5061043d610805366004614117565b611e9f565b34801561081657600080fd5b5061082a610825366004613cbe565b612089565b60405161039f9190614316565b34801561084357600080fd5b5061043d610852366004613fc2565b61214e565b34801561086357600080fd5b5061043d61087236600461407d565b6121b3565b34801561088357600080fd5b5060035463ffffffff1660009081526002602052604090205461045f565b3480156108ad57600080fd5b5061045f6108bc366004613e54565b60026020526000908152604090205481565b3480156108da57600080fd5b5060055461048d906001600160a01b031681565b3480156108fa57600080fd5b5061043d610909366004613ff6565b6121cd565b34801561091a57600080fd5b5061038e601e81565b34801561092f57600080fd5b5061094361093e366004613e54565b6121e0565b6040805193845260208401929092529082015260600161039f565b34801561096a57600080fd5b5061043d610979366004613fa0565b612213565b34801561098a57600080fd5b506103c8610999366004613e54565b6000908152600c602052604090205460ff1690565b3480156109ba57600080fd5b5061045f6109c9366004613e54565b60066020526000908152604090205481565b3480156109e757600080fd5b5061045f6109f6366004613e54565b6122d1565b348015610a0757600080fd5b5061045f7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b348015610a3b57600080fd5b5061048d7f000000000000000000000000000000000000000000000000000000000000000081565b348015610a6f57600080fd5b5061045f610a7e366004613e54565b60016020526000908152604090205481565b348015610a9c57600080fd5b50610ab0610aab366004613d66565b612911565b60405161039f939291906143a2565b348015610acb57600080fd5b506103c8610ada366004613e54565b60076020526000908152604090205460ff1681565b348015610afb57600080fd5b5061048d7f000000000000000000000000000000000000000000000000000000000000000081565b348015610b2f57600080fd5b5060035461038e90640100000000900463ffffffff1681565b600081610b5757506000610bd7565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610ba057600192505050610bd7565b63ffffffff8116610baf5750601e5b80610bb9816149af565b9150508163ffffffff168163ffffffff161415610b6e576000925050505b92915050565b60607f000000000000000000000000000000000000000000000000000000000000000060ff166001600160401b03811115610c1a57610c1a614aa4565b604051908082528060200260200182016040528015610c43578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610d2f57610c7f81600161475f565b60085410610ccf5760088181548110610c9a57610c9a614a8e565b906000526020600020906003020160010154828281518110610cbe57610cbe614a8e565b602002602001018181525050610d1d565b610cfe7f000000000000000000000000000000000000000000000000000000000000000063ffffffff166122d1565b828281518110610d1057610d10614a8e565b6020026020010181815250505b80610d27816149cf565b915050610c49565b5090565b6001600160a01b038216610de157803414610d4d57600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016000604051808303818588803b158015610dc457600080fd5b505af1158015610dd8573d6000803e3d6000fd5b50505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038381166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6906084015b600060405180830381600087803b158015610e5857600080fd5b505af1158015610e6c573d6000803e3d6000fd5b505050505050565b6000600160f81b8210610ebc5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642066656560a81b60448201526064015b60405180910390fd5b610ec9600160f81b614a45565b83138015610eda5750600160f81b83125b610f1b5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908195e1d08185b5bdd5b9d60721b6044820152606401610eb3565b6000610f278385614908565b90506000811215610f5857610f3b81614a45565b610f5390600080516020614ad0833981519152614947565b610f5a565b805b949350505050565b600060026004541415610f875760405162461bcd60e51b8152600401610eb3906144b3565b60026004556000828152600d602052604090205460ff1615610ff55760405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610eb3565b60006110008361299a565b6000848152600d602052604090819020805460ff191660011790555190915083907fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b590611061908490429063ffffffff929092168252602082015260400190565b60405180910390a2600160045592915050565b61107e8383612bc4565b506000826020015113156110c057601054826020015111156110b25760405162461bcd60e51b8152600401610eb3906144ea565b6110c0818360200151610d33565b60008260200151121561116a5781516001600160a01b03166111245760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610eb3565b600f54826020015161113590614a45565b10156111535760405162461bcd60e51b8152600401610eb390614468565b61116a81836000015184602001516107e590614a45565b6060820151156111865761118682604001518360600151612e12565b6111908383612f59565b505050565b6005546001600160a01b031633146111bf5760405162461bcd60e51b8152600401610eb390614534565b600f91909155601055565b6005546001600160a01b031633146111f45760405162461bcd60e51b8152600401610eb390614534565b600260045414156112175760405162461bcd60e51b8152600401610eb3906144b3565b60026004908155604051639215631160e01b8152908101849052309063921563119060240160206040518083038186803b15801561125457600080fd5b505afa158015611268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128c9190613e32565b156115575760008381526007602052604090205460ff166113155760405162461bcd60e51b815260206004820152603760248201527f436861696e206d75737420626520696e74656772617465642066726f6d20746860448201527f6520627269646765206265666f726520757064617465730000000000000000006064820152608401610eb3565b60008381526006602052604090205460088054839290811061133957611339614a8e565b906000526020600020906003020160020154106113985760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610eb3565b6000838152600660205260409020546008805490919081106113bc576113bc614a8e565b906000526020600020906003020160020154620100006113dc919061475f565b811061143a5760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610eb3565b600083815260066020908152604091829020548251606081018452868152918201859052918101839052600880548390811061147857611478614a8e565b60009182526020808320845160039093020191825583810151600180840191909155604094850151600290930192909255878352600a9052918120549091601e916114cb9163ffffffff90911690614777565b6114d59190614a22565b6000868152600a60209081526040808320805463ffffffff191663ffffffff86169081179091556009835281842090845282529182902087905581518881529081018690529081018690529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a150506116ee565b60085460ff7f000000000000000000000000000000000000000000000000000000000000000016116115cb5760405162461bcd60e51b815260206004820152601a60248201527f5468697320416e63686f722069732061742063617061636974790000000000006044820152606401610eb3565b6000838152600760209081526040808320805460ff19166001908117909155600880548351606080820186528a82528187018a81528287018a815295840185559388528151600384027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee485015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee590930192909255888652600685528386208190556009855283862086805285528386208890558351898152948501879052928401879052919391927fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b5050600160045550565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca6938890610e3e903390869086906004016142f2565b60405163130e405b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690610e3e903390869086906004016142f2565b6005546001600160a01b031633146117c25760405162461bcd60e51b8152600401610eb390614534565b6001600160a01b03811661180e5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610eb3565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b60006118558260008151811061184857611848614a8e565b6020026020010151611a9b565b6118a15760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610eb3565b6118cc7f0000000000000000000000000000000000000000000000000000000000000000600161479f565b60ff1682511461191e5760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610eb3565b60005b600854811015611a0b5760006008828154811061194057611940614a8e565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090506119ac81600001518584600161198f919061475f565b8151811061199f5761199f614a8e565b6020026020010151610b48565b6119f85760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610eb3565b5080611a03816149cf565b915050611921565b50600192915050565b604051630594d27160e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632ca69388903490611a6790339060009081906004016142f2565b6000604051808303818588803b158015611a8057600080fd5b505af1158015611a94573d6000803e3d6000fd5b5050505050565b600081611aaa57506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054841415611adc575060019392505050565b63ffffffff8116611aeb5750601e5b80611af5816149af565b9150508163ffffffff168163ffffffff161415611ab5575060009392505050565b6005546001600160a01b03163314611b405760405162461bcd60e51b8152600401610eb390614534565b6001600160a01b038216611b8c5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610eb3565b600b5463ffffffff808316600160a01b9092041610611bdd5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610eb3565b600b54611bf890600160a01b900463ffffffff166001614777565b63ffffffff168163ffffffff161115611c535760405162461bcd60e51b815260206004820152601960248201527f4e6f6e6365206d75737420696e6372656d656e742062792031000000000000006044820152606401610eb3565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000600080516020614ad08339815191528310611cd55760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c646044820152606401610eb3565b600080516020614ad08339815191528210611d3c5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b6064820152608401610eb3565b6040805180820182528481526020810184905290516314d2f97b60e11b8152849184916001600160a01b038816916329a5f2f691611d7d9190600401614394565b60206040518083038186803b158015611d9557600080fd5b505afa158015611da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dcd91906141f1565b925050505b9392505050565b60026004541415611dfc5760405162461bcd60e51b8152600401610eb3906144b3565b6002600455611e0b30826130c2565b604051632404142f60e11b81526001600160a01b0384811660048301526024820183905283811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015611e7d57600080fd5b505af1158015611e91573d6000803e3d6000fd5b505060016004555050505050565b60026004541415611ec25760405162461bcd60e51b8152600401610eb3906144b3565b6002600455611ed18282612bc4565b50600081602001511315611fac5760208101516040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91611f339133913091906004016142f2565b602060405180830381600087803b158015611f4d57600080fd5b505af1158015611f61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f859190613e32565b5060105481602001511115611fac5760405162461bcd60e51b8152600401610eb3906144ea565b60008160200151121561205a5780516001600160a01b03166120105760405162461bcd60e51b815260206004820152601e60248201527f43616e277420776974686472617720746f207a65726f206164647265737300006044820152606401610eb3565b600f54816020015161202190614a45565b101561203f5760405162461bcd60e51b8152600401610eb390614468565b61205a8160000151826020015161205590614a45565b6130c2565b6060810151156120765761207681604001518260600151612e12565b6120808282612f59565b50506001600455565b6060816001600160401b038111156120a3576120a3614aa4565b6040519080825280602002602001820160405280156120cc578160200160208202803683370190505b50905060005b828110156121475761210b8484838181106120ef576120ef614a8e565b905060200201356000908152600c602052604090205460ff1690565b1561213557600182828151811061212457612124614a8e565b911515602092830291909101909101525b8061213f816149cf565b9150506120d2565b5092915050565b80516001600160a01b031633146121a75760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2062652072656769737465726564000000006044820152606401610eb3565b6121b081613199565b50565b6121bc8461214e565b6121c7838383611074565b50505050565b6121d68361214e565b6111908282611e9f565b600881815481106121f057600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600054610100900460ff168061222c575060005460ff16155b61228f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610eb3565b600054610100900460ff161580156122b1576000805461ffff19166101011790555b600f83905560108290558015611190576000805461ff0019169055505050565b6000816122ff57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c919050565b816001141561232f57507f13e37f2d6cb86c78ccc1788607c2b199788c6bb0a615a21f2e7a8e88384222f8919050565b816002141561235f57507f217126fa352c326896e8c2803eec8fd63ad50cf65edfef27a41a9e32dc622765919050565b816003141561238f57507f0e28a61a9b3e91007d5a9e3ada18e1b24d6d230c618388ee5df34cacd7397eee919050565b81600414156123bf57507f27953447a6979839536badc5425ed15fadb0e292e9bc36f92f0aa5cfa5013587919050565b81600514156123ef57507f194191edbfb91d10f6a7afd315f33095410c7801c47175c2df6dc2cce0e3affc919050565b816006141561241f57507f1733dece17d71190516dbaf1927936fa643dc7079fc0cc731de9d6845a47741f919050565b816007141561244f57507f267855a7dc75db39d81d17f95d0a7aa572bf5ae19f4db0e84221d2b2ef999219919050565b816008141561247f57507f1184e11836b4c36ad8238a340ecc0985eeba665327e33e9b0e3641027c27620d919050565b81600914156124af57507f0702ab83a135d7f55350ab1bfaa90babd8fc1d2b3e6a7215381a7b2213d6c5ce919050565b81600a14156124df57507f2eecc0de814cfd8c57ce882babb2e30d1da56621aef7a47f3291cffeaec26ad7919050565b81600b141561250f57507f280bc02145c155d5833585b6c7b08501055157dd30ce005319621dc462d33b47919050565b81600c141561253f57507f045132221d1fa0a7f4aed8acd2cbec1e2189b7732ccb2ec272b9c60f0d5afc5b919050565b81600d141561256f57507f27f427ccbf58a44b1270abbe4eda6ba53bd6ac4d88cf1e00a13c4371ce71d366919050565b81600e141561259f57507f1617eaae5064f26e8f8a6493ae92bfded7fde71b65df1ca6d5dcec0df70b2cef919050565b81600f14156125cf57507f20c6b400d0ea1b15435703c31c31ee63ad7ba5c8da66cec2796feacea575abca919050565b81601014156125ff57507f09589ddb438723f53a8e57bdada7c5f8ed67e8fece3889a73618732965645eec919050565b816011141561262e57507e64b6a738a5ff537db7b220f3394f0ecbd35bfd355c5425dc1166bf3236079b919050565b816012141561265e57507f095de56281b1d5055e897c3574ff790d5ee81dbc5df784ad2d67795e557c9e9f919050565b816013141561268e57507f11cf2e2887aa21963a6ec14289183efe4d4c60f14ecd3d6fe0beebdf855a9b63919050565b81601414156126be57507f2b0f6fc0179fa65b6f73627c0e1e84c7374d2eaec44c9a48f2571393ea77bcbb919050565b81601514156126ee57507f16fdb637c2abf9c0f988dbf2fd64258c46fb6a273d537b2cf1603ea460b13279919050565b816016141561271e57507f21bbd7e944f6124dad4c376df9cc12e7ca66e47dff703ff7cedb1a454edcf0ff919050565b816017141561274e57507f2784f8220b1c963e468f590f137baaa1625b3b92a27ad9b6e84eb0d3454d9962919050565b816018141561277e57507f16ace1a65b7534142f8cc1aad810b3d6a7a74ca905d9c275cb98ba57e509fc10919050565b81601914156127ae57507f2328068c6a8c24265124debd8fe10d3f29f0665ea725a65e3638f6192a96a013919050565b81601a14156127de57507f2ddb991be1f028022411b4c4d2c22043e5e751c120736f00adf54acab1c9ac14919050565b81601b141561280e57507f0113798410eaeb95056a464f70521eb58377c0155f2fe518a5594d38cc209cc0919050565b81601c141561283e57507f202d1ae61526f0d0d01ef80fb5d4055a7af45721024c2c24cffd6a3798f54d50919050565b81601d141561286e57507f23ab323453748129f2765f79615022f5bebd6f4096a796300aab049a60b0f187919050565b81601e141561289e57507f1f15585f8947e378bcf8bd918716799da909acdb944c57150b1eb4565fda8aa0919050565b81601f14156128ce57507f1eb064b21055ac6a350cf41eb30e4ce2cb19680217df3a243617c2838185ad06919050565b60405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610eb3565b919050565b612919613885565b6129216138a3565b612929613885565b50506040805180820182528351815260208085015181830152825160808082018552868501518286019081526060808901519084015282528451808601865290870151815260a08701518184015281830152835180850190945260c0860151845260e0909501519083015293909150565b600354600090640100000000900463ffffffff166129d97f0000000000000000000000000000000000000000000000000000000000000000600261482c565b63ffffffff168163ffffffff161415612a4d5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610eb3565b8083600080805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015612b3657612a93600286614a22565b63ffffffff16612ace57839250612aaf8163ffffffff166122d1565b63ffffffff821660009081526001602052604090208590559150612aea565b63ffffffff811660009081526001602052604090205492508391505b612b157f00000000000000000000000000000000000000000000000000000000000000008484611c76565b9350612b226002866147c4565b945080612b2e816149ea565b915050612a54565b50600354600090601e90612b519063ffffffff166001614777565b612b5b9190614a22565b6003805463ffffffff191663ffffffff831690811790915560009081526002602052604090208590559050612b91866001614777565b6003805463ffffffff929092166401000000000267ffffffff000000001990921691909117905550939695505050505050565b6000805b836040015151811015612c6357612c0b84604001518281518110612bee57612bee614a8e565b60200260200101516000908152600c602052604090205460ff1690565b15612c515760405162461bcd60e51b8152602060048201526016602482015275125b9c1d5d081a5cc8185b1c9958591e481cdc195b9d60521b6044820152606401610eb3565b80612c5b816149cf565b915050612bc8565b50600080516020614ad083398151915282604051602001612c84919061456b565b6040516020818303038152906040528051906020012060001c612ca79190614a0e565b60a084015114612cf95760405162461bcd60e51b815260206004820152601c60248201527f496e636f72726563742065787465726e616c20646174612068617368000000006044820152606401610eb3565b612d0b82602001518360600151610e74565b836080015114612d555760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1d589b1a58c8185b5bdd5b9d605a1b6044820152606401610eb3565b612d5e836131e5565b612da65760405162461bcd60e51b815260206004820152601960248201527824b73b30b634b2103a3930b739b0b1ba34b7b710383937b7b360391b6044820152606401610eb3565b60005b836040015151811015612147576001600c600086604001518481518110612dd257612dd2614a8e565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080612e0a906149cf565b915050612da9565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015612e7457600080fd5b505afa158015612e88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eac91906141f1565b9050811561119057818110612eef576111906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846134a4565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b158015610dc457600080fd5b6060820151612f6f9060005b6020020151610f62565b506060820151612f80906001612f65565b506060820151516003547ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd9190612fc790600290640100000000900463ffffffff1661495e565b8360800151604051612fdb93929190614427565b60405180910390a160608201517ff3843eddcfcac65d12d9f26261dab50671fdbf5dc44441816c8bbdace2411afd906001602002015160035461302e90600190640100000000900463ffffffff1661495e565b8360a0015160405161304293929190614427565b60405180910390a160005b826040015151811015611190577f5e58f77bbf94b46d8d896e29753e4458c6e59b48581e20ed58c9558e96f297ce8360400151828151811061309157613091614a8e565b60200260200101516040516130a891815260200190565b60405180910390a1806130ba816149cf565b91505061304d565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561312457600080fd5b505afa158015613138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061315c91906141f1565b9050818110612eef576111906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846134a4565b80600001516001600160a01b03167f2c1ca5c14df2aba59d26842c5ff53f6817052ef34f6f7537f8b4c9e3805a5e5082602001516040516131da9190614455565b60405180910390a250565b6000816040015151600214156133495760008073__$c855d983235a063579a323068f4c8734f9$__63416e8491857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016132519291906145d8565b60006040518083038186803b15801561326957600080fd5b505af415801561327d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132a59190810190613e6d565b915091506132b281611830565b6132ee5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610eb3565b83516132fa90836134f6565b6133425760405162461bcd60e51b815260206004820152601960248201527824b73b30b634b2103a3930b739b0b1ba34b7b710383937b7b360391b6044820152606401610eb3565b5050919050565b8160400151516010141561345c5760008073__$c855d983235a063579a323068f4c8734f9$__637dc45e3f857f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016133b39291906145d8565b60006040518083038186803b1580156133cb57600080fd5b505af41580156133df573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526134079190810190613e6d565b9150915061341481611830565b6134505760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726f6f747360981b6044820152606401610eb3565b83516132fa9083613620565b60405162461bcd60e51b815260206004820152601760248201527f756e737570706f7274656420696e70757420636f756e740000000000000000006044820152606401610eb3565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526111909084906136a8565b6000808380602001905181019061350d9190613dd1565b9050600080600061351d84612911565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca539061357e908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906001906004016143cb565b60206040518083038186803b15801561359657600080fd5b505afa1580156135aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135ce9190613e32565b9450846136165760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b6044820152606401610eb3565b5050505092915050565b600080838060200190518101906136379190613dd1565b9050600080600061364784612911565b600b54604051638041ca5360e01b815293965091945092506001600160a01b031690638041ca539061357e908690869086908c907f0000000000000000000000000000000000000000000000000000000000000000906000906004016143cb565b60006136fd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661377a9092919063ffffffff16565b805190915015611190578080602001905181019061371b9190613e32565b6111905760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610eb3565b6060610f5a848460008585843b6137d35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610eb3565b600080866001600160a01b031685876040516137ef91906142d6565b60006040518083038185875af1925050503d806000811461382c576040519150601f19603f3d011682016040523d82523d6000602084013e613831565b606091505b509150915061384182828661384c565b979650505050505050565b6060831561385b575081611dd2565b82511561386b5782518084602001fd5b8160405162461bcd60e51b8152600401610eb39190614455565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b6138ba613885565b8152602001906001900390816138b25790505090565b803561290c81614aba565b600082601f8301126138ec57600080fd5b604051604081018181106001600160401b038211171561390e5761390e614aa4565b806040525080838560408601111561392557600080fd5b60005b6002811015613947578135835260209283019290910190600101613928565b509195945050505050565b600082601f83011261396357600080fd5b8135602061397861397383614715565b6146e5565b80838252828201915082860187848660051b890101111561399857600080fd5b60005b858110156139b75781358452928401929084019060010161399b565b5090979650505050505050565b600082601f8301126139d557600080fd5b81356139e361397382614738565b8181528460208386010111156139f857600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215613a2757600080fd5b604051604081016001600160401b038282108183111715613a4a57613a4a614aa4565b8160405282935084359150613a5e82614aba565b90825260208401359080821115613a7457600080fd5b50613a81858286016139c4565b6020830152505092915050565b600060c08284031215613aa057600080fd5b613aa861469a565b9050613ab3826138d0565b815260208201356020820152613acb604083016138d0565b60408201526060820135606082015260808201356001600160401b0380821115613af457600080fd5b613b00858386016139c4565b608084015260a0840135915080821115613b1957600080fd5b50613b26848285016139c4565b60a08301525092915050565b600060e08284031215613b4457600080fd5b613b4c61469a565b905081356001600160401b0380821115613b6557600080fd5b613b71858386016139c4565b83526020840135915080821115613b8757600080fd5b613b93858386016139c4565b60208401526040840135915080821115613bac57600080fd5b50613bb984828501613952565b604083015250613bcc83606084016138db565b606082015260a0820135608082015260c082013560a082015292915050565b803563ffffffff8116811461290c57600080fd5b600060208284031215613c1157600080fd5b8135610f5881614aba565b600080600060608486031215613c3157600080fd5b8335613c3c81614aba565b92506020840135613c4c81614aba565b929592945050506040919091013590565b60008060408385031215613c7057600080fd5b8235613c7b81614aba565b946020939093013593505050565b60008060408385031215613c9c57600080fd5b8235613ca781614aba565b9150613cb560208401613beb565b90509250929050565b60008060208385031215613cd157600080fd5b82356001600160401b0380821115613ce857600080fd5b818501915085601f830112613cfc57600080fd5b813581811115613d0b57600080fd5b8660208260051b8501011115613d2057600080fd5b60209290920196919550909350505050565b600060208284031215613d4457600080fd5b81356001600160401b03811115613d5a57600080fd5b610f5a84828501613952565b6000610100808385031215613d7a57600080fd5b83601f840112613d8957600080fd5b613d916146c2565b8084868487011115613da257600080fd5b600093505b6008841015613dc757803583526001939093019260209283019201613da7565b5095945050505050565b6000610100808385031215613de557600080fd5b83601f840112613df457600080fd5b613dfc6146c2565b8084868487011115613e0d57600080fd5b600093505b6008841015613dc757805183526001939093019260209283019201613e12565b600060208284031215613e4457600080fd5b81518015158114610f5857600080fd5b600060208284031215613e6657600080fd5b5035919050565b60008060408385031215613e8057600080fd5b82516001600160401b0380821115613e9757600080fd5b818501915085601f830112613eab57600080fd5b81516020613ebb61397383614738565b8281528882848701011115613ecf57600080fd5b613ede83838301848801614983565b87820151909650935082841115613ef457600080fd5b838701935087601f850112613f0857600080fd5b83519250613f1861397384614715565b8381528181019250848201600585901b860183018a1015613f3857600080fd5b600095505b84861015613f5b578051845260019590950194928201928201613f3d565b5080955050505050509250929050565b600080600060608486031215613f8057600080fd5b8335613f8b81614aba565b95602085013595506040909401359392505050565b60008060408385031215613fb357600080fd5b50508035926020909101359150565b600060208284031215613fd457600080fd5b81356001600160401b03811115613fea57600080fd5b610f5a84828501613a15565b60008060006060848603121561400b57600080fd5b83356001600160401b038082111561402257600080fd5b61402e87838801613a15565b9450602086013591508082111561404457600080fd5b61405087838801613b32565b9350604086013591508082111561406657600080fd5b5061407386828701613a8e565b9150509250925092565b6000806000806080858703121561409357600080fd5b84356001600160401b03808211156140aa57600080fd5b6140b688838901613a15565b955060208701359150808211156140cc57600080fd5b6140d888838901613b32565b945060408701359150808211156140ee57600080fd5b506140fb87828801613a8e565b925050606085013561410c81614aba565b939692955090935050565b6000806040838503121561412a57600080fd5b82356001600160401b038082111561414157600080fd5b61414d86838701613b32565b9350602085013591508082111561416357600080fd5b5061417085828601613a8e565b9150509250929050565b60008060006060848603121561418f57600080fd5b83356001600160401b03808211156141a657600080fd5b6141b287838801613b32565b945060208601359150808211156141c857600080fd5b506141d586828701613a8e565b92505060408401356141e681614aba565b809150509250925092565b60006020828403121561420357600080fd5b5051919050565b60008060006060848603121561421f57600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561424957600080fd5b82359150613cb560208401613beb565b8060005b60028110156121c757614271848351614287565b604093909301926020919091019060010161425d565b8060005b60028110156121c757815184526020938401939091019060010161428b565b600081518084526142c2816020860160208601614983565b601f01601f19169290920160200192915050565b600082516142e8818460208701614983565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252825182820181905260009190848201906040850190845b81811015614350578351151583529284019291840191600101614332565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561435057835183529284019291840191600101614378565b60408101610bd78284614287565b61010081016143b18286614287565b6143be6040830185614259565b610f5a60c0830184614287565b60006101606143da838a614287565b6143e76040840189614259565b6143f460c0840188614287565b80610100840152614407818401876142aa565b60ff95909516610120840152505090151561014090910152949350505050565b83815263ffffffff8316602082015260606040820152600061444c60608301846142aa565b95945050505050565b602081526000611dd260208301846142aa565b6020808252602b908201527f616d6f756e74206973206c657373207468616e206d696e696d616c576974686460408201526a1c985dd85b105b5bdd5b9d60aa1b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602a908201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706040820152691bdcda5d105b5bdd5b9d60b21b606082015260800190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b60208152600060018060a01b03808451166020840152602084015160408401528060408501511660608401525060608301516080830152608083015160c060a08401526145bb60e08401826142aa565b905060a0840151601f198483030160c085015261444c82826142aa565b604081526000835160e060408401526145f56101208401826142aa565b9050602080860151603f198086850301606087015261461484836142aa565b6040890151878203909201608088015281518082529184019450600092508301905b808310156146565784518252938301936001929092019190830190614636565b506060880151935061466b60a0870185614287565b608088015160e087015260a088015161010087015260ff87168387015293506146919050565b50509392505050565b60405160c081016001600160401b03811182821017156146bc576146bc614aa4565b60405290565b60405161010081016001600160401b03811182821017156146bc576146bc614aa4565b604051601f8201601f191681016001600160401b038111828210171561470d5761470d614aa4565b604052919050565b60006001600160401b0382111561472e5761472e614aa4565b5060051b60200190565b60006001600160401b0382111561475157614751614aa4565b50601f01601f191660200190565b6000821982111561477257614772614a62565b500190565b600063ffffffff80831681851680830382111561479657614796614a62565b01949350505050565b600060ff821660ff84168060ff038211156147bc576147bc614a62565b019392505050565b600063ffffffff808416806147db576147db614a78565b92169190910492915050565b600181815b80851115614824578163ffffffff0482111561480a5761480a614a62565b8085161561481757918102915b93841c93908002906147ec565b509250929050565b600063ffffffff610f5a81851682851660008261484b57506001610bd7565b8161485857506000610bd7565b816001811461486e5760028114614878576148a9565b6001915050610bd7565b60ff84111561488957614889614a62565b6001841b915063ffffffff8211156148a3576148a3614a62565b50610bd7565b5060208310610133831016604e8410600b84101617156148e0575081810a63ffffffff8111156148db576148db614a62565b610bd7565b6148ea83836147e7565b8063ffffffff0482111561490057614900614a62565b029392505050565b60008083128015600160ff1b85018412161561492657614926614a62565b6001600160ff1b038401831381161561494157614941614a62565b50500390565b60008282101561495957614959614a62565b500390565b600063ffffffff8381169083168181101561497b5761497b614a62565b039392505050565b60005b8381101561499e578181015183820152602001614986565b838111156121c75750506000910152565b600063ffffffff8216806149c5576149c5614a62565b6000190192915050565b60006000198214156149e3576149e3614a62565b5060010190565b600063ffffffff80831681811415614a0457614a04614a62565b6001019392505050565b600082614a1d57614a1d614a78565b500690565b600063ffffffff80841680614a3957614a39614a78565b92169190910692915050565b6000600160ff1b821415614a5b57614a5b614a62565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146121b057600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220562c22a4bb46a556bfdbe08c5a03b52de6f59b1979609db2dbe03f4ffab92b7564736f6c63430008050033";

type VAnchorConstructorParams =
  | [linkLibraryAddresses: VAnchorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VAnchorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class VAnchor__factory extends ContractFactory {
  constructor(...args: VAnchorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, VAnchor__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: VAnchorLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c855d983235a063579a323068f4c8734f9\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VAnchor> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    ) as Promise<VAnchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      _handler,
      _token,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): VAnchor {
    return super.attach(address) as VAnchor;
  }
  connect(signer: Signer): VAnchor__factory {
    return super.connect(signer) as VAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VAnchorInterface {
    return new utils.Interface(_abi) as VAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VAnchor {
    return new Contract(address, _abi, signerOrProvider) as VAnchor;
  }
}

export interface VAnchorLibraryAddresses {
  ["contracts/libs/VAnchorEncodeInputs.sol:VAnchorEncodeInputs"]: string;
}
