/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AnchorHandler, AnchorHandlerInterface } from "../AnchorHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "initialResourceIDs",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "initialContractAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_counts",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_updateRecords",
    outputs: [
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_leafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "updateNonce",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "sourceChainId",
        type: "uint256",
      },
    ],
    name: "getUpdateRecord",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "functionSig",
            type: "bytes4",
          },
          {
            internalType: "address",
            name: "_tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_sourceChainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "_resourceID",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "_merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "_leafIndex",
            type: "uint256",
          },
        ],
        internalType: "struct AnchorHandler.UpdateRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e0c38038062000e0c8339810160408190526200003491620001f1565b8051825114620000615760405162461bcd60e51b81526004016200005890620002ca565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0385161781555b8251811015620000fe57620000e9838281518110620000ac57634e487b7160e01b600052603260045260246000fd5b6020026020010151838381518110620000d557634e487b7160e01b600052603260045260246000fd5b60200260200101516200010860201b60201c565b80620000f58162000379565b9150506200007d565b50505050620003b7565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b80516001600160a01b03811681146200016f57600080fd5b919050565b600082601f83011262000185578081fd5b815160206200019e620001988362000353565b62000327565b8281528181019085830183850287018401881015620001bb578586fd5b855b85811015620001e457620001d18262000157565b84529284019290840190600101620001bd565b5090979650505050505050565b60008060006060848603121562000206578283fd5b620002118462000157565b602085810151919450906001600160401b038082111562000230578485fd5b818701915087601f83011262000244578485fd5b815162000255620001988262000353565b81815284810190848601868402860187018c101562000272578889fd5b8895505b838610156200029657805183526001959095019491860191860162000276565b5060408a01519097509450505080831115620002b0578384fd5b5050620002c08682870162000174565b9150509250925092565b6020808252603c908201527f696e697469616c5265736f7572636549447320616e6420696e697469616c436f60408201527f6e7472616374416464726573736573206c656e206d69736d6174636800000000606082015260800190565b6040518181016001600160401b03811182821017156200034b576200034b620003a1565b604052919050565b60006001600160401b038211156200036f576200036f620003a1565b5060209081020190565b60006000198214156200039a57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b610a4580620003c76000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c54c2a1111610066578063c54c2a1114610110578063d75a068314610123578063e07384a814610143578063e248cff214610163578063ec97d3b41461017657610093565b80630c9e9e1414610098578063318c136e146100c65780637f79bea8146100db578063b8fa3736146100fb575b600080fd5b6100ab6100a63660046107f4565b610196565b6040516100bd96959493929190610874565b60405180910390f35b6100ce6101e5565b6040516100bd919061084c565b6100ee6100e93660046106b3565b6101f4565b6040516100bd9190610860565b61010e61010936600461070c565b610209565b005b6100ce61011e3660046106f4565b61021f565b6101366101313660046106f4565b61023a565b6040516100bd91906109c6565b610156610151366004610815565b610256565b6040516100bd919061095e565b61010e610171366004610737565b6102e5565b6101896101843660046106b3565b6105d5565b6040516100bd919061086b565b600460208181526000938452604080852090915291835291208054600182015460028301546003840154939094015460e083901b946401000000009093046001600160a01b0316939192919086565b6000546001600160a01b031681565b60036020526000908152604090205460ff1681565b6102116105e7565b61021b8282610613565b5050565b6001602052600090815260409020546001600160a01b031681565b60056020526000908152604090205467ffffffffffffffff1681565b61025e610662565b50600081815260046020818152604080842067ffffffffffffffff87168552825292839020835160c08101855281546001600160e01b031960e082901b1682526001600160a01b036401000000009091041692810192909252600181015493820193909352600283015460608201526003830154608082015291015460a082015292915050565b6102ed6105e7565b60008080806102fe858701876107ae565b60008b8152600160209081526040808320546001600160a01b031680845260039092529091205494985092965090945092509060ff166103595760405162461bcd60e51b815260040161035090610916565b60405180910390fd5b6001600160e01b031985166344347ba960e01b146103895760405162461bcd60e51b8152600401610350906108e8565b604051639215631160e01b815281906001600160a01b038216906392156311906103b790889060040161086b565b60206040518083038186803b1580156103cf57600080fd5b505afa1580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040791906106d4565b15610473576040516344347ba960e01b81526001600160a01b038216906344347ba99061043c908890879089906004016109b0565b600060405180830381600087803b15801561045657600080fd5b505af115801561046a573d6000803e3d6000fd5b505050506104d6565b604051631dcf226f60e11b81526001600160a01b03821690633b9e44de906104a3908890879089906004016109b0565b600060405180830381600087803b1580156104bd57600080fd5b505af11580156104d1573d6000803e3d6000fd5b505050505b6000858152600560205260408120805482906104fb9067ffffffffffffffff166109db565b825467ffffffffffffffff9182166101009390930a83810292021916179091556040805160c0810182526001600160e01b031990991689526001600160a01b039485166020808b019182528a83018a815260608c019e8f5260808c0198895260a08c01998a5260009a8b526004808352848c20958c52949091529190982098518954985190951664010000000002640100000000600160c01b031960e09690961c63ffffffff1990991698909817949094169690961787555050516001850155955160028401559451600383015593519301929092555050565b60026020526000908152604090205481565b6000546001600160a01b031633146106115760405162461bcd60e51b8152600401610350906108b1565b565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b80356001600160a01b03811681146106ae57600080fd5b919050565b6000602082840312156106c4578081fd5b6106cd82610697565b9392505050565b6000602082840312156106e5578081fd5b815180151581146106cd578182fd5b600060208284031215610705578081fd5b5035919050565b6000806040838503121561071e578081fd5b8235915061072e60208401610697565b90509250929050565b60008060006040848603121561074b578081fd5b83359250602084013567ffffffffffffffff80821115610769578283fd5b818601915086601f83011261077c578283fd5b81358181111561078a578384fd5b87602082850101111561079b578384fd5b6020830194508093505050509250925092565b600080600080608085870312156107c3578081fd5b84356001600160e01b0319811681146107da578182fd5b966020860135965060408601359560600135945092505050565b60008060408385031215610806578182fd5b50508035926020909101359150565b60008060408385031215610827578182fd5b823567ffffffffffffffff8116811461083e578283fd5b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b6001600160e01b03199690961686526001600160a01b0394909416602086015260408501929092526060840152608083015260a082015260c00190565b6020808252601e908201527f73656e646572206d7573742062652062726964676520636f6e74726163740000604082015260600190565b602080825260149082015273496e76616c69642066756e6374696f6e2073696760601b604082015260600190565b60208082526028908201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696040820152671d195b1a5cdd195960c21b606082015260800190565b81516001600160e01b03191681526020808301516001600160a01b03169082015260408083015190820152606080830151908201526080808301519082015260a0918201519181019190915260c00190565b9283526020830191909152604082015260600190565b67ffffffffffffffff91909116815260200190565b600067ffffffffffffffff80831681811415610a0557634e487b7160e01b83526011600452602483fd5b600101939250505056fea2646970667358221220478a479e9bdd0a7557edba12645d67f2eb7da1031bef90d46945e7522ae1a5ca64736f6c63430008000033";

export class AnchorHandler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AnchorHandler> {
    return super.deploy(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      overrides || {}
    ) as Promise<AnchorHandler>;
  }
  getDeployTransaction(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      overrides || {}
    );
  }
  attach(address: string): AnchorHandler {
    return super.attach(address) as AnchorHandler;
  }
  connect(signer: Signer): AnchorHandler__factory {
    return super.connect(signer) as AnchorHandler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnchorHandlerInterface {
    return new utils.Interface(_abi) as AnchorHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnchorHandler {
    return new Contract(address, _abi, signerOrProvider) as AnchorHandler;
  }
}
