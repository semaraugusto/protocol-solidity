/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AnchorHandler, AnchorHandlerInterface } from "../AnchorHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "initialResourceIDs",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "initialContractAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_counts",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_updateRecords",
    outputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sourceChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_leafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "updateNonce",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "sourceChainId",
        type: "uint256",
      },
    ],
    name: "getUpdateRecord",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_sourceChainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "_resourceID",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "_merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "_leafIndex",
            type: "uint256",
          },
        ],
        internalType: "struct AnchorHandler.UpdateRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newBridge",
        type: "address",
      },
    ],
    name: "migrateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d6738038062000d678339810160408190526200003491620001f1565b8051825114620000615760405162461bcd60e51b81526004016200005890620002ca565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0385161781555b8251811015620000fe57620000e9838281518110620000ac57634e487b7160e01b600052603260045260246000fd5b6020026020010151838381518110620000d557634e487b7160e01b600052603260045260246000fd5b60200260200101516200010860201b60201c565b80620000f58162000379565b9150506200007d565b50505050620003b7565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b80516001600160a01b03811681146200016f57600080fd5b919050565b600082601f83011262000185578081fd5b815160206200019e620001988362000353565b62000327565b8281528181019085830183850287018401881015620001bb578586fd5b855b85811015620001e457620001d18262000157565b84529284019290840190600101620001bd565b5090979650505050505050565b60008060006060848603121562000206578283fd5b620002118462000157565b602085810151919450906001600160401b038082111562000230578485fd5b818701915087601f83011262000244578485fd5b815162000255620001988262000353565b81815284810190848601868402860187018c101562000272578889fd5b8895505b838610156200029657805183526001959095019491860191860162000276565b5060408a01519097509450505080831115620002b0578384fd5b5050620002c08682870162000174565b9150509250925092565b6020808252603c908201527f696e697469616c5265736f7572636549447320616e6420696e697469616c436f60408201527f6e7472616374416464726573736573206c656e206d69736d6174636800000000606082015260800190565b6040518181016001600160401b03811182821017156200034b576200034b620003a1565b604052919050565b60006001600160401b038211156200036f576200036f620003a1565b5060209081020190565b60006000198214156200039a57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6109a080620003c76000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063d75a068311610066578063d75a06831461012d578063d7f5b3591461014d578063e07384a814610160578063e248cff214610180578063ec97d3b4146101935761009e565b80630c9e9e14146100a3578063318c136e146100d05780637f79bea8146100e5578063b8fa373614610105578063c54c2a111461011a575b600080fd5b6100b66100b136600461074b565b6101b3565b6040516100c79594939291906107e4565b60405180910390f35b6100d86101f5565b6040516100c791906107d0565b6100f86100f3366004610590565b610204565b6040516100c79190610812565b6101186101133660046105e7565b610219565b005b6100d86101283660046105cf565b61022f565b61014061013b3660046105cf565b61024a565b6040516100c79190610927565b61011861015b366004610590565b610266565b61017361016e366004610799565b610290565b6040516100c791906108d3565b61011861018e366004610616565b610302565b6101a66101a1366004610590565b6104d5565b6040516100c7919061081d565b60046020818152600093845260408085209091529183529120805460018201546002830154600384015493909401546001600160a01b03909216939092909185565b6000546001600160a01b031681565b60036020526000908152604090205460ff1681565b6102216104e7565b61022b8282610513565b5050565b6001602052600090815260409020546001600160a01b031681565b60056020526000908152604090205467ffffffffffffffff1681565b61026e6104e7565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b610298610562565b50600081815260046020818152604080842067ffffffffffffffff87168552825292839020835160a08101855281546001600160a01b0316815260018201549281019290925260028101549382019390935260038301546060820152910154608082015292915050565b61030a6104e7565b60008080606061031c8587018761068d565b60008b8152600160209081526040808320546001600160a01b031680845260039092529091205494985092965090945092509060ff166103775760405162461bcd60e51b815260040161036e9061088b565b60405180910390fd5b806001600160e01b03198416630bac426d60e41b141561040e576000838060200190518101906103a791906105b3565b604051630bac426d60e41b81529091506001600160a01b0383169063bac426d0906103d69084906004016107d0565b600060405180830381600087803b1580156103f057600080fd5b505af1158015610404573d6000803e3d6000fd5b50505050506104ca565b6001600160e01b031984166344347ba960e01b14156104b257600080600085806020019051810190610440919061076c565b6040516344347ba960e01b815292955090935091506001600160a01b038516906344347ba99061047890869085908790600401610911565b600060405180830381600087803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b505050505050506104ca565b60405162461bcd60e51b815260040161036e9061085d565b505050505050505050565b60026020526000908152604090205481565b6000546001600160a01b031633146105115760405162461bcd60e51b815260040161036e90610826565b565b600082815260016020818152604080842080546001600160a01b039096166001600160a01b0319909616861790559383526002815283832094909455600390935220805460ff19169091179055565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b6000602082840312156105a1578081fd5b81356105ac81610952565b9392505050565b6000602082840312156105c4578081fd5b81516105ac81610952565b6000602082840312156105e0578081fd5b5035919050565b600080604083850312156105f9578081fd5b82359150602083013561060b81610952565b809150509250929050565b60008060006040848603121561062a578081fd5b83359250602084013567ffffffffffffffff80821115610648578283fd5b818601915086601f83011261065b578283fd5b813581811115610669578384fd5b87602082850101111561067a578384fd5b6020830194508093505050509250925092565b600080600080608085870312156106a2578081fd5b84359350602080860135935060408601359250606086013567ffffffffffffffff808211156106cf578384fd5b818801915088601f8301126106e2578384fd5b8135818111156106f4576106f461093c565b604051601f8201601f19168101850183811182821017156107175761071761093c565b60405281815283820185018b101561072d578586fd5b81858501868301379081019093019390935250939692955090935050565b6000806040838503121561075d578182fd5b50508035926020909101359150565b600080600060608486031215610780578283fd5b8351925060208401519150604084015190509250925092565b600080604083850312156107ab578182fd5b823567ffffffffffffffff811681146107c2578283fd5b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160a01b03959095168552602085019390935260408401919091526060830152608082015260a00190565b901515815260200190565b90815260200190565b6020808252601e908201527f73656e646572206d7573742062652062726964676520636f6e74726163740000604082015260600190565b602080825260149082015273496e76616c69642066756e6374696f6e2073696760601b604082015260600190565b60208082526028908201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696040820152671d195b1a5cdd195960c21b606082015260800190565b81516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080918201519181019190915260a00190565b9283526020830191909152604082015260600190565b67ffffffffffffffff91909116815260200190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461096757600080fd5b5056fea26469706673582212205003fcf189507341389076b95e30eb4736fe43c39c93a3422b9b05fdfe61fc9764736f6c63430008000033";

export class AnchorHandler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AnchorHandler> {
    return super.deploy(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      overrides || {}
    ) as Promise<AnchorHandler>;
  }
  getDeployTransaction(
    bridgeAddress: string,
    initialResourceIDs: BytesLike[],
    initialContractAddresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bridgeAddress,
      initialResourceIDs,
      initialContractAddresses,
      overrides || {}
    );
  }
  attach(address: string): AnchorHandler {
    return super.attach(address) as AnchorHandler;
  }
  connect(signer: Signer): AnchorHandler__factory {
    return super.connect(signer) as AnchorHandler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnchorHandlerInterface {
    return new utils.Interface(_abi) as AnchorHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnchorHandler {
    return new Contract(address, _abi, signerOrProvider) as AnchorHandler;
  }
}
