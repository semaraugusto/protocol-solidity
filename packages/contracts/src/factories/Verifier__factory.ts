/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Verifier, VerifierInterface } from "../Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier2",
        name: "_verifier2",
        type: "address",
      },
      {
        internalType: "contract IVerifier3",
        name: "_verifier3",
        type: "address",
      },
      {
        internalType: "contract IVerifier4",
        name: "_verifier4",
        type: "address",
      },
      {
        internalType: "contract IVerifier5",
        name: "_verifier5",
        type: "address",
      },
      {
        internalType: "contract IVerifier6",
        name: "_verifier6",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "v2",
    outputs: [
      {
        internalType: "contract IVerifier2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v3",
    outputs: [
      {
        internalType: "contract IVerifier3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v4",
    outputs: [
      {
        internalType: "contract IVerifier4",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v5",
    outputs: [
      {
        internalType: "contract IVerifier5",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v6",
    outputs: [
      {
        internalType: "contract IVerifier6",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "maxEdges",
        type: "uint8",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b32380380610b3283398101604081905261002f91610091565b600080546001600160a01b03199081166001600160a01b0397881617909155600180548216958716959095179094556002805485169386169390931790925560038054841691851691909117905560048054909216921691909117905561011e565b600080600080600060a086880312156100a957600080fd5b85516100b481610106565b60208701519095506100c581610106565b60408701519094506100d681610106565b60608701519093506100e781610106565b60808701519092506100f881610106565b809150509295509295909350565b6001600160a01b038116811461011b57600080fd5b50565b610a058061012d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309c5e7061461006757806331473ebe146100975780636257a38e146100aa578063b4b764f2146100bd578063bfa57503146100e0578063f3acae3a146100f3575b600080fd5b60045461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60035461007a906001600160a01b031681565b60015461007a906001600160a01b031681565b6100d06100cb36600461061c565b610106565b604051901515815260200161008e565b60025461007a906001600160a01b031681565b60005461007a906001600160a01b031681565b60008160ff16600114156101b95760008380602001905181019061012a91906106f1565b60005460405163c542c93b60e01b81529192506001600160a01b03169063c542c93b90610161908a908a908a90879060040161093f565b60206040518083038186803b15801561017957600080fd5b505afa15801561018d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b1919061076f565b915050610320565b8160ff1660021415610212576000838060200190518101906101db9190610424565b6001546040516379ddb87b60e11b81529192506001600160a01b03169063f3bb70f690610161908a908a908a9087906004016107ef565b8160ff166003141561026b5760008380602001905181019061023491906104a2565b60025460405163b9c6ea8760e01b81529192506001600160a01b03169063b9c6ea8790610161908a908a908a90879060040161084c565b8160ff16600414156102c45760008380602001905181019061028d9190610520565b60035460405163465d607d60e11b81529192506001600160a01b031690638cbac0fa90610161908a908a908a90879060040161089d565b8160ff166005141561031c576000838060200190518101906102e6919061059e565b600480546040516378a1d3af60e11b81529293506001600160a01b03169163f143a75e91610161918b918b918b918891016108ee565b5060005b95945050505050565b600082601f83011261033a57600080fd5b610342610990565b80838560408601111561035457600080fd5b60005b6002811015610376578135845260209384019390910190600101610357565b509095945050505050565b600082601f83011261039257600080fd5b813567ffffffffffffffff808211156103ad576103ad6109b9565b604051601f8301601f19908116603f011681019082821181831017156103d5576103d56109b9565b816040528381528660208588010111156103ee57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461041f57600080fd5b919050565b600061014080838503121561043857600080fd5b83601f84011261044757600080fd5b60405181810181811067ffffffffffffffff82111715610469576104696109b9565b604052808483810187101561047d57600080fd5b600093505b600a84101561037657805182526001939093019260209182019101610482565b60006101608083850312156104b657600080fd5b83601f8401126104c557600080fd5b60405181810181811067ffffffffffffffff821117156104e7576104e76109b9565b60405280848381018710156104fb57600080fd5b600093505b600b84101561037657805182526001939093019260209182019101610500565b600061018080838503121561053457600080fd5b83601f84011261054357600080fd5b60405181810181811067ffffffffffffffff82111715610565576105656109b9565b604052808483810187101561057957600080fd5b600093505b600c8410156103765780518252600193909301926020918201910161057e565b60006101a08083850312156105b257600080fd5b83601f8401126105c157600080fd5b60405181810181811067ffffffffffffffff821117156105e3576105e36109b9565b60405280848381018710156105f757600080fd5b600093505b600d841015610376578051825260019390930192602091820191016105fc565b6000806000806000610140868803121561063557600080fd5b61063f8787610329565b9450604087605f88011261065257600080fd5b61065a610990565b8082890160c08a018b81111561066f57600080fd5b60005b6002811015610699576106858d84610329565b855260209094019391850191600101610672565b508298506106a78c82610329565b9750505050505061010086013567ffffffffffffffff8111156106c957600080fd5b6106d588828901610381565b9250506106e5610120870161040e565b90509295509295909350565b600061012080838503121561070557600080fd5b83601f84011261071457600080fd5b60405181810181811067ffffffffffffffff82111715610736576107366109b9565b604052808483810187101561074a57600080fd5b600093505b60098410156103765780518252600193909301926020918201910161074f565b60006020828403121561078157600080fd5b8151801515811461079157600080fd5b9392505050565b8060005b60028110156107c6576107b08483516107cc565b604093909301926020919091019060010161079c565b50505050565b8060005b60028110156107c65781518452602093840193909101906001016107d0565b61024081016107fe82876107cc565b61080b6040830186610798565b61081860c08301856107cc565b61010082018360005b600a811015610840578151835260209283019290910190600101610821565b50505095945050505050565b610260810161085b82876107cc565b6108686040830186610798565b61087560c08301856107cc565b61010082018360005b600b81101561084057815183526020928301929091019060010161087e565b61028081016108ac82876107cc565b6108b96040830186610798565b6108c660c08301856107cc565b61010082018360005b600c8110156108405781518352602092830192909101906001016108cf565b6102a081016108fd82876107cc565b61090a6040830186610798565b61091760c08301856107cc565b61010082018360005b600d811015610840578151835260209283019290910190600101610920565b610220810161094e82876107cc565b61095b6040830186610798565b61096860c08301856107cc565b61010082018360005b6009811015610840578151835260209283019290910190600101610971565b6040805190810167ffffffffffffffff811182821017156109b3576109b36109b9565b60405290565b634e487b7160e01b600052604160045260246000fdfea264697066735822122088dc9800b6daea67196f5146d3ffc78045de3e553624d9678da71646b8d058c264736f6c63430008050033";

export class Verifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _verifier2: string,
    _verifier3: string,
    _verifier4: string,
    _verifier5: string,
    _verifier6: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Verifier> {
    return super.deploy(
      _verifier2,
      _verifier3,
      _verifier4,
      _verifier5,
      _verifier6,
      overrides || {}
    ) as Promise<Verifier>;
  }
  getDeployTransaction(
    _verifier2: string,
    _verifier3: string,
    _verifier4: string,
    _verifier5: string,
    _verifier6: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier2,
      _verifier3,
      _verifier4,
      _verifier5,
      _verifier6,
      overrides || {}
    );
  }
  attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
