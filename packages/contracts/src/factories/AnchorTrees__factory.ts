/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AnchorTrees, AnchorTreesInterface } from "../AnchorTrees";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
      {
        internalType: "contract IAnchorTreesV1",
        name: "_anchorTreesV1",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "depositsFrom",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositsStep",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawalsFrom",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawalsStep",
            type: "uint256",
          },
        ],
        internalType: "struct AnchorTrees.SearchParams",
        name: "_searchParams",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "_maxEdges",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "instance",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "DepositData",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "withdrawalRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "withdrawalRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newProxy",
        type: "address",
      },
    ],
    name: "ProxyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newVerifier",
        type: "address",
      },
    ],
    name: "VerifierUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "instance",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "WithdrawalData",
    type: "event",
  },
  {
    inputs: [],
    name: "BYTES_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHUNK_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHUNK_TREE_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ITEM_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNARK_FIELD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anchorProxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anchorTreesV1",
    outputs: [
      {
        internalType: "contract IAnchorTreesV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentDepositRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborDepositRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborWithdrawalRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWithdrawalRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "depositRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositsV1Length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "depositRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "withdrawalRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAnchorTreesV1",
        name: "_anchorTreesV1",
        type: "address",
      },
      {
        internalType: "string",
        name: "_type",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "elementExists",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "depositRoots",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "withdrawalRoots",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_anchorProxy",
        type: "address",
      },
      {
        internalType: "contract IBatchTreeUpdateVerifier",
        name: "_treeUpdateVerifier",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_depositRoot",
        type: "bytes32",
      },
    ],
    name: "isKnownDepositRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_depositRoot",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborDepositRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_withdrawalRoot",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborWithdrawalRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_withdrawalRoot",
        type: "bytes32",
      },
    ],
    name: "isKnownWithdrawalRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProcessedDepositLeaf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProcessedWithdrawalLeaf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxEdges",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborDepositRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborWithdrawalRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_instance",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "registerDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_instance",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "registerWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_anchorProxy",
        type: "address",
      },
    ],
    name: "setAnchorProxyContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBatchTreeUpdateVerifier",
        name: "_treeUpdateVerifier",
        type: "address",
      },
    ],
    name: "setVerifierContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treeUpdateVerifier",
    outputs: [
      {
        internalType: "contract IBatchTreeUpdateVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_argsHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_currentRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_pathIndices",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "instance",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "blockTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct AnchorTrees.TreeLeaf[256]",
        name: "_events",
        type: "tuple[256]",
      },
    ],
    name: "updateDepositTree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_argsHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_currentRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_pathIndices",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "instance",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "blockTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct AnchorTrees.TreeLeaf[256]",
        name: "_events",
        type: "tuple[256]",
      },
    ],
    name: "updateWithdrawalTree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_depositRoots",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "_withdrawalRoots",
        type: "bytes32[]",
      },
    ],
    name: "validateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawalRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawals",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalsV1Length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040526000805462010000600160501b03191690553480156200002457600080fd5b506040516200338138038062003381833981016040819052620000479162000317565b6001600160601b0319606085811b821660805284901b1660a0527fff0000000000000000000000000000000000000000000000000000000000000060f882901b16610100526040805180820190915260118152706465706f736974732875696e743235362960781b602080830191909152835190840151620000cd928692909162000129565b60c052604080518082018252601481527f7769746864726177616c732875696e743235362900000000000000000000000060208201529083015160608401516200011b928692909162000129565b60e05250620004b892505050565b6000806200013986868662000239565b90505b8062000154576200014e83856200043c565b62000160565b62000160838562000400565b93506200016f86868662000239565b1515811515146200013c5760008162000194576200018e848662000400565b62000196565b845b9050600082620001a75785620001b3565b620001b385876200043c565b905060006002620001c5838562000400565b620001d191906200041b565b90505b808210156200021f57620001ea89898362000239565b15620001f957809150620001fd565b8092505b60026200020b848462000400565b6200021791906200041b565b9050620001d4565b6200022c81600162000400565b9998505050505050505050565b6000836001600160a01b03166109c484846040516024016200025c9190620003f7565b60408051601f1981840301815290829052916200027991620003d9565b60408051918290039091206020830180516001600160e01b03166001600160e01b031990921691909117905251620002b29190620003d9565b6000604051808303818686fa925050503d8060008114620002f0576040519150601f19603f3d011682016040523d82523d6000602084013e620002f5565b606091505b509095945050505050565b805160ff811681146200031257600080fd5b919050565b60008060008084860360e08112156200032e578485fd5b85516200033b816200049f565b60208701519095506200034e816200049f565b93506080603f198201121562000362578283fd5b50604051608081016001600160401b03811182821017156200039257634e487b7160e01b84526041600452602484fd5b806040525060408601518152606086015160208201526080860151604082015260a0860151606082015280925050620003ce60c0860162000300565b905092959194509250565b60008251620003ed81846020870162000456565b9190910192915050565b90815260200190565b6000821982111562000416576200041662000489565b500190565b6000826200043757634e487b7160e01b81526012600452602481fd5b500490565b60008282101562000451576200045162000489565b500390565b60005b838110156200047357818101518382015260200162000459565b8381111562000483576000848401525b50505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620004b557600080fd5b50565b60805160601c60a05160601c60c05160e0516101005160f81c612def62000592600039600081816106d20152818161071f015281816108cc01528181610942015281816109bb01526111f2015260008181610b580152818161104c01528181611d250152611e5a015260008181610c4101528181610eb1015281816117530152611888015260008181610b7c01528181610d4b01528181610de401528181610ed801528181610f820152818161178e0152611d60015260008181610cce015281816111190152818161115801526113240152612def6000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80638895b8ef1161015c578063b4a6359e116100ce578063e91e13a911610087578063e91e13a91461050d578063ec05754c14610515578063f154240a14610528578063f877bfc614610530578063f88bf32c14610538578063fa7316871461054b5761027f565b8063b4a6359e146104a1578063c6758d6b146104a9578063cd87a3b4146104bc578063d38311a4146104c4578063dbc916b8146104d7578063e70ea87c146104fa5761027f565b8063a623f02e11610120578063a623f02e14610450578063abcfc75f14610463578063adb618321461046b578063adc13d3c14610473578063ae8ca8051461047b578063b02c43d01461048e5761027f565b80638895b8ef146104075780639ef46d0f1461040f578063a25da83c14610422578063a2b28fe614610435578063a35a50841461043d5761027f565b8063485cc955116101f557806370d90b94116101b957806370d90b94146103a9578063710daf4d146103bc57806371523c32146103c4578063715d3a43146103d95780637534b4bf146103ec57806376eabbf7146103f45761027f565b8063485cc955146103605780634a20de58146103735780634a7a3e401461037b5780635aa6e6751461038e5780635cc07076146103965761027f565b8063218df2e311610247578063218df2e31461030d5780632fb7749d14610315578063354b0e421461031d5780633fec28371461033257806342105d0b1461034557806344c8db39146103585761027f565b806301ae19201461028457806302709f671461029957806304035c6e146102b757806306efc4c5146102d75780631e627617146102f7575b600080fd5b61029761029236600461226a565b61055e565b005b6102a161062b565b6040516102ae91906125e2565b60405180910390f35b6102ca6102c53660046122cd565b610631565b6040516102ae91906125d7565b6102ea6102e536600461234e565b6108af565b6040516102ae9190612adc565b6102ff6108c7565b6040516102ae9291906125a9565b6102a1610b32565b6102a1610b56565b610325610b7a565b6040516102ae9190612574565b6102ca61034036600461234e565b610b9e565b6102a16103533660046124f3565b610c22565b6102a1610c3f565b61029761036e366004612295565b610c63565b610325611085565b6102ca61038936600461234e565b611094565b610325611117565b6102a16103a436600461234e565b61113b565b6102976103b7366004612247565b61114d565b6102a16111eb565b6103cc6111f0565b6040516102ae9190612aed565b6102ca6103e7366004612428565b611214565b6102ea6112d3565b6102a16104023660046124f3565b6112e5565b6102a1611302565b6102a161041d36600461234e565b611307565b610297610430366004612247565b611319565b6102a16113ac565b6102ca61044b3660046124d2565b6113b2565b6102a161045e36600461234e565b611445565b610325611457565b6102a1611466565b6102a161146a565b6102ea61048936600461234e565b611490565b6102a161049c36600461234e565b6114a8565b6102a16114ba565b6102976104b736600461226a565b6114c0565b6102ea611584565b6102976104d236600461237e565b611589565b6104ea6104e536600461234e565b611b02565b6040516102ae9493929190612ac1565b6102a161050836600461234e565b611b3c565b6102a1611b4e565b61029761052336600461237e565b611b5a565b6102a16120de565b6102ea6120e4565b6102ca6105463660046124d2565b6120f7565b6102ca61055936600461234e565b61218a565b6003546001600160a01b031633146105915760405162461bcd60e51b815260040161058890612a99565b60405180910390fd5b600954828261059e611466565b6040516020016105b093929190612588565b60408051601f19818403018152918152815160209283012060008481526008909352912055817f5d3e96213d4520bdc95a25d628a39768f1a90a2b939894355479596910d179df84610600611466565b8460405161061093929190612588565b60405180910390a2610623816001612b25565b600955505050565b60095481565b60006106648360008151811061065757634e487b7160e01b600052603260045260246000fd5b6020026020010151610b9e565b6106805760405162461bcd60e51b8152600401610588906128eb565b6106b1826000815181106106a457634e487b7160e01b600052603260045260246000fd5b6020026020010151611094565b6106cd5760405162461bcd60e51b81526004016105889061292f565b6106f87f00000000000000000000000000000000000000000000000000000000000000006001612b65565b60ff1683511461071a5760405162461bcd60e51b8152600401610588906128a8565b6107457f00000000000000000000000000000000000000000000000000000000000000006001612b65565b60ff168251146107675760405162461bcd60e51b815260040161058890612a53565b60005b600d548110156108a3576000600d828154811061079757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905061081b8160000151868460016107f09190612b25565b8151811061080e57634e487b7160e01b600052603260045260246000fd5b60200260200101516113b2565b6108375760405162461bcd60e51b815260040161058890612871565b80516108749085610849856001612b25565b8151811061086757634e487b7160e01b600052603260045260246000fd5b60200260200101516120f7565b6108905760405162461bcd60e51b815260040161058890612672565b508061089b81612d0d565b91505061076a565b50600190505b92915050565b60116020526000908152604090205463ffffffff1681565b6060807f000000000000000000000000000000000000000000000000000000000000000060ff1667ffffffffffffffff81111561091457634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561093d578160200160208202803683370190505b5091507f000000000000000000000000000000000000000000000000000000000000000060ff1667ffffffffffffffff81111561098a57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156109b3578160200160208202803683370190505b50905060005b7f000000000000000000000000000000000000000000000000000000000000000060ff16811015610b2d576109ef816001612b25565b600d5410610aba57600d8181548110610a1857634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160010154838281518110610a4a57634e487b7160e01b600052603260045260246000fd5b602002602001018181525050600d8181548110610a7757634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160020154828281518110610aa957634e487b7160e01b600052603260045260246000fd5b602002602001018181525050610b1b565b6000801b838281518110610ade57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250506000801b828281518110610b0e57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505b80610b2581612d0d565b9150506109b9565b509091565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081610bad57506000610c1d565b60005462010000900463ffffffff16805b63ffffffff8116600090815260016020526040902054841415610be657600192505050610c1d565b63ffffffff8116610bf5575060055b80610bff81612ced565b9150508163ffffffff168163ffffffff161415610bbe576000925050505b919050565b600e60209081526000928352604080842090915290825290205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600054610100900460ff1680610c7c575060005460ff16155b610c985760405162461bcd60e51b815260040161058890612823565b600054610100900460ff16158015610cc3576000805460ff1961ff0019909116610100171660011790555b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d0b5760405162461bcd60e51b8152600401610588906127dc565b600380546001600160a01b038086166001600160a01b031992831617909255600480548584169216919091178155604080516344aaff4560e11b815290517f000000000000000000000000000000000000000000000000000000000000000090931692638955fe8a92828101926020929190829003018186803b158015610d9157600080fd5b505afa158015610da5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc99190612366565b600160008081526020019081526020016000208190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b4a6359e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e3b57600080fd5b505afa158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e739190612366565b9050610e8160086002612bd0565b610e8b9082612d28565b15610ea85760405162461bcd60e51b8152600401610588906126b4565b806007819055507f00000000000000000000000000000000000000000000000000000000000000006006819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c34c78826040518163ffffffff1660e01b815260040160206040518083038186803b158015610f2f57600080fd5b505afa158015610f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f679190612366565b600260008081526020019081526020016000208190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2b28fe66040518163ffffffff1660e01b815260040160206040518083038186803b158015610fd957600080fd5b505afa158015610fed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110119190612366565b905061101f60086002612bd0565b6110299082612d28565b156110465760405162461bcd60e51b8152600401610588906126b4565b600a55507f00000000000000000000000000000000000000000000000000000000000000006009558015611080576000805461ff00191690555b505050565b6004546001600160a01b031681565b6000816110a357506000610c1d565b600054600160301b900463ffffffff16805b63ffffffff81166000908152600260205260409020548414156110dd57600192505050610c1d565b63ffffffff81166110ec575060055b806110f681612ced565b9150508163ffffffff168163ffffffff1614156110b5575060009392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60086020526000908152604090205481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111955760405162461bcd60e51b8152600401610588906127dc565b600380546001600160a01b0319166001600160a01b0383161790556040517ffc80377ca9c49cc11ae6982f390a42db976d5530af7c43889264b13fbbd7c57e906111e0908390612574565b60405180910390a150565b603881565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000836001600160a01b03166109c4848460405160240161123591906125e2565b60408051601f19818403018152908290529161125091612558565b60408051918290039091206020830180516001600160e01b03166001600160e01b0319909216919091179052516112879190612558565b6000604051808303818686fa925050503d80600081146112c3576040519150601f19603f3d011682016040523d82523d6000602084013e6112c8565b606091505b509095945050505050565b60005462010000900463ffffffff1681565b600f60209081526000928352604080842090915290825290205481565b600881565b60016020526000908152604090205481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113615760405162461bcd60e51b8152600401610588906127dc565b600480546001600160a01b0319166001600160a01b0383161790556040517fd24015cc99cc1700cafca3042840a1d8ac1e3964fd2e0e37ea29c654056ee327906111e0908390612574565b600a5481565b6000816113c1575060006108a9565b60008381526010602052604090205463ffffffff16805b6000858152600e6020908152604080832063ffffffff8516845290915290205484141561140a576001925050506108a9565b63ffffffff8116611419575060055b8061142381612ced565b9150508163ffffffff168163ffffffff1614156113d857506000949350505050565b60026020526000908152604090205481565b6003546001600160a01b031681565b4290565b603861147860086002612bd0565b6114829190612c9e565b61148d906044612b25565b81565b60106020526000908152604090205463ffffffff1681565b60056020526000908152604090205481565b60075481565b6003546001600160a01b031633146114ea5760405162461bcd60e51b815260040161058890612a99565b60065482826114f7611466565b60405160200161150993929190612588565b60408051601f19818403018152918152815160209283012060008481526005909352912055817fc711bd1d2cdd9c8978324cc83ce34c17f6ada898f8273efeb9585c1312d4ef6784611559611466565b8460405161156993929190612588565b60405180910390a261157c816001612b25565b600655505050565b600581565b6007546000805462010000900463ffffffff1681526001602052604090205485146115c65760405162461bcd60e51b8152600401610588906129e7565b600881901c8363ffffffff16146115ef5760405162461bcd60e51b815260040161058890612a1c565b600060386115ff60086002612bd0565b6116099190612c9e565b611614906044612b25565b67ffffffffffffffff81111561163a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611664576020820181803683370190505b50905083604482015284604082015285602082015260005b61168860086002612bd0565b81101561193b576000806000868461010081106116b557634e487b7160e01b600052603260045260246000fd5b6060020135878561010081106116db57634e487b7160e01b600052603260045260246000fd5b6060020160200160208101906116f19190612247565b8886610100811061171257634e487b7160e01b600052603260045260246000fd5b6060020160400135925092509250600082848360405160200161173793929190612588565b60405160208183030381529060405280519060200120905060007f0000000000000000000000000000000000000000000000000000000000000000868961177e9190612b25565b101561182e576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663b02c43d06117bd888b612b25565b6040518263ffffffff1660e01b81526004016117d991906125e2565b60206040518083038186803b1580156117f157600080fd5b505afa158015611805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118299190612366565b61184c565b6005600061183c888b612b25565b8152602001908152602001600020545b905080821461186d5760405162461bcd60e51b8152600401610588906127b1565b85603802870183607c82015284605c820152856048820152507f000000000000000000000000000000000000000000000000000000000000000086896118b39190612b25565b106118dd57600560006118c6888b612b25565b815260200190815260200160002060009055611923565b847fc711bd1d2cdd9c8978324cc83ce34c17f6ada898f8273efeb9585c1312d4ef67858561190b8a8d612b25565b60405161191a93929190612588565b60405180910390a25b5050505050808061193390612d0d565b91505061167c565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000160028360405161196f9190612558565b602060405180830381855afa15801561198c573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906119af9190612366565b6119b99190612d28565b90508781146119da5760405162461bcd60e51b815260040161058890612647565b60048054604080516020810182528481529051632363e29760e21b81526001600160a01b0390921692638d8f8a5c92611a17928f928f92016125eb565b60206040518083038186803b158015611a2f57600080fd5b505afa158015611a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a67919061232e565b611a835760405162461bcd60e51b8152600401610588906126eb565b60008054600590611aa19062010000900463ffffffff166001612b3d565b611aab9190612d3c565b6000805465ffffffff000019166201000063ffffffff841690810291909117825581526001602052604090208890559050611ae860086002612bd0565b611af29085612b25565b6007555050505050505050505050565b600d8181548110611b1257600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600b6020526000908152604090205481565b61148d60086002612bd0565b600a5460008054600160301b900463ffffffff168152600260205260409020548514611b985760405162461bcd60e51b815260040161058890612976565b600881901c8363ffffffff1614611bc15760405162461bcd60e51b81526004016105889061272c565b60006038611bd160086002612bd0565b611bdb9190612c9e565b611be6906044612b25565b67ffffffffffffffff811115611c0c57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c36576020820181803683370190505b50905083604482015284604082015285602082015260005b611c5a60086002612bd0565b811015611f0d57600080600086846101008110611c8757634e487b7160e01b600052603260045260246000fd5b606002013587856101008110611cad57634e487b7160e01b600052603260045260246000fd5b606002016020016020810190611cc39190612247565b88866101008110611ce457634e487b7160e01b600052603260045260246000fd5b60600201604001359250925092506000828483604051602001611d0993929190612588565b60405160208183030381529060405280519060200120905060007f00000000000000000000000000000000000000000000000000000000000000008689611d509190612b25565b1015611e00576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016635cc07076611d8f888b612b25565b6040518263ffffffff1660e01b8152600401611dab91906125e2565b60206040518083038186803b158015611dc357600080fd5b505afa158015611dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dfb9190612366565b611e1e565b60086000611e0e888b612b25565b8152602001908152602001600020545b9050808214611e3f5760405162461bcd60e51b8152600401610588906129b9565b85603802870183607c82015284605c820152856048820152507f00000000000000000000000000000000000000000000000000000000000000008689611e859190612b25565b10611eaf5760086000611e98888b612b25565b815260200190815260200160002060009055611ef5565b847f5d3e96213d4520bdc95a25d628a39768f1a90a2b939894355479596910d179df8585611edd8a8d612b25565b604051611eec93929190612588565b60405180910390a25b50505050508080611f0590612d0d565b915050611c4e565b5060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001600283604051611f419190612558565b602060405180830381855afa158015611f5e573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611f819190612366565b611f8b9190612d28565b9050878114611fac5760405162461bcd60e51b815260040161058890612647565b60048054604080516020810182528481529051632363e29760e21b81526001600160a01b0390921692638d8f8a5c92611fe9928f928f92016125eb565b60206040518083038186803b15801561200157600080fd5b505afa158015612015573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612039919061232e565b6120555760405162461bcd60e51b81526004016105889061276d565b6000805460059061207490600160301b900463ffffffff166001612b3d565b61207e9190612d3c565b6000805469ffffffff0000000000001916600160301b63ffffffff841690810291909117825581526002602081905260409091208990559091506120c490600890612bd0565b6120ce9085612b25565b600a555050505050505050505050565b60065481565b600054600160301b900463ffffffff1681565b600081612106575060006108a9565b60008381526010602052604090205463ffffffff16805b6000858152600f6020908152604080832063ffffffff8516845290915290205484141561214f576001925050506108a9565b63ffffffff811661215e575060055b8061216881612ced565b9150508163ffffffff168163ffffffff16141561211d57506000949350505050565b600c6020526000908152604090205460ff1681565b600082601f8301126121af578081fd5b8135602067ffffffffffffffff8211156121cb576121cb612d8b565b8082026121d9828201612afb565b8381528281019086840183880185018910156121f3578687fd5b8693505b858410156122155780358352600193909301929184019184016121f7565b50979650505050505050565b8061600081018310156108a957600080fd5b803563ffffffff81168114610c1d57600080fd5b600060208284031215612258578081fd5b813561226381612da1565b9392505050565b6000806040838503121561227c578081fd5b823561228781612da1565b946020939093013593505050565b600080604083850312156122a7578182fd5b82356122b281612da1565b915060208301356122c281612da1565b809150509250929050565b600080604083850312156122df578182fd5b823567ffffffffffffffff808211156122f6578384fd5b6123028683870161219f565b93506020850135915080821115612317578283fd5b506123248582860161219f565b9150509250929050565b60006020828403121561233f578081fd5b81518015158114612263578182fd5b60006020828403121561235f578081fd5b5035919050565b600060208284031215612377578081fd5b5051919050565b60008060008060008060006160a0888a031215612399578283fd5b873567ffffffffffffffff808211156123b0578485fd5b818a0191508a601f8301126123c3578485fd5b8135818111156123d1578586fd5b8b60208285010111156123e2578586fd5b602092830199509750508801359450604088013593506060880135925061240b60808901612233565b915061241a8960a08a01612221565b905092959891949750929550565b60008060006060848603121561243c578283fd5b833561244781612da1565b925060208481013567ffffffffffffffff80821115612464578485fd5b818701915087601f830112612477578485fd5b81358181111561248957612489612d8b565b61249b601f8201601f19168501612afb565b915080825288848285010111156124b0578586fd5b8084840185840137810190920193909352929592945050506040919091013590565b600080604083850312156124e4578182fd5b50508035926020909101359150565b60008060408385031215612505578182fd5b8235915061251560208401612233565b90509250929050565b6000815180845260208085019450808401835b8381101561254d57815187529582019590820190600101612531565b509495945050505050565b6000825161256a818460208701612cbd565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039390931683526020830191909152604082015260600190565b6000604082526125bc604083018561251e565b82810360208401526125ce818561251e565b95945050505050565b901515815260200190565b90815260200190565b6000604082528360408301528385606084013780606085840101526060601f19601f860116830101905060208083018460005b600181101561263b5781518352918301919083019060010161261e565b50505050949350505050565b602080825260119082015270092dcecc2d8d2c840c2e4cee640d0c2e6d607b1b604082015260600190565b60208082526022908201527f7769746864726177616c204e65696768626f7220726f6f74206e6f7420666f756040820152611b9960f21b606082015260800190565b6020808252601b908201527f496e636f727265637420416e63686f7254726565732073746174650000000000604082015260600190565b60208082526021908201527f496e76616c6964206465706f7369742074726565207570646174652070726f6f6040820152603360f91b606082015260800190565b60208082526021908201527f496e636f7272656374207769746864726177616c20696e7365727420696e64656040820152600f60fb1b606082015260800190565b60208082526024908201527f496e76616c6964207769746864726177616c20747265652075706461746520706040820152633937b7b360e11b606082015260800190565b602080825260119082015270125b98dbdc9c9958dd0819195c1bdcda5d607a1b604082015260600190565b60208082526027908201527f4f6e6c7920676f7665726e616e63652063616e20706572666f726d20746869736040820152661030b1ba34b7b760c91b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252601f908201527f6465706f736974204e65696768626f7220726f6f74206e6f7420666f756e6400604082015260600190565b60208082526023908201527f496e636f7272656374206465706f73697420726f6f74206172726179206c656e6040820152620cee8d60eb1b606082015260800190565b60208082526024908201527f43616e6e6f742066696e6420796f7572206465706f736974206d65726b6c65206040820152631c9bdbdd60e21b606082015260800190565b60208082526027908201527f43616e6e6f742066696e6420796f7572207769746864726177616c206d65726b6040820152661b19481c9bdbdd60ca1b606082015260800190565b60208082526023908201527f50726f706f736564207769746864726177616c20726f6f7420697320696e76616040820152621b1a5960ea1b606082015260800190565b602080825260149082015273125b98dbdc9c9958dd081dda5d1a191c985dd85b60621b604082015260600190565b6020808252818101527f50726f706f736564206465706f73697420726f6f7420697320696e76616c6964604082015260600190565b6020808252601e908201527f496e636f7272656374206465706f73697420696e7365727420696e6465780000604082015260600190565b60208082526026908201527f496e636f7272656374207769746864726177616c20726f6f74206172726179206040820152650d8cadccee8d60d31b606082015260800190565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b93845260208401929092526040830152606082015260800190565b63ffffffff91909116815260200190565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715612b1d57612b1d612d8b565b604052919050565b60008219821115612b3857612b38612d5f565b500190565b600063ffffffff808316818516808303821115612b5c57612b5c612d5f565b01949350505050565b600060ff821660ff84168060ff03821115612b8257612b82612d5f565b019392505050565b80825b6001808611612b9c5750612bc7565b818704821115612bae57612bae612d5f565b80861615612bbb57918102915b9490941c938002612b8d565b94509492505050565b60006122636000198484600082612be957506001612263565b81612bf657506000612263565b8160018114612c0c5760028114612c1657612c43565b6001915050612263565b60ff841115612c2757612c27612d5f565b6001841b915084821115612c3d57612c3d612d5f565b50612263565b5060208310610133831016604e8410600b8410161715612c76575081810a83811115612c7157612c71612d5f565b612263565b612c838484846001612b8a565b808604821115612c9557612c95612d5f565b02949350505050565b6000816000190483118215151615612cb857612cb8612d5f565b500290565b60005b83811015612cd8578181015183820152602001612cc0565b83811115612ce7576000848401525b50505050565b600063ffffffff821680612d0357612d03612d5f565b6000190192915050565b6000600019821415612d2157612d21612d5f565b5060010190565b600082612d3757612d37612d75565b500690565b600063ffffffff80841680612d5357612d53612d75565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114612db657600080fd5b5056fea264697066735822122095aab2fa32d527ed9c59779fdb03de800d1af0c132df6c11b242a97f703cc29f64736f6c63430008000033";

export class AnchorTrees__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _governance: string,
    _anchorTreesV1: string,
    _searchParams: {
      depositsFrom: BigNumberish;
      depositsStep: BigNumberish;
      withdrawalsFrom: BigNumberish;
      withdrawalsStep: BigNumberish;
    },
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AnchorTrees> {
    return super.deploy(
      _governance,
      _anchorTreesV1,
      _searchParams,
      _maxEdges,
      overrides || {}
    ) as Promise<AnchorTrees>;
  }
  getDeployTransaction(
    _governance: string,
    _anchorTreesV1: string,
    _searchParams: {
      depositsFrom: BigNumberish;
      depositsStep: BigNumberish;
      withdrawalsFrom: BigNumberish;
      withdrawalsStep: BigNumberish;
    },
    _maxEdges: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governance,
      _anchorTreesV1,
      _searchParams,
      _maxEdges,
      overrides || {}
    );
  }
  attach(address: string): AnchorTrees {
    return super.attach(address) as AnchorTrees;
  }
  connect(signer: Signer): AnchorTrees__factory {
    return super.connect(signer) as AnchorTrees__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnchorTreesInterface {
    return new utils.Interface(_abi) as AnchorTreesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnchorTrees {
    return new Contract(address, _abi, signerOrProvider) as AnchorTrees;
  }
}
